[
  {
    "name": "chrome.accessibilityFeatures",
    "shortName": "accessibilityFeatures",
    "comment": "<p>Use the <code>chrome.accessibilityFeatures</code> API to manage Chrome's\naccessibility features. This API relies on the <a\nhref=\"../types/#ChromeSetting\">ChromeSetting prototype of the type API</a> for\ngetting and setting individual accessibility features. In order to get\nfeature states the extension must request\n<code>accessibilityFeatures.read</code> permission. For modifying feature\nstate, the extension needs <code>accessibilityFeatures.modify</code>\npermission. Note that <code>accessibilityFeatures.modify</code> does not\nimply <code>accessibilityFeatures.read</code> permission.</p>",
    "types": [],
    "properties": [
      {
        "type": "reference",
        "referenceType": "types.ChromeSetting",
        "referenceLink": "../types/#type-ChromeSetting",
        "referenceTemplates": [
          {
            "type": "union",
            "isEnum": true,
            "options": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "literalValue": "\"allowed\""
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "literalValue": "\"once\""
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "literalValue": "\"none\""
              }
            ]
          }
        ],
        "comment": "<p><code>get()</code> requires <code>accessibilityFeatures.read</code>\npermission. <code>set()</code> and <code>clear()</code> require\n<code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "animationPolicy"
      },
      {
        "type": "reference",
        "referenceType": "types.ChromeSetting",
        "referenceLink": "../types/#type-ChromeSetting",
        "referenceTemplates": [
          {
            "type": "primitive",
            "primitiveType": "boolean"
          }
        ],
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Auto mouse click after mouse stops\nmoving. The value indicates whether the feature is enabled or not.\n<code>get()</code> requires <code>accessibilityFeatures.read</code>\npermission. <code>set()</code> and <code>clear()</code> require\n<code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "autoclick"
      },
      {
        "type": "reference",
        "referenceType": "types.ChromeSetting",
        "referenceLink": "../types/#type-ChromeSetting",
        "referenceTemplates": [
          {
            "type": "primitive",
            "primitiveType": "boolean"
          }
        ],
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Caret highlighting. The value\nindicates whether the feature is enabled or not. <code>get()</code> requires\n<code>accessibilityFeatures.read</code> permission. <code>set()</code> and\n<code>clear()</code> require <code>accessibilityFeatures.modify</code>\npermission.</p>",
        "name": "caretHighlight"
      },
      {
        "type": "reference",
        "referenceType": "types.ChromeSetting",
        "referenceLink": "../types/#type-ChromeSetting",
        "referenceTemplates": [
          {
            "type": "primitive",
            "primitiveType": "boolean"
          }
        ],
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Cursor color. The value indicates\nwhether the feature is enabled or not, doesn't indicate the color of it.\n<code>get()</code> requires <code>accessibilityFeatures.read</code>\npermission. <code>set()</code> and <code>clear()</code> require\n<code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "cursorColor"
      },
      {
        "type": "reference",
        "referenceType": "types.ChromeSetting",
        "referenceLink": "../types/#type-ChromeSetting",
        "referenceTemplates": [
          {
            "type": "primitive",
            "primitiveType": "boolean"
          }
        ],
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Cursor highlighting. The value\nindicates whether the feature is enabled or not. <code>get()</code> requires\n<code>accessibilityFeatures.read</code> permission. <code>set()</code> and\n<code>clear()</code> require <code>accessibilityFeatures.modify</code>\npermission.</p>",
        "name": "cursorHighlight"
      },
      {
        "type": "reference",
        "referenceType": "types.ChromeSetting",
        "referenceLink": "../types/#type-ChromeSetting",
        "referenceTemplates": [
          {
            "type": "primitive",
            "primitiveType": "boolean"
          }
        ],
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Docked magnifier. The value\nindicates whether docked magnifier feature is enabled or not.\n<code>get()</code> requires <code>accessibilityFeatures.read</code>\npermission. <code>set()</code> and <code>clear()</code> require\n<code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "dockedMagnifier"
      },
      {
        "type": "reference",
        "referenceType": "types.ChromeSetting",
        "referenceLink": "../types/#type-ChromeSetting",
        "referenceTemplates": [
          {
            "type": "primitive",
            "primitiveType": "boolean"
          }
        ],
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Focus highlighting. The value\nindicates whether the feature is enabled or not. <code>get()</code> requires\n<code>accessibilityFeatures.read</code> permission. <code>set()</code> and\n<code>clear()</code> require <code>accessibilityFeatures.modify</code>\npermission.</p>",
        "name": "focusHighlight"
      },
      {
        "type": "reference",
        "referenceType": "types.ChromeSetting",
        "referenceLink": "../types/#type-ChromeSetting",
        "referenceTemplates": [
          {
            "type": "primitive",
            "primitiveType": "boolean"
          }
        ],
        "comment": "<p><strong>ChromeOS only.</strong></p><p>High contrast rendering mode. The\nvalue indicates whether the feature is enabled or not. <code>get()</code>\nrequires <code>accessibilityFeatures.read</code> permission.\n<code>set()</code> and <code>clear()</code> require\n<code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "highContrast"
      },
      {
        "type": "reference",
        "referenceType": "types.ChromeSetting",
        "referenceLink": "../types/#type-ChromeSetting",
        "referenceTemplates": [
          {
            "type": "primitive",
            "primitiveType": "boolean"
          }
        ],
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Enlarged cursor. The value indicates\nwhether the feature is enabled or not. <code>get()</code> requires\n<code>accessibilityFeatures.read</code> permission. <code>set()</code> and\n<code>clear()</code> require <code>accessibilityFeatures.modify</code>\npermission.</p>",
        "name": "largeCursor"
      },
      {
        "type": "reference",
        "referenceType": "types.ChromeSetting",
        "referenceLink": "../types/#type-ChromeSetting",
        "referenceTemplates": [
          {
            "type": "primitive",
            "primitiveType": "boolean"
          }
        ],
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Full screen magnification. The value\nindicates whether the feature is enabled or not. <code>get()</code> requires\n<code>accessibilityFeatures.read</code> permission. <code>set()</code> and\n<code>clear()</code> require <code>accessibilityFeatures.modify</code>\npermission.</p>",
        "name": "screenMagnifier"
      },
      {
        "type": "reference",
        "referenceType": "types.ChromeSetting",
        "referenceLink": "../types/#type-ChromeSetting",
        "referenceTemplates": [
          {
            "type": "primitive",
            "primitiveType": "boolean"
          }
        ],
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Select-to-speak. The value indicates\nwhether the feature is enabled or not. <code>get()</code> requires\n<code>accessibilityFeatures.read</code> permission. <code>set()</code> and\n<code>clear()</code> require <code>accessibilityFeatures.modify</code>\npermission.</p>",
        "name": "selectToSpeak"
      },
      {
        "type": "reference",
        "referenceType": "types.ChromeSetting",
        "referenceLink": "../types/#type-ChromeSetting",
        "referenceTemplates": [
          {
            "type": "primitive",
            "primitiveType": "boolean"
          }
        ],
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Spoken feedback (text-to-speech).\nThe value indicates whether the feature is enabled or not. <code>get()</code>\nrequires <code>accessibilityFeatures.read</code> permission.\n<code>set()</code> and <code>clear()</code> require\n<code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "spokenFeedback"
      },
      {
        "type": "reference",
        "referenceType": "types.ChromeSetting",
        "referenceLink": "../types/#type-ChromeSetting",
        "referenceTemplates": [
          {
            "type": "primitive",
            "primitiveType": "boolean"
          }
        ],
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Sticky modifier keys (like shift or\nalt). The value indicates whether the feature is enabled or not.\n<code>get()</code> requires <code>accessibilityFeatures.read</code>\npermission. <code>set()</code> and <code>clear()</code> require\n<code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "stickyKeys"
      },
      {
        "type": "reference",
        "referenceType": "types.ChromeSetting",
        "referenceLink": "../types/#type-ChromeSetting",
        "referenceTemplates": [
          {
            "type": "primitive",
            "primitiveType": "boolean"
          }
        ],
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Switch Access. The value indicates\nwhether the feature is enabled or not. <code>get()</code> requires\n<code>accessibilityFeatures.read</code> permission. <code>set()</code> and\n<code>clear()</code> require <code>accessibilityFeatures.modify</code>\npermission.</p>",
        "name": "switchAccess"
      },
      {
        "type": "reference",
        "referenceType": "types.ChromeSetting",
        "referenceLink": "../types/#type-ChromeSetting",
        "referenceTemplates": [
          {
            "type": "primitive",
            "primitiveType": "boolean"
          }
        ],
        "comment": "<p><strong>ChromeOS only.</strong></p><p>Virtual on-screen keyboard. The\nvalue indicates whether the feature is enabled or not. <code>get()</code>\nrequires <code>accessibilityFeatures.read</code> permission.\n<code>set()</code> and <code>clear()</code> require\n<code>accessibilityFeatures.modify</code> permission.</p>",
        "name": "virtualKeyboard"
      }
    ],
    "methods": [],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "accessibilityFeatures.modify",
      "accessibilityFeatures.read\n"
    ],
    "platforms": [
      "chromeos"
    ]
  },
  {
    "name": "chrome.action",
    "shortName": "action",
    "comment": "<p>Use the <code>chrome.action</code> API to control the extension's icon in the\nGoogle Chrome toolbar.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID of the tab to query state for. If no tab is specified, the\nnon-tab-specific state is returned.</p>",
            "optional": true,
            "name": "tabId"
          }
        ],
        "name": "TabDetails"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "tabId",
            "comment": "<p>The id of the tab for which you want to modify the action.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Disables the action for a tab.</p>",
        "name": "disable"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "tabId",
            "comment": "<p>The id of the tab for which you want to modify the action.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Enables the action for a tab. By default, actions are enabled.</p>",
        "name": "enable"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "TabDetails",
            "referenceLink": "#type-TabDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "browserAction.ColorArray",
                "referenceLink": "../browserAction/#type-ColorArray",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the background color of the action.</p>",
        "name": "getBadgeBackgroundColor"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "TabDetails",
            "referenceLink": "#type-TabDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the badge text of the action. If no tab is specified, the\nnon-tab-specific badge text is returned. If <a\nhref=\"../declarativeNetRequest/#setExtensionActionOptions\">displayActionCountAsBadgeText</a> is enabled, a placeholder text will be returned unless the <a href=\"../../declare_permissions/#declarativeNetRequestFeedback\">declarativeNetRequestFeedback</a> permission is present or tab-specific badge text was provided.</p>",
        "name": "getBadgeText"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "TabDetails",
            "referenceLink": "#type-TabDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the html document set as the popup for this action.</p>",
        "name": "getPopup"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "TabDetails",
            "referenceLink": "#type-TabDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the title of the action.</p>",
        "name": "getTitle"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "union",
                "isEnum": false,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "string"
                  },
                  {
                    "type": "reference",
                    "referenceType": "browserAction.ColorArray",
                    "referenceLink": "../browserAction/#type-ColorArray"
                  }
                ],
                "comment": "<p>An array of four integers in the range [0,255] that make up the RGBA color of\nthe badge. For example, opaque red is <code>[255, 0, 0, 255]</code>. Can also\nbe a string with a CSS value, with opaque red being <code>#FF0000</code> or\n<code>#F00</code>.</p>",
                "name": "color"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Limits the change to when a particular tab is selected. Automatically resets\nwhen the tab is closed.</p>",
                "optional": true,
                "name": "tabId"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets the background color for the badge.</p>",
        "name": "setBadgeBackgroundColor"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Limits the change to when a particular tab is selected. Automatically resets\nwhen the tab is closed.</p>",
                "optional": true,
                "name": "tabId"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>Any number of characters can be passed, but only about four can fit in the\nspace.</p>",
                "name": "text"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets the badge text for the action. The badge is displayed on top of the\nicon.</p>",
        "name": "setBadgeText"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "union",
                "isEnum": false,
                "options": [
                  {
                    "type": "reference",
                    "referenceType": "browserAction.ImageDataType",
                    "referenceLink": "../browserAction/#type-ImageDataType"
                  },
                  {
                    "type": "object",
                    "properties": []
                  }
                ],
                "comment": "<p>Either an ImageData object or a dictionary {size -> ImageData} representing\nicon to be set. If the icon is specified as a dictionary, the actual image to\nbe used is chosen depending on screen's pixel density. If the number of image\npixels that fit into one screen space unit equals <code>scale</code>, then\nimage with size <code>scale</code> * n will be selected, where n is the size\nof the icon in the UI. At least one image must be specified. Note that\n'details.imageData = foo' is equivalent to 'details.imageData = {'16': foo}'</p>",
                "optional": true,
                "name": "imageData"
              },
              {
                "type": "union",
                "isEnum": false,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "string"
                  },
                  {
                    "type": "object",
                    "properties": []
                  }
                ],
                "comment": "<p>Either a relative image path or a dictionary {size -> relative image path}\npointing to icon to be set. If the icon is specified as a dictionary, the\nactual image to be used is chosen depending on screen's pixel density. If the\nnumber of image pixels that fit into one screen space unit equals\n<code>scale</code>, then image with size <code>scale</code> * n will be\nselected, where n is the size of the icon in the UI. At least one image must\nbe specified. Note that 'details.path = foo' is equivalent to 'details.path =\n{'16': foo}'</p>",
                "optional": true,
                "name": "path"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Limits the change to when a particular tab is selected. Automatically resets\nwhen the tab is closed.</p>",
                "optional": true,
                "name": "tabId"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets the icon for the action. The icon can be specified either as the path to\nan image file or as the pixel data from a canvas element, or as dictionary of\neither one of those. Either the <b>path</b> or the <b>imageData</b> property\nmust be specified.</p>",
        "name": "setIcon"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The html file to show in a popup.  If set to the empty string (''), no popup\nis shown.</p>",
                "name": "popup"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Limits the change to when a particular tab is selected. Automatically resets\nwhen the tab is closed.</p>",
                "optional": true,
                "name": "tabId"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets the html document to be opened as a popup when the user clicks on the\naction's icon.</p>",
        "name": "setPopup"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Limits the change to when a particular tab is selected. Automatically resets\nwhen the tab is closed.</p>",
                "optional": true,
                "name": "tabId"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The string the action should display when moused over.</p>",
                "name": "title"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets the title of the action. This shows up in the tooltip.</p>",
        "name": "setTitle"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "tabs.Tab",
                "referenceLink": "../tabs/#type-Tab",
                "optional": false,
                "name": "tab"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when an action icon is clicked.  This event will not fire if the\naction has a popup.</p>",
        "name": "onClicked"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.alarms",
    "shortName": "alarms",
    "comment": "<p>Use the <code>chrome.alarms</code> API to schedule code to run\nperiodically\nor at a specified time in the future.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Name of this alarm.</p>",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>If not null, the alarm is a repeating alarm and will fire again in\n<var>periodInMinutes</var> minutes.</p>",
            "optional": true,
            "name": "periodInMinutes"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Time at which this alarm was scheduled to fire, in milliseconds past the\nepoch (e.g. <code>Date.now() + n</code>).  For performance reasons, the alarm\nmay have been delayed an arbitrary amount beyond this.</p>",
            "name": "scheduledTime"
          }
        ],
        "name": "Alarm"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Length of time in minutes after which the <code>onAlarm</code> event\nshould fire.</p><p><!-- TODO: need minimum=0 --></p>",
            "optional": true,
            "name": "delayInMinutes"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>If set, the onAlarm event should fire every <var>periodInMinutes</var>\nminutes after the initial event specified by <var>when</var> or\n<var>delayInMinutes</var>.  If not set, the alarm will only fire\nonce.</p><p><!-- TODO: need minimum=0 --></p>",
            "optional": true,
            "name": "periodInMinutes"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Time at which the alarm should fire, in milliseconds past the epoch (e.g.\n<code>Date.now() + n</code>).</p>",
            "optional": true,
            "name": "when"
          }
        ],
        "name": "AlarmCreateInfo"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "name",
            "comment": "<p>The name of the alarm to clear. Defaults to the empty string.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "wasCleared"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Clears the alarm with the given name.</p>",
        "name": "clear"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "wasCleared"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Clears all alarms.</p>",
        "name": "clearAll"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "name",
            "comment": "<p>Optional name to identify this alarm. Defaults to the empty string.</p>"
          },
          {
            "type": "reference",
            "referenceType": "AlarmCreateInfo",
            "referenceLink": "#type-AlarmCreateInfo",
            "optional": false,
            "name": "alarmInfo",
            "comment": "<p>Describes when the alarm should fire.  The initial time must be specified by either <var>when</var> or <var>delayInMinutes</var> (but not both).  If <var>periodInMinutes</var> is set, the alarm will repeat every <var>periodInMinutes</var> minutes after the initial event.  If neither <var>when</var> or <var>delayInMinutes</var> is set for a repeating alarm, <var>periodInMinutes</var> is used as the default for <var>delayInMinutes</var>.</p>"
          }
        ],
        "comment": "<p>Creates an alarm.  Near the time(s) specified by <var>alarmInfo</var>, the\n<code>onAlarm</code> event is fired. If there is another alarm with the same\nname (or no name if none is specified), it will be cancelled and replaced by\nthis alarm.</p><p>In order to reduce the load on the user's machine, Chrome\nlimits alarms to at most once every 1 minute but may delay them an arbitrary\namount more.  That is, setting <code>delayInMinutes</code> or\n<code>periodInMinutes</code> to less than <code>1</code> will not be honored\nand will cause a warning.  <code>when</code> can be set to less than 1 minute\nafter \"now\" without warning but won't actually cause the alarm to fire for at\nleast 1 minute.</p><p>To help you debug your app or extension, when you've\nloaded it unpacked, there's no limit to how often the alarm can fire.</p>",
        "name": "create"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "name",
            "comment": "<p>The name of the alarm to get. Defaults to the empty string.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Alarm",
                "referenceLink": "#type-Alarm",
                "optional": false,
                "name": "alarm"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves details about the specified alarm.</p>",
        "name": "get"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Alarm",
                  "referenceLink": "#type-Alarm"
                },
                "optional": false,
                "name": "alarms"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets an array of all the alarms.</p>",
        "name": "getAll"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Alarm",
                "referenceLink": "#type-Alarm",
                "optional": false,
                "name": "alarm",
                "comment": "<p>The alarm that has elapsed.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when an alarm has elapsed. Useful for event pages.</p>",
        "name": "onAlarm"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "alarms\n"
    ]
  },
  {
    "name": "chrome.app.runtime",
    "shortName": "app.runtime",
    "comment": "<p>Use the <code>chrome.app.runtime</code> API to manage the app lifecycle.\nThe\napp runtime manages app installation, controls the event page, and can\nshut\ndown the app at anytime.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ActionType",
            "referenceLink": "#type-ActionType",
            "name": "actionType"
          }
        ],
        "name": "ActionData"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "url"
              }
            ],
            "comment": "<p>Allows <code>embedderId</code> to embed this app in an &lt;appview&gt;\nelement. The <code>url</code> specifies the content to embed.</p>",
            "name": "allow"
          },
          {
            "type": "primitive",
            "primitiveType": "any",
            "comment": "<p>Optional developer specified data that the app to be embedded can use when\nmaking an embedding decision.</p>",
            "optional": true,
            "name": "data"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Prevents <code> embedderId</code> from embedding this app in an\n&lt;appview&gt; element.</p>",
            "name": "deny"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "name": "embedderId"
          }
        ],
        "name": "EmbedRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ActionData",
            "referenceLink": "#type-ActionData",
            "comment": "<p>Contains data that specifies the <code>ActionType</code> this app was\nlaunched with. This is null if the app was not launched with a specific\naction intent.</p>",
            "optional": true,
            "name": "actionData"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The ID of the file or URL handler that the app is being invoked with. Handler\nIDs are the top-level keys in the <code>file_handlers</code> and/or\n<code>url_handlers</code> dictionaries in the manifest.</p>",
            "optional": true,
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the app is being launched in a <a\nhref=\"https://support.google.com/chromebook/answer/3134673\">Chrome OS kiosk\nsession</a>.</p>",
            "optional": true,
            "name": "isKioskSession"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the app is being launched in a <a\nhref=\"https://support.google.com/chrome/a/answer/3017014\">Chrome OS public\nsession</a>.</p>",
            "optional": true,
            "name": "isPublicSession"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "LaunchItem",
              "referenceLink": "#type-LaunchItem"
            },
            "comment": "<p>The file entries for the <code>onLaunched</code> event triggered by a\nmatching file handler in the <code>file_handlers</code> manifest key.</p>",
            "optional": true,
            "name": "items"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The referrer URL for the <code>onLaunched</code> event triggered by a\nmatching URL handler in the <code>url_handlers</code> manifest key.</p>",
            "optional": true,
            "name": "referrerUrl"
          },
          {
            "type": "reference",
            "referenceType": "LaunchSource",
            "referenceLink": "#type-LaunchSource",
            "comment": "<p>Where the app is launched from.</p>",
            "optional": true,
            "name": "source"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL for the <code>onLaunched</code> event triggered by a matching URL\nhandler in the <code>url_handlers</code> manifest key.</p>",
            "optional": true,
            "name": "url"
          }
        ],
        "name": "LaunchData"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "Entry",
            "comment": "<p>Entry for the item.</p>",
            "name": "entry"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The MIME type of the file.</p>",
            "optional": true,
            "name": "type"
          }
        ],
        "name": "LaunchItem"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"new_note\""
          }
        ],
        "comment": "<p>An app can be launched with a specific action in mind, for example, to create\na new note. The type of action the app was launched with is available inside\nof the |actionData| field from the LaunchData instance.</p>",
        "name": "ActionType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"untracked\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"app_launcher\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"new_tab_page\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"reload\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"restart\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"load_and_launch\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"command_line\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"file_handler\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"url_handler\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"system_tray\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"about_page\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"keyboard\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"extensions_page\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"management_api\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ephemeral_app\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"background\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"kiosk\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"chrome_internal\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"test\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"installed_notification\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"context_menu\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"arc\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"intent_url\""
          }
        ],
        "comment": "<p>Enumeration of app launch sources. This should be kept in sync with\nAppLaunchSource in components/services/app_service/public/mojom/types.mojom,\nand GetLaunchSourceEnum() in\nextensions/browser/api/app_runtime/app_runtime_api.cc. Note the enumeration\nis used in UMA histogram so entries should not be re-ordered or removed.</p>",
        "name": "LaunchSource"
      }
    ],
    "properties": [],
    "methods": [],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "EmbedRequest",
                "referenceLink": "#type-EmbedRequest",
                "optional": false,
                "name": "request"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when an embedding app requests to embed this app. This event is\nonly available on dev channel with the flag --enable-app-view.</p>",
        "name": "onEmbedRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "LaunchData",
                "referenceLink": "#type-LaunchData",
                "optional": false,
                "name": "launchData"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when an app is launched from the launcher.</p>",
        "name": "onLaunched"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired at Chrome startup to apps that were running when Chrome last shut\ndown, or when apps have been requested to restart from their previous\nstate for other reasons (e.g. when the user revokes access to an app's\nretained files the runtime will restart the app). In these situations if\napps do not have an <code>onRestarted</code> handler they will be sent an\n<code>onLaunched </code> event instead.</p>",
        "name": "onRestarted"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.app.window",
    "shortName": "app.window",
    "comment": "<p>Use the <code>chrome.app.window</code> API to create windows. Windows\nhave\nan optional frame with title bar and size controls. They are not\nassociated\nwith any Chrome browser windows. See the <a\nhref=\"https://github.com/GoogleChrome/chrome-app-samples/tree/master/samples/window-state\">\nWindow State Sample</a> for a demonstration of these options.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Clear attention to the window.</p>",
            "name": "clearAttention"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Close the window.</p>",
            "name": "close"
          },
          {
            "type": "reference",
            "referenceType": "Window",
            "comment": "<p>The JavaScript 'window' object for the created child.</p>",
            "name": "contentWindow"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Draw attention to the window.</p>",
            "name": "drawAttention"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Focus the window.</p>",
            "name": "focus"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Fullscreens the window.</p><p>The user will be able to restore the window\nby pressing ESC. An application can prevent the fullscreen state to be left\nwhen ESC is pressed by requesting the\n<code>app.window.fullscreen.overrideEsc</code> permission and canceling the\nevent by calling .preventDefault(), in the keydown and keyup handlers, like\nthis:</p><p><code>window.onkeydown = window.onkeyup = function(e) { if\n(e.keyCode == 27 /* ESC &#x2a;/) { e.preventDefault(); } };</code></p><p>Note\n<code>window.fullscreen()</code> will cause the entire window to become\nfullscreen and does not require a user gesture. The HTML5 fullscreen API can\nalso be used to enter fullscreen mode (see <a\nhref=\"http://developer.chrome.com/apps/api_other.html\">Web APIs</a> for more\ndetails).</p>",
            "name": "fullscreen"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "reference",
              "referenceType": "ContentBounds",
              "referenceLink": "#type-ContentBounds",
              "name": "returns"
            },
            "comment": "<p>Get the window's inner bounds as a <a href=\"#type-ContentBounds\"><code>ContentBounds</code></a> object.</p>",
            "deprecated": "Use innerBounds or outerBounds.\n",
            "name": "getBounds"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Hide the window. Does nothing if the window is already hidden.</p>",
            "name": "hide"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The id the window was created with.</p>",
            "name": "id"
          },
          {
            "type": "reference",
            "referenceType": "Bounds",
            "referenceLink": "#type-Bounds",
            "comment": "<p>The position, size and constraints of the window's content, which does not\ninclude window decorations. This property is new in Chrome 36.</p>",
            "name": "innerBounds"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "comment": "<p>Is the window always on top?</p>",
            "name": "isAlwaysOnTop"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "comment": "<p>Is the window fullscreen? This will be true if the window has been created\nfullscreen or was made fullscreen via the <code>AppWindow</code> or HTML5\nfullscreen APIs.</p>",
            "name": "isFullscreen"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "comment": "<p>Is the window maximized?</p>",
            "name": "isMaximized"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "comment": "<p>Is the window minimized?</p>",
            "name": "isMinimized"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Maximize the window.</p>",
            "name": "maximize"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Minimize the window.</p>",
            "name": "minimize"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "left"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "top"
              }
            ],
            "comment": "<p>Move the window to the position (|left|, |top|).</p>",
            "deprecated": "Use outerBounds.\n",
            "name": "moveTo"
          },
          {
            "type": "reference",
            "referenceType": "Bounds",
            "referenceLink": "#type-Bounds",
            "comment": "<p>The position, size and constraints of the window, which includes window\ndecorations, such as the title bar and frame. This property is new in Chrome\n36.</p>",
            "name": "outerBounds"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "width"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "height"
              }
            ],
            "comment": "<p>Resize the window to |width|x|height| pixels in size.</p>",
            "deprecated": "Use outerBounds.\n",
            "name": "resizeTo"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Restore the window, exiting a maximized, minimized, or fullscreen state.</p>",
            "name": "restore"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "alwaysOnTop"
              }
            ],
            "comment": "<p>Set whether the window should stay above most other windows. Requires the\n<code>alwaysOnTopWindows</code> permission.</p>",
            "name": "setAlwaysOnTop"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ContentBounds",
                "referenceLink": "#type-ContentBounds",
                "optional": false,
                "name": "bounds"
              }
            ],
            "comment": "<p>Set the window's inner bounds.</p>",
            "deprecated": "Use innerBounds or outerBounds.\n",
            "name": "setBounds"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "alwaysVisible"
              }
            ],
            "comment": "<p>Set whether the window is visible on all workspaces. (Only for platforms that\nsupport this).</p>",
            "name": "setVisibleOnAllWorkspaces"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "focused"
              }
            ],
            "comment": "<p>Show the window. Does nothing if the window is already visible. Focus the\nwindow if |focused| is set to true or omitted.</p>",
            "name": "show"
          }
        ],
        "name": "AppWindow"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>This property can be used to read or write the current height of the content\nor window.</p>",
            "name": "height"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>This property can be used to read or write the current X coordinate of the\ncontent or window.</p>",
            "name": "left"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>This property can be used to read or write the current maximum height of the\ncontent or window. A value of <code>null</code> indicates 'unspecified'.</p>",
            "optional": true,
            "name": "maxHeight"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>This property can be used to read or write the current maximum width of the\ncontent or window. A value of <code>null</code> indicates 'unspecified'.</p>",
            "optional": true,
            "name": "maxWidth"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>This property can be used to read or write the current minimum height of the\ncontent or window. A value of <code>null</code> indicates 'unspecified'.</p>",
            "optional": true,
            "name": "minHeight"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>This property can be used to read or write the current minimum width of the\ncontent or window. A value of <code>null</code> indicates 'unspecified'.</p>",
            "optional": true,
            "name": "minWidth"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "maxWidth"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "maxHeight"
              }
            ],
            "comment": "<p>Set the maximum size constraints of the content or window. The maximum width\nor height can be set to <code>null</code> to remove the constraint. A value\nof <code>undefined</code> will leave a constraint unchanged.</p>",
            "name": "setMaximumSize"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "minWidth"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "minHeight"
              }
            ],
            "comment": "<p>Set the minimum size constraints of the content or window. The minimum width\nor height can be set to <code>null</code> to remove the constraint. A value\nof <code>undefined</code> will leave a constraint unchanged.</p>",
            "name": "setMinimumSize"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "left"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "top"
              }
            ],
            "comment": "<p>Set the left and top position of the content or window.</p>",
            "name": "setPosition"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "width"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "height"
              }
            ],
            "comment": "<p>Set the width and height of the content or window.</p>",
            "name": "setSize"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>This property can be used to read or write the current Y coordinate of the\ncontent or window.</p>",
            "name": "top"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>This property can be used to read or write the current width of the content\nor window.</p>",
            "name": "width"
          }
        ],
        "name": "Bounds"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The height of the content or window.</p>",
            "optional": true,
            "name": "height"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The X coordinate of the content or window.</p>",
            "optional": true,
            "name": "left"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The maximum height of the content or window.</p>",
            "optional": true,
            "name": "maxHeight"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The maximum width of the content or window.</p>",
            "optional": true,
            "name": "maxWidth"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The minimum height of the content or window.</p>",
            "optional": true,
            "name": "minHeight"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The minimum width of the content or window.</p>",
            "optional": true,
            "name": "minWidth"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The Y coordinate of the content or window.</p>",
            "optional": true,
            "name": "top"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The width of the content or window.</p>",
            "optional": true,
            "name": "width"
          }
        ],
        "name": "BoundsSpecification"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "height"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "left"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "top"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "width"
          }
        ],
        "name": "ContentBounds"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If true, the window will stay above most other windows. If there are\nmultiple windows of this kind, the currently focused window will be in the\nforeground. Requires the <code>alwaysOnTopWindows</code> permission. Defaults\nto false.</p><p>Call <code>setAlwaysOnTop()</code> on the window to change\nthis property after creation.</p>",
            "optional": true,
            "name": "alwaysOnTop"
          },
          {
            "type": "reference",
            "referenceType": "ContentBounds",
            "referenceLink": "#type-ContentBounds",
            "comment": "<p>Size and position of the content in the window (excluding the titlebar). If\nan id is also specified and a window with a matching id has been shown\nbefore, the remembered bounds of the window will be used instead.</p>",
            "deprecated": "Use innerBounds or outerBounds.\n",
            "optional": true,
            "name": "bounds"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If true, the window will be focused when created. Defaults to true.</p>",
            "optional": true,
            "name": "focused"
          },
          {
            "type": "union",
            "isEnum": false,
            "options": [
              {
                "type": "primitive",
                "primitiveType": "string"
              },
              {
                "type": "reference",
                "referenceType": "FrameOptions",
                "referenceLink": "#type-FrameOptions"
              }
            ],
            "comment": "<p>Frame type: <code>none</code> or <code>chrome</code> (defaults to\n<code>chrome</code>). For <code>none</code>, the\n<code>-webkit-app-region</code> CSS property can be used to apply\ndraggability to the app's window. <code>-webkit-app-region: drag</code> can\nbe used to mark regions draggable. <code>no-drag</code> can be used to\ndisable this style on nested elements.</p><p>Use of <code>FrameOptions</code>\nis new in M36.</p>",
            "optional": true,
            "name": "frame"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If true, the window will be created in a hidden state. Call show() on the\nwindow to show it once it has been created. Defaults to false.</p>",
            "optional": true,
            "name": "hidden"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>URL of the window icon. A window can have its own icon when showInShelf is\nset to true. The URL should be a global or an extension local URL.</p>",
            "optional": true,
            "name": "icon"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Id to identify the window. This will be used to remember the size and\nposition of the window and restore that geometry when a window with the same\nid is later opened. If a window with a given id is created while another\nwindow with the same id already exists, the currently opened window will be\nfocused instead of creating a new window.</p>",
            "optional": true,
            "name": "id"
          },
          {
            "type": "reference",
            "referenceType": "BoundsSpecification",
            "referenceLink": "#type-BoundsSpecification",
            "comment": "<p>Used to specify the initial position, initial size and constraints of the\nwindow's content (excluding window decorations). If an <code>id</code> is\nalso specified and a window with a matching <code>id</code> has been shown\nbefore, the remembered bounds will be used instead.</p><p>Note that the\npadding between the inner and outer bounds is determined by the OS. Therefore\nsetting the same bounds property for both the <code>innerBounds</code> and\n<code>outerBounds</code> will result in an error.</p><p>This property is new\nin Chrome 36.</p>",
            "optional": true,
            "name": "innerBounds"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Maximum height of the window.</p>",
            "deprecated": "Use innerBounds or outerBounds.\n",
            "optional": true,
            "name": "maxHeight"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Maximum width of the window.</p>",
            "deprecated": "Use innerBounds or outerBounds.\n",
            "optional": true,
            "name": "maxWidth"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Minimum height of the window.</p>",
            "deprecated": "Use innerBounds or outerBounds.\n",
            "optional": true,
            "name": "minHeight"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Minimum width of the window.</p>",
            "deprecated": "Use innerBounds or outerBounds.\n",
            "optional": true,
            "name": "minWidth"
          },
          {
            "type": "reference",
            "referenceType": "BoundsSpecification",
            "referenceLink": "#type-BoundsSpecification",
            "comment": "<p>Used to specify the initial position, initial size and constraints of the\nwindow (including window decorations such as the title bar and frame). If an\n<code>id</code> is also specified and a window with a matching\n<code>id</code> has been shown before, the remembered bounds will be used\ninstead.</p><p>Note that the padding between the inner and outer bounds is\ndetermined by the OS. Therefore setting the same bounds property for both the\n<code>innerBounds</code> and <code>outerBounds</code> will result in an\nerror.</p><p>This property is new in Chrome 36.</p>",
            "optional": true,
            "name": "outerBounds"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If true, the window will be resizable by the user. Defaults to true.</p>",
            "optional": true,
            "name": "resizable"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If true, the window will have its own shelf icon. Otherwise the window will\nbe grouped in the shelf with other windows that are associated with the app.\nDefaults to false. If showInShelf is set to true you need to specify an id\nfor the window.</p>",
            "optional": true,
            "name": "showInShelf"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>By default if you specify an id for the window, the window will only be\ncreated if another window with the same id doesn't already exist. If a window\nwith the same id already exists that window is activated instead. If you do\nwant to create multiple windows with the same id, you can set this property\nto false.</p>",
            "deprecated": "Multiple windows with the same id is no longer supported.\n",
            "optional": true,
            "name": "singleton"
          },
          {
            "type": "reference",
            "referenceType": "State",
            "referenceLink": "#type-State",
            "comment": "<p>The initial state of the window, allowing it to be created already\nfullscreen, maximized, or minimized. Defaults to 'normal'.</p>",
            "optional": true,
            "name": "state"
          },
          {
            "type": "reference",
            "referenceType": "WindowType",
            "referenceLink": "#type-WindowType",
            "comment": "<p>Type of window to create.</p>",
            "deprecated": "All app windows use the 'shell' window type\n",
            "optional": true,
            "name": "type"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If true, and supported by the platform, the window will be visible on all\nworkspaces.</p>",
            "optional": true,
            "name": "visibleOnAllWorkspaces"
          }
        ],
        "name": "CreateWindowOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Allows the frame color of the window when active to be set. Frame coloring\nis only available if the frame type is <code>chrome</code>.</p><p>Frame\ncoloring is only available if the frame type is\n<code>chrome</code>.</p><p>Frame coloring is new in Chrome 36.</p>",
            "optional": true,
            "name": "activeColor"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Allows the frame color to be set. Frame coloring is only available if the\nframe type is <code>chrome</code>.</p><p>Frame coloring is new in Chrome\n36.</p>",
            "optional": true,
            "name": "color"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Allows the frame color of the window when inactive to be set differently\nto the active color. Frame coloring is only available if the frame type is\n<code>chrome</code>.</p><p><code>inactiveColor</code> must be used in\nconjunction with <code> color</code>.</p><p>Frame coloring is new in Chrome\n36.</p>",
            "optional": true,
            "name": "inactiveColor"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Frame type: <code>none</code> or <code>chrome</code> (defaults to\n<code>chrome</code>).</p><p>For <code>none</code>, the\n<code>-webkit-app-region</code> CSS property can be used to apply\ndraggability to the app's window.</p><p><code>-webkit-app-region: drag</code>\ncan be used to mark regions draggable. <code>no-drag</code> can be used to\ndisable this style on nested elements.</p>",
            "optional": true,
            "name": "type"
          }
        ],
        "name": "FrameOptions"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"normal\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"fullscreen\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"maximized\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"minimized\""
          }
        ],
        "comment": "<p>State of a window: normal, fullscreen, maximized, minimized.</p>",
        "name": "State"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"shell\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"panel\""
          }
        ],
        "comment": "<p>Specifies the type of window to create.</p>",
        "name": "WindowType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Whether the current platform supports windows being visible on all\nworkspaces.</p>",
        "returnType": {
          "type": "primitive",
          "primitiveType": "boolean",
          "name": "returns"
        },
        "name": "canSetVisibleOnAllWorkspaces"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "url"
          },
          {
            "type": "reference",
            "referenceType": "CreateWindowOptions",
            "referenceLink": "#type-CreateWindowOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "AppWindow",
                "referenceLink": "#type-AppWindow",
                "optional": false,
                "name": "createdWindow"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called in the creating window (parent) before the load event is called in the created window (child). The parent can set fields or functions on the child usable from onload. E.g. background.js:</p><p><code>function(createdWindow) { createdWindow.contentWindow.foo = function () { }; };</code></p><p>window.js:</p><p><code>window.onload = function () { foo(); }</code></p>"
          }
        ],
        "comment": "<p>The size and position of a window can be specified in a number of\ndifferent ways. The most simple option is not specifying anything at all, in\nwhich case a default size and platform dependent position will be\nused.</p><p>To set the position, size and constraints of the window, use the\n<code>innerBounds</code> or <code>outerBounds</code> properties. Inner bounds\ndo not include window decorations. Outer bounds include the window's title\nbar and frame. Note that the padding between the inner and outer bounds is\ndetermined by the OS. Therefore setting the same property for both inner and\nouter bounds is considered an error (for example, setting both\n<code>innerBounds.left</code> and <code>outerBounds.left</code>).</p><p>To\nautomatically remember the positions of windows you can give them ids. If a\nwindow has an id, This id is used to remember the size and position of the\nwindow whenever it is moved or resized. This size and position is then used\ninstead of the specified bounds on subsequent opening of a window with the\nsame id. If you need to open a window with an id at a location other than the\nremembered default, you can create it hidden, move it to the desired\nlocation, then show it.</p>",
        "name": "create"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Returns an <a href=\"#type-AppWindow\"><code>AppWindow</code></a> object for the current script context (ie\nJavaScript 'window' object). This can also be called on a handle to a script\ncontext for another page, for example:\notherWindow.chrome.app.window.current().</p>",
        "returnType": {
          "type": "reference",
          "referenceType": "AppWindow",
          "referenceLink": "#type-AppWindow",
          "name": "returns"
        },
        "name": "current"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id"
          }
        ],
        "comment": "<p>Gets an <a href=\"#type-AppWindow\"><code>AppWindow</code></a> with the given id. If no window with the given id\nexists null is returned. This method is new in Chrome 33.</p>",
        "returnType": {
          "type": "reference",
          "referenceType": "AppWindow",
          "referenceLink": "#type-AppWindow",
          "name": "returns"
        },
        "name": "get"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Gets an array of all currently created app windows. This method is new in\nChrome 33.</p>",
        "returnType": {
          "type": "array",
          "elementType": {
            "type": "reference",
            "referenceType": "AppWindow",
            "referenceLink": "#type-AppWindow"
          },
          "name": "returns"
        },
        "name": "getAll"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the window is resized.</p>",
        "name": "onBoundsChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the window is closed. Note, this should be listened to from a\nwindow other than the window being closed, for example from the\nbackground page. This is because the window being closed will be in the\nprocess of being torn down when the event is fired, which means not all\nAPIs in the window's script context will be functional.</p>",
        "name": "onClosed"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the window is fullscreened (either via the\n<code>AppWindow</code> or HTML5 APIs).</p>",
        "name": "onFullscreened"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the window is maximized.</p>",
        "name": "onMaximized"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the window is minimized.</p>",
        "name": "onMinimized"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the window is restored from being minimized or maximized.</p>",
        "name": "onRestored"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.appviewTag",
    "shortName": "appviewTag",
    "comment": "<p>Use the <code>appview</code> tag to embed other Chrome Apps within your\nChrome App. (see <a href=#usage>Usage</a>).</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "url",
                "comment": "<p>Specifies the content to be embedded.</p>"
              }
            ],
            "comment": "<p>Allows the embedding request.</p>",
            "name": "allow"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "<p>Optional developer specified data that the app to be embedded can use when\nmaking an embedding decision.</p>",
            "name": "data"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Prevents the embedding request.</p>",
            "name": "deny"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The ID of the app that sent the embedding request.</p>",
            "name": "embedderId"
          }
        ],
        "name": "EmbedRequest"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "app",
            "comment": "<p>The extension id of the app to be embedded.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "any",
            "optional": false,
            "name": "data",
            "comment": "<p>Optional developer specified data that the app to be embedded   can use when making an embedding decision.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "success",
                "comment": "<p>True if the embedding request succeded.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>An optional function that's called after the embedding   request is completed.</p>"
          }
        ],
        "comment": "<p>Requests another app to be embedded.</p>",
        "name": "connect"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "platform_app.d.ts",
    "permissions": [
      "appview\n"
    ]
  },
  {
    "name": "chrome.audio",
    "shortName": "audio",
    "comment": "<p>The <code>chrome.audio</code> API is provided to allow users to\nget\ninformation about and control the audio devices attached to the\nsystem.\nThis API is currently only available in kiosk mode for ChromeOS.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Device name.</p>",
            "name": "deviceName"
          },
          {
            "type": "reference",
            "referenceType": "DeviceType",
            "referenceLink": "#type-DeviceType",
            "comment": "<p>Type of the device.</p>",
            "name": "deviceType"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The user-friendly name (e.g. \"USB Microphone\").</p>",
            "name": "displayName"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The unique identifier of the audio device.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if this is the current active device.</p>",
            "name": "isActive"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The sound level of the device, volume for output, gain for input.</p>",
            "name": "level"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The stable/persisted device id string when available.</p>",
            "optional": true,
            "name": "stableDeviceId"
          },
          {
            "type": "reference",
            "referenceType": "StreamType",
            "referenceLink": "#type-StreamType",
            "comment": "<p>Stream type associated with this device.</p>",
            "name": "streamType"
          }
        ],
        "name": "AudioDeviceInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If set, only audio devices whose active state matches this value will satisfy\nthe filter.</p>",
            "optional": true,
            "name": "isActive"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "StreamType",
              "referenceLink": "#type-StreamType"
            },
            "comment": "<p>If set, only audio devices whose stream type is included in this list will\nsatisfy the filter.</p>",
            "optional": true,
            "name": "streamTypes"
          }
        ],
        "name": "DeviceFilter"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>List of input devices specified by their ID.</p> <p>To indicate input\ndevices should be unaffected, leave this property   unset.</p>",
            "optional": true,
            "name": "input"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>List of output devices specified by their ID.</p> <p>To indicate output\ndevices should be unaffected, leave this property   unset.</p>",
            "optional": true,
            "name": "output"
          }
        ],
        "name": "DeviceIdLists"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>   The audio device's desired sound level. Defaults to the device's\ncurrent sound level. </p>  <p>If used with audio input device, represents\naudio device gain.</p> <p>If used with audio output device, represents audio\ndevice volume.</p>",
            "optional": true,
            "name": "level"
          }
        ],
        "name": "DeviceProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>ID of device whose sound level has changed.</p>",
            "name": "deviceId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The device's new sound level.</p>",
            "name": "level"
          }
        ],
        "name": "LevelChangedEvent"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether or not the stream is now muted.</p>",
            "name": "isMuted"
          },
          {
            "type": "reference",
            "referenceType": "StreamType",
            "referenceLink": "#type-StreamType",
            "comment": "<p>The type of the stream for which the mute value changed. The updated mute\nvalue applies to all devices with this stream type.</p>",
            "name": "streamType"
          }
        ],
        "name": "MuteChangedEvent"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"HEADPHONE\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"MIC\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"USB\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"BLUETOOTH\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"HDMI\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"INTERNAL_SPEAKER\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"INTERNAL_MIC\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"FRONT_MIC\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"REAR_MIC\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"KEYBOARD_MIC\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"HOTWORD\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"LINEOUT\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"POST_MIX_LOOPBACK\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"POST_DSP_LOOPBACK\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ALSA_LOOPBACK\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"OTHER\""
          }
        ],
        "comment": "<p>Available audio device types.</p>",
        "name": "DeviceType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"INPUT\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"OUTPUT\""
          }
        ],
        "comment": "<p>Type of stream an audio device provides.</p>",
        "name": "StreamType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "DeviceFilter",
            "referenceLink": "#type-DeviceFilter",
            "optional": true,
            "name": "filter",
            "comment": "<p>Device properties by which to filter the list of returned     audio devices. If the filter is not set or set to <code>{}</code>,     returned device list will contain all available audio devices.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "AudioDeviceInfo",
                  "referenceLink": "#type-AudioDeviceInfo"
                },
                "optional": false,
                "name": "devices"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Reports the requested list of audio devices.</p>"
          }
        ],
        "comment": "<p>Gets a list of audio devices filtered based on |filter|.</p>",
        "name": "getDevices"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "StreamType",
            "referenceLink": "#type-StreamType",
            "optional": false,
            "name": "streamType",
            "comment": "<p>Stream type for which mute state should be fetched.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "value"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback reporting whether mute is set or not for specified stream type.</p>"
          }
        ],
        "comment": "<p>Gets the system-wide mute state for the specified stream type.</p>",
        "name": "getMute"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "union",
            "isEnum": false,
            "options": [
              {
                "type": "reference",
                "referenceType": "DeviceIdLists",
                "referenceLink": "#type-DeviceIdLists"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                }
              }
            ],
            "optional": false,
            "name": "ids",
            "comment": "<p>Specifies IDs of devices that should be active. If either the     input or output list is not set, devices in that category are     unaffected.     </p>     <p>It is an error to pass in a non-existent device ID.</p>     <p><b>NOTE:</b> While the method signature allows device IDs to be     passed as a list of strings, this method of setting active devices     is deprecated and should not be relied upon to work. Please use     <a href=\"#type-DeviceIdLists\"><code>DeviceIdLists</code></a> instead.     </p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets lists of active input and/or output devices.</p>",
        "name": "setActiveDevices"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "StreamType",
            "referenceLink": "#type-StreamType",
            "optional": false,
            "name": "streamType",
            "comment": "<p>Stream type for which mute state should be set.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "isMuted",
            "comment": "<p>New mute value.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets mute state for a stream type. The mute state will apply to all audio\ndevices with the specified audio stream type.</p>",
        "name": "setMute"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id"
          },
          {
            "type": "reference",
            "referenceType": "DeviceProperties",
            "referenceLink": "#type-DeviceProperties",
            "optional": false,
            "name": "properties"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets the properties for the input or output device.</p>",
        "name": "setProperties"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "AudioDeviceInfo",
                  "referenceLink": "#type-AudioDeviceInfo"
                },
                "optional": false,
                "name": "devices",
                "comment": "<p>List of all present audio devices after the change.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when audio devices change, either new devices being added, or\nexisting devices being removed.</p>",
        "name": "onDeviceListChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "LevelChangedEvent",
                "referenceLink": "#type-LevelChangedEvent",
                "optional": false,
                "name": "event"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when sound level changes for an active audio device.</p>",
        "name": "onLevelChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "MuteChangedEvent",
                "referenceLink": "#type-MuteChangedEvent",
                "optional": false,
                "name": "event"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the mute state of the audio input or output changes. Note that\nmute state is system-wide and the new value applies to every audio device\nwith specified stream type.</p>",
        "name": "onMuteChanged"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "audio\n"
    ],
    "platforms": [
      "chromeos"
    ]
  },
  {
    "name": "chrome.automation",
    "shortName": "automation",
    "comment": "<p>The <code>chrome.automation</code> API allows developers to access the\nautomation (accessibility) tree for the browser. The tree resembles the DOM\ntree, but only exposes the <em>semantic</em> structure of a page. It can be\nused to programmatically interact with a page by examining names, roles, and\nstates, listening for events, and performing actions on nodes.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The source of this event.</p>",
            "name": "eventFrom"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "AutomationIntent",
              "referenceLink": "#type-AutomationIntent"
            },
            "comment": "<p>A list of <a href=\"#type-AutomationIntent\"><code>AutomationIntent</code></a>s associated with this event.</p>",
            "name": "intents"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Any mouse coordinates associated with this event.</p>",
            "name": "mouseX"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "name": "mouseY"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Stops this event from further processing except for any remaining listeners\non <a href=\"#type-AutomationEvent-target\"><code>AutomationEvent.target</code></a>.</p>",
            "name": "stopPropagation"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "comment": "<p>The <a href=\"#type-AutomationNode\"><code>AutomationNode</code></a> to which the event was targeted.</p>",
            "name": "target"
          },
          {
            "type": "reference",
            "referenceType": "EventType",
            "referenceLink": "#type-EventType",
            "comment": "<p>The type of the event.</p>",
            "name": "type"
          }
        ],
        "name": "AutomationEvent"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "IntentCommandType",
            "referenceLink": "#type-IntentCommandType",
            "comment": "<p>A command associated with this AutomationIntent.</p>",
            "name": "command"
          },
          {
            "type": "reference",
            "referenceType": "IntentMoveDirectionType",
            "referenceLink": "#type-IntentMoveDirectionType",
            "comment": "<p>A move direction associated with this AutomationIntent.</p>",
            "name": "moveDirection"
          },
          {
            "type": "reference",
            "referenceType": "IntentTextBoundaryType",
            "referenceLink": "#type-IntentTextBoundaryType",
            "comment": "<p>A text boundary associated with this AutomationIntent.</p>",
            "name": "textBoundary"
          }
        ],
        "name": "AutomationIntent"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The key that activates this widget.</p>",
            "optional": true,
            "name": "accessKey"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "comment": "<p>The node referred to by <code>aria-activedescendant</code>, where applicable</p>",
            "optional": true,
            "name": "activeDescendant"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "AutomationNode",
              "referenceLink": "#type-AutomationNode"
            },
            "comment": "<p>Reverse relationship for active descendant.</p>",
            "optional": true,
            "name": "activeDescendantFor"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "EventType",
                "referenceLink": "#type-EventType",
                "optional": false,
                "name": "eventType"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "AutomationEvent",
                    "referenceLink": "#type-AutomationEvent",
                    "optional": false,
                    "name": "event"
                  }
                ],
                "optional": false,
                "name": "listener",
                "comment": "<p>A listener for events on an <code>AutomationNode</code>.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "capture"
              }
            ],
            "comment": "<p>Adds a listener for the given event type and event phase.</p>",
            "name": "addEventListener"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The affinity of the tree selection anchor, if any.</p>",
            "optional": true,
            "name": "anchorAffinity"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "comment": "<p>The anchor node of the tree selection, if any.</p>",
            "optional": true,
            "name": "anchorObject"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The anchor offset of the tree selection, if any.</p>",
            "optional": true,
            "name": "anchorOffset"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of columns in this table as specified by the page author.</p>",
            "optional": true,
            "name": "ariaColumnCount"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The value of the aria-invalid attribute, indicating the error type.</p>",
            "optional": true,
            "name": "ariaInvalidValue"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of rows in this table as specified by the page author.</p>",
            "optional": true,
            "name": "ariaRowCount"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Aria auto complete.</p>",
            "optional": true,
            "name": "autoComplete"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The RGBA background color of this subtree, as an integer.</p>",
            "optional": true,
            "name": "backgroundColor"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates node text is bold.</p>",
            "name": "bold"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "startIndex"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "endIndex"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "Rect",
                    "referenceLink": "#type-Rect",
                    "optional": false,
                    "name": "bounds"
                  }
                ],
                "optional": false,
                "name": "callback"
              }
            ],
            "comment": "<p>Determines the location of the text within the node specified by |startIndex|\nand |endIndex|, inclusively. Invokes |callback| with the bounding rectangle,\nin screen coordinates. |callback| can be invoked either synchronously or\nasynchronously. The bounds are clipped to ancestors.</p>",
            "name": "boundsForRange"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The value of aria-busy for a live region or any other element.</p>",
            "optional": true,
            "name": "busy"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Tri-state describing checkbox or radio button: 'false' | 'true' | 'mixed'</p>",
            "optional": true,
            "name": "checked"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Description of the state of the checkbox. Used only when the node is\ncheckable.</p>",
            "optional": true,
            "name": "checkedStateDescription"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "AutomationNode",
              "referenceLink": "#type-AutomationNode"
            },
            "comment": "<p>Walking the tree.</p>",
            "name": "children"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The name of the programmatic backing object.</p>",
            "optional": true,
            "name": "className"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The RGBA foreground color of this subtree, as an integer.</p>",
            "optional": true,
            "name": "color"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The RGBA color of an input element whose value is a color.</p>",
            "optional": true,
            "name": "colorValue"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The value of aria-atomic if this node is inside a live region.</p>",
            "optional": true,
            "name": "containerLiveAtomic"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The value of aria-busy if this node is inside a live region.</p>",
            "optional": true,
            "name": "containerLiveBusy"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The value of aria-relevant if this node is inside a live region.</p>",
            "optional": true,
            "name": "containerLiveRelevant"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The type of live region if this node is inside a live region.</p>",
            "optional": true,
            "name": "containerLiveStatus"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "AutomationNode",
              "referenceLink": "#type-AutomationNode"
            },
            "comment": "<p>Reverse relationship for controls.</p>",
            "optional": true,
            "name": "controlledBy"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "AutomationNode",
              "referenceLink": "#type-AutomationNode"
            },
            "comment": "<p>The nodes, if any, which this node is specified to control via <a\nhref=\"http://www.w3.org/TR/wai-aria/#aria-controls\">\n<code>aria-controls</code></a>.</p>",
            "optional": true,
            "name": "controls"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "offset"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "isUpstream"
              }
            ],
            "returnType": {
              "type": "reference",
              "referenceType": "AutomationPosition",
              "referenceLink": "#type-AutomationPosition",
              "name": "returns"
            },
            "comment": "<p>Creates a position object backed by Chrome's accessibility position support.</p>",
            "name": "createPosition"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "CustomAction",
              "referenceLink": "#type-CustomAction"
            },
            "comment": "<p>An array of custom actions.</p>",
            "optional": true,
            "name": "customActions"
          },
          {
            "type": "reference",
            "referenceType": "DefaultActionVerb",
            "referenceLink": "#type-DefaultActionVerb",
            "comment": "<p>The action taken by calling <code>doDefault</code>.</p>",
            "optional": true,
            "name": "defaultActionVerb"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "AutomationNode",
              "referenceLink": "#type-AutomationNode"
            },
            "comment": "<p>The nodes, if any, which form a description for this node.</p>",
            "optional": true,
            "name": "describedBy"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The purpose of the node, other than the role, if any.</p>",
            "optional": true,
            "name": "description"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "AutomationNode",
              "referenceLink": "#type-AutomationNode"
            },
            "comment": "<p>Reverse relationship for describedBy.</p>",
            "optional": true,
            "name": "descriptionFor"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "AutomationNode",
              "referenceLink": "#type-AutomationNode"
            },
            "comment": "<p>A node that provides more details about the current node.</p>",
            "optional": true,
            "name": "details"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "AutomationNode",
              "referenceLink": "#type-AutomationNode"
            },
            "comment": "<p>Reverse relationship for details.</p>",
            "optional": true,
            "name": "detailsFor"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The detected language code for this subtree.</p>",
            "optional": true,
            "name": "detectedLanguage"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The CSS display attribute for this node, if applicable.</p>",
            "optional": true,
            "name": "display"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Does the default action based on this node's role. This is generally the same\naction that would result from clicking the node such as expanding a treeitem,\ntoggling a checkbox, selecting a radiobutton, or activating a button.</p>",
            "name": "doDefault"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether this document has finished loading.</p>",
            "optional": true,
            "name": "docLoaded"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The proportion (out of 1.0) that this doc has completed loading.</p>",
            "optional": true,
            "name": "docLoadingProgress"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The title of this document.</p>",
            "optional": true,
            "name": "docTitle"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL of this document.</p>",
            "optional": true,
            "name": "docUrl"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "selector"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "AutomationNode",
                    "referenceLink": "#type-AutomationNode",
                    "optional": false,
                    "name": "node"
                  }
                ],
                "optional": false,
                "name": "callback"
              }
            ],
            "comment": "<p>Gets the first node in this node's subtree which matches the given CSS\nselector and is within the same DOM context.</p><p>If this node doesn't\ncorrespond directly with an HTML node in the DOM, querySelector will be run\non this node's nearest HTML node ancestor. Note that this may result in the\nquery returning a node which is not a descendant of this node.</p><p>If the\nselector matches a node which doesn't directly correspond to an automation\nnode (for example an element within an ARIA widget, where the ARIA widget\nforms one node of the automation tree, or an element which is hidden from\naccessibility via hiding it using CSS or using aria-hidden), this will return\nthe nearest ancestor which does correspond to an automation node.</p>",
            "name": "domQuerySelector"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates whether this is a root of an editable subtree.</p>",
            "name": "editableRoot"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "comment": "<p>A node that provides an error message for a current node.</p>",
            "optional": true,
            "name": "errorMessage"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "AutomationNode",
              "referenceLink": "#type-AutomationNode"
            },
            "comment": "<p>Reverse relationship for errorMessage.</p>",
            "optional": true,
            "name": "errorMessageFor"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "FindParams",
                "referenceLink": "#type-FindParams",
                "optional": false,
                "name": "params"
              }
            ],
            "returnType": {
              "type": "reference",
              "referenceType": "AutomationNode",
              "referenceLink": "#type-AutomationNode",
              "name": "returns"
            },
            "comment": "<p>Finds the first AutomationNode in this node's subtree which matches the given\nsearch parameters.</p>",
            "name": "find"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "FindParams",
                "referenceLink": "#type-FindParams",
                "optional": false,
                "name": "params"
              }
            ],
            "returnType": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "referenceType": "AutomationNode",
                "referenceLink": "#type-AutomationNode"
              },
              "name": "returns"
            },
            "comment": "<p>Finds all the AutomationNodes in this node's subtree which matches the given\nsearch parameters.</p>",
            "name": "findAll"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "optional": true,
            "name": "firstChild"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "AutomationNode",
              "referenceLink": "#type-AutomationNode"
            },
            "comment": "<p>Reverse relationship for flowTo.</p>",
            "optional": true,
            "name": "flowFrom"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "AutomationNode",
              "referenceLink": "#type-AutomationNode"
            },
            "comment": "<p>The nodes, if any, which may optionally be navigated to after this one. See\n<a href=\"http://www.w3.org/TR/wai-aria/#aria-flowto\">\n<code>aria-flowto</code></a>.</p>",
            "optional": true,
            "name": "flowTo"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Places focus on this node.</p>",
            "name": "focus"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The affinity of the tree selection focus, if any.</p>",
            "optional": true,
            "name": "focusAffinity"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "comment": "<p>The focus node of the tree selection, if any.</p>",
            "optional": true,
            "name": "focusObject"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The focus offset of the tree selection, if any.</p>",
            "optional": true,
            "name": "focusOffset"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Indicates the font family.</p>",
            "name": "fontFamily"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Indicates the font size of this node.</p>",
            "optional": true,
            "name": "fontSize"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "maxWidth"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "maxHeight"
              }
            ],
            "comment": "<p>Request a data url for the contents of an image, optionally resized.  Pass\nzero for maxWidth and/or maxHeight for the original size.</p>",
            "name": "getImageData"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "searchStr"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "backward"
              }
            ],
            "returnType": {
              "type": "reference",
              "referenceType": "AutomationNode",
              "referenceLink": "#type-AutomationNode",
              "name": "returns"
            },
            "name": "getNextTextMatch"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Indicates the availability and type of interactive popup element true - the\npopup is a menu menu - the popup is a menu listbox - the popup is a listbox\ntree - the popup is a tree grid - the popup is a grid dialog - the popup is a\ndialog</p>",
            "optional": true,
            "name": "hasPopup"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The level of a heading or tree item.</p>",
            "optional": true,
            "name": "hierarchicalLevel"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "x"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "y"
              },
              {
                "type": "reference",
                "referenceType": "EventType",
                "referenceLink": "#type-EventType",
                "optional": false,
                "name": "eventToFire"
              }
            ],
            "comment": "<p>Does a hit test of the given global screen coordinates, and fires eventToFire\non the resulting object.</p>",
            "name": "hitTest"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "x"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "y"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "AutomationNode",
                    "referenceLink": "#type-AutomationNode",
                    "optional": false,
                    "name": "node"
                  }
                ],
                "optional": false,
                "name": "callback"
              }
            ],
            "comment": "<p>Does a <a href=\"#type-AutomationNode-hitTest\"><code>AutomationNode.hitTest</code></a>, and receives a callback\nwith the resulting hit node.</p>",
            "name": "hitTestWithReply"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "<p>A map containing all HTML attributes and their values</p>",
            "optional": true,
            "name": "htmlAttributes"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The HTML tag for this element, if this node is an HTML element.</p>",
            "optional": true,
            "name": "htmlTag"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The image annotation for image nodes, which may be a human-readable string\nthat is the contextualized annotation or a status string related to\nannotations.</p>",
            "optional": true,
            "name": "imageAnnotation"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A data url with the contents of this object's image or thumbnail.</p>",
            "optional": true,
            "name": "imageDataUrl"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "comment": "<p>The target of an in-page link.</p>",
            "optional": true,
            "name": "inPageLinkTarget"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The index of this node in its parent node's list of children. If this is the\nroot node, this will be undefined.</p>",
            "optional": true,
            "name": "indexInParent"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The inner html of this element. Only populated for math content.</p>",
            "optional": true,
            "name": "innerHtml"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The input type of a text field, such as \"text\" or \"email\".</p>",
            "optional": true,
            "name": "inputType"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether this AutomationNode is a root node.</p>",
            "name": "isRootNode"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If a selection is present, whether the anchor of the selection comes after\nits focus in the accessibility tree.</p>",
            "optional": true,
            "name": "isSelectionBackward"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates node text is italic.</p>",
            "name": "italic"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "AutomationNode",
              "referenceLink": "#type-AutomationNode"
            },
            "comment": "<p>Reverse relationship for labelledBy.</p>",
            "optional": true,
            "name": "labelFor"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "AutomationNode",
              "referenceLink": "#type-AutomationNode"
            },
            "comment": "<p>The nodes, if any, which form a label for this element. Generally, the text\nfrom these elements will also be exposed as the element's accessible name,\nvia the <a href=\"#type-AutomationNode-name\"><code>AutomationNode.name</code></a> attribute.</p>",
            "optional": true,
            "name": "labelledBy"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The author-provided language code for this subtree.</p>",
            "optional": true,
            "name": "language"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "attribute"
              }
            ],
            "returnType": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "referenceType": "LanguageSpan",
                "referenceLink": "#type-LanguageSpan"
              },
              "name": "returns"
            },
            "comment": "<p>Returns the detected languages for the provided string attribute as an array\nof LanguageSpan objects. There are several guarantees about the format of the\nLanguageSpan array: 1. Is either empty or contains LanguageSpans that cover\nall indices in the associated string attribute value. 2. Is sorted by\nincreasing startIndex (those with smaller startIndex appear first). 3.\nLanguageSpans are non-overlapping and contain exactly one language.</p>",
            "name": "languageAnnotationForStringAttribute"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "optional": true,
            "name": "lastChild"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates node text is line through.</p>",
            "name": "lineThrough"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The value of aria-atomic for a live region.</p>",
            "optional": true,
            "name": "liveAtomic"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The value of aria-relevant for a live region.</p>",
            "optional": true,
            "name": "liveRelevant"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The type of region if this is the root of a live region. Possible values are\n'polite' and 'assertive'.</p>",
            "optional": true,
            "name": "liveStatus"
          },
          {
            "type": "reference",
            "referenceType": "Rect",
            "referenceLink": "#type-Rect",
            "comment": "<p>The rendered location (as a bounding box) of this node in global screen\ncoordinates.</p>",
            "optional": true,
            "name": "location"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Scrolls this node to make it visible.</p>",
            "name": "makeVisible"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "Marker",
              "referenceLink": "#type-Marker"
            },
            "comment": "<p>An array of Marker objects for this node.</p>",
            "optional": true,
            "name": "markers"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "FindParams",
                "referenceLink": "#type-FindParams",
                "optional": false,
                "name": "params"
              }
            ],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "comment": "<p>Returns whether this node matches the given <a href=\"#type-FindParams\"><code>FindParams</code></a>.</p>",
            "name": "matches"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The maximum possible value for this range.</p>",
            "optional": true,
            "name": "maxValueForRange"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The minimum possible value for this range.</p>",
            "optional": true,
            "name": "minValueForRange"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Marks this subtree as modal.</p>",
            "optional": true,
            "name": "modal"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The accessible name for this node, via the <a\nhref=\"http://www.w3.org/TR/wai-aria/#namecalculation\"> Accessible Name\nCalculation</a> process.</p>",
            "optional": true,
            "name": "name"
          },
          {
            "type": "reference",
            "referenceType": "NameFromType",
            "referenceLink": "#type-NameFromType",
            "comment": "<p>The source of the name.</p>",
            "optional": true,
            "name": "nameFrom"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "optional": true,
            "name": "nextFocus"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "optional": true,
            "name": "nextOnLine"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "optional": true,
            "name": "nextSibling"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "number"
            },
            "comment": "<p>The end index of each word within the node's name. This is different from\nwordEnds because it is not restricted to inline text boxes and can be used\nfor any type of element.</p>",
            "optional": true,
            "name": "nonInlineTextWordEnds"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "number"
            },
            "comment": "<p>The start index of each word within the node's name. This is different from\nwordStarts because it is not restricted to inline text boxes and can be used\nfor any type of element.</p>",
            "optional": true,
            "name": "nonInlineTextWordStarts"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates that the node is marked user-select:none</p>",
            "optional": true,
            "name": "notUserSelectableStyle"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "optional": true,
            "name": "parent"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "customActionId"
              }
            ],
            "comment": "<p>Performs custom action.</p>",
            "name": "performCustomAction"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ActionType",
                "referenceLink": "#type-ActionType",
                "optional": false,
                "name": "actionType"
              }
            ],
            "comment": "<p>Convenience method to perform a standard action supported by this node. For\nactions requiring additional arguments, call the specific binding e.g.\n<code>setSelection</code>.</p>",
            "name": "performStandardAction"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The placeholder for this text field, if any.</p>",
            "optional": true,
            "name": "placeholder"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The 1-based index of an item in a set.</p>",
            "optional": true,
            "name": "posInSet"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "optional": true,
            "name": "previousFocus"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "optional": true,
            "name": "previousOnLine"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "optional": true,
            "name": "previousSibling"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "EventType",
                "referenceLink": "#type-EventType",
                "optional": false,
                "name": "eventType"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "AutomationEvent",
                    "referenceLink": "#type-AutomationEvent",
                    "optional": false,
                    "name": "event"
                  }
                ],
                "optional": false,
                "name": "listener",
                "comment": "<p>A listener for events on an <code>AutomationNode</code>.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "capture"
              }
            ],
            "comment": "<p>Removes a listener for the given event type and event phase.</p>",
            "name": "removeEventListener"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "value"
              }
            ],
            "comment": "<p>Replaces the selected text within a text field.</p>",
            "name": "replaceSelectedText"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Input restriction, if any, such as readonly or disabled: undefined - enabled\ncontrol or other object that is not disabled Restriction.DISABLED - disallows\ninput in itself + any descendants Restriction.READONLY - allow\nfocus/selection but not input</p>",
            "optional": true,
            "name": "restriction"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Resume playing any media within this tree.</p>",
            "name": "resumeMedia"
          },
          {
            "type": "reference",
            "referenceType": "RoleType",
            "referenceLink": "#type-RoleType",
            "comment": "<p>The role of this node.</p>",
            "optional": true,
            "name": "role"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The role description for this node.</p>",
            "optional": true,
            "name": "roleDescription"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "comment": "<p>The root node of the tree containing this AutomationNode.</p>",
            "optional": true,
            "name": "root"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "optional": false,
                    "name": "result"
                  }
                ],
                "optional": false,
                "name": "callback"
              }
            ],
            "comment": "<p>Scrolls this scrollable container backward.</p>",
            "name": "scrollBackward"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "optional": false,
                    "name": "result"
                  }
                ],
                "optional": false,
                "name": "callback"
              }
            ],
            "comment": "<p>Scrolls this scrollable container down.</p>",
            "name": "scrollDown"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "optional": false,
                    "name": "result"
                  }
                ],
                "optional": false,
                "name": "callback"
              }
            ],
            "comment": "<p>Scrolls this scrollable container forward.</p>",
            "name": "scrollForward"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "optional": false,
                    "name": "result"
                  }
                ],
                "optional": false,
                "name": "callback"
              }
            ],
            "comment": "<p>Scrolls this scrollable container left.</p>",
            "name": "scrollLeft"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "optional": false,
                    "name": "result"
                  }
                ],
                "optional": false,
                "name": "callback"
              }
            ],
            "comment": "<p>Scrolls this scrollable container right.</p>",
            "name": "scrollRight"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "x"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "y"
              }
            ],
            "comment": "<p>Scrolls this scrollable container to the given point.</p>",
            "name": "scrollToPoint"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "optional": false,
                    "name": "result"
                  }
                ],
                "optional": false,
                "name": "callback"
              }
            ],
            "comment": "<p>Scrolls this scrollable container up.</p>",
            "name": "scrollUp"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Scrollable container attributes.</p>",
            "optional": true,
            "name": "scrollX"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "scrollXMax"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "scrollXMin"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "scrollY"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "scrollYMax"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "scrollYMin"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates whether this node is scrollable.</p>",
            "optional": true,
            "name": "scrollable"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates whether this node is selected, unselected, or neither.</p>",
            "optional": true,
            "name": "selected"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The affinity of the tree selection end, if any.</p>",
            "optional": true,
            "name": "selectionEndAffinity"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "comment": "<p>The selection end node of the tree selection, if any.</p>",
            "optional": true,
            "name": "selectionEndObject"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The selection end offset of the tree selection, if any.</p>",
            "optional": true,
            "name": "selectionEndOffset"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The affinity of the tree selection start, if any.</p>",
            "optional": true,
            "name": "selectionStartAffinity"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "comment": "<p>The selection start node of the tree selection, if any.</p>",
            "optional": true,
            "name": "selectionStartObject"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The selection start offset of the tree selection, if any.</p>",
            "optional": true,
            "name": "selectionStartOffset"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "number"
            },
            "comment": "<p>The end indexes of each sentence within the node&#39;s name. For most nodes, the\nsize of sentenceStarts array should be equal to the size of sentenceEnds\narray. Two exceptions are (1) node at the begining of a paragraph but the end\nof the node&#39;s sentences is in its following node. Such a node has one more\nstart index. (2) Node at the end of a paragraph but the start of the node&#39;s\nsentences is in its previous node. Such a node has one more end index. For\nexample, &lt;p&gt;&lt;b&gt;Hello&lt;/b&gt; world.&lt;/p&gt; has two nodes. The first one has one\nstart index (i.e., 0) but no end index. The second node has one end index\n(i.e., 7) but no start index.</p>",
            "optional": true,
            "name": "sentenceEnds"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "number"
            },
            "comment": "<p>The start indexes of each sentence within the node's name.</p>",
            "optional": true,
            "name": "sentenceStarts"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Sets accessibility focus. Accessibility focus is the node on which an\nextension tracks a user's focus. This may be conveyed through a focus ring or\nor speech output by the extension. Automation will dispatch more events to\nthe accessibility focus such as location changes.</p>",
            "name": "setAccessibilityFocus"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "x"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "y"
              }
            ],
            "comment": "<p>Sets this scrollable container's scroll offset.</p>",
            "name": "setScrollOffset"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "startIndex"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "endIndex"
              }
            ],
            "comment": "<p>Sets selection within a text field.</p>",
            "name": "setSelection"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Clears focus and sets this node as the starting point for the next time the\nuser presses Tab or Shift+Tab.</p>",
            "name": "setSequentialFocusNavigationStartingPoint"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of items in a set;</p>",
            "optional": true,
            "name": "setSize"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "value"
              }
            ],
            "comment": "<p>Sets the value of a text field.</p>",
            "name": "setValue"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Show the context menu for this element, as if the user right-clicked.</p>",
            "name": "showContextMenu"
          },
          {
            "type": "reference",
            "referenceType": "SortDirectionType",
            "referenceLink": "#type-SortDirectionType",
            "comment": "<p>The sort direction of this node.</p>",
            "name": "sortDirection"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ActionType",
              "referenceLink": "#type-ActionType"
            },
            "comment": "<p>An array of standard actions available on this node.</p>",
            "optional": true,
            "name": "standardActions"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Start ducking any media within this tree.</p>",
            "name": "startDuckingMedia"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "<p>The <a href=\"#type-StateType\"><code>StateType</code></a>s describing this node.</p>",
            "optional": true,
            "name": "state"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Stop ducking any media within this tree.</p>",
            "name": "stopDuckingMedia"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates node text is subscript.</p>",
            "name": "subscript"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates node text is superscript.</p>",
            "name": "superscript"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Suspend any media playing within this tree.</p>",
            "name": "suspendMedia"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ARIA column index as specified by the page author.</p>",
            "optional": true,
            "name": "tableCellAriaColumnIndex"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ARIA row index as specified by the page author.</p>",
            "optional": true,
            "name": "tableCellAriaRowIndex"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "AutomationNode",
              "referenceLink": "#type-AutomationNode"
            },
            "comment": "<p>The column header nodes for a table cell.</p>",
            "optional": true,
            "name": "tableCellColumnHeaders"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The zero-based index of the column that this cell is in as specified in the\nDOM.</p>",
            "optional": true,
            "name": "tableCellColumnIndex"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of columns that this cell spans (default is 1).</p>",
            "optional": true,
            "name": "tableCellColumnSpan"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "AutomationNode",
              "referenceLink": "#type-AutomationNode"
            },
            "comment": "<p>The row header nodes for a table cell.</p>",
            "optional": true,
            "name": "tableCellRowHeaders"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The zero-based index of the row that this cell is in as specified in the DOM.</p>",
            "optional": true,
            "name": "tableCellRowIndex"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of rows that this cell spans (default is 1).</p>",
            "optional": true,
            "name": "tableCellRowSpan"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of columns in this table as specified in the DOM.</p>",
            "optional": true,
            "name": "tableColumnCount"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "comment": "<p>The corresponding column header for this cell.</p>",
            "optional": true,
            "name": "tableColumnHeader"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The column index of this column node.</p>",
            "optional": true,
            "name": "tableColumnIndex"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of rows in this table as specified in the DOM.</p>",
            "optional": true,
            "name": "tableRowCount"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "comment": "<p>The corresponding row header for this cell.</p>",
            "optional": true,
            "name": "tableRowHeader"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The row index of this row node.</p>",
            "optional": true,
            "name": "tableRowIndex"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The input type, like email or number.</p>",
            "optional": true,
            "name": "textInputType"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The character index of the end of the selection within this editable text\nelement; -1 if no selection.</p>",
            "optional": true,
            "name": "textSelEnd"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The character index of the start of the selection within this editable text\nelement; -1 if no selection.</p>",
            "optional": true,
            "name": "textSelStart"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The tooltip of the node, if any.</p>",
            "optional": true,
            "name": "tooltip"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "startIndex"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "endIndex"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "Rect",
                    "referenceLink": "#type-Rect",
                    "optional": false,
                    "name": "bounds"
                  }
                ],
                "optional": false,
                "name": "callback"
              }
            ],
            "comment": "<p>Determines the location of the text within the node specified by |startIndex|\nand |endIndex|, inclusively. Invokes |callback| with the bounding rectangle,\nin screen coordinates. |callback| can be invoked either synchronously or\nasynchronously. The bounds are not clipped to ancestors.</p>",
            "name": "unclippedBoundsForRange"
          },
          {
            "type": "reference",
            "referenceType": "Rect",
            "referenceLink": "#type-Rect",
            "comment": "<p>The location (as a bounding box) of this node in global screen coordinates\nwithout applying any clipping from ancestors.</p>",
            "optional": true,
            "name": "unclippedLocation"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates node text is underline.</p>",
            "name": "underline"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL that this link will navigate to.</p>",
            "optional": true,
            "name": "url"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The value for this node: for example the <code>value</code> attribute of an\n<code>&lt;input&gt; element.</p>",
            "optional": true,
            "name": "value"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The current value for this range.</p>",
            "optional": true,
            "name": "valueForRange"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "number"
            },
            "optional": true,
            "name": "wordEnds"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "number"
            },
            "comment": "<p>The start and end index of each word in an inline text box.</p>",
            "optional": true,
            "name": "wordStarts"
          }
        ],
        "name": "AutomationNode"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "name": "affinity"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "asLeafTextPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "asTextPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "asTreePosition"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "atEndOfAnchor"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "atEndOfDocument"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "atEndOfFormat"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "atEndOfLine"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "atEndOfPage"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "atEndOfParagraph"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "atEndOfWord"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "atStartOfAnchor"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "atStartOfDocument"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "atStartOfFormat"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "atStartOfLine"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "atStartOfPage"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "atStartOfParagraph"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "atStartOfWord"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "name": "childIndex"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "string",
              "name": "returns"
            },
            "name": "getText"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "isInLineBreak"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "isInTextObject"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "isInWhiteSpace"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "isLeafTextPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "isNullPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "isTextPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "isTreePosition"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns"
            },
            "name": "isValid"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "number",
              "name": "returns"
            },
            "name": "maxTextOffset"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToNextAnchorPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToNextCharacterPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToNextFormatEndPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToNextLeafTextPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToNextLeafTreePosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToNextLineEndPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToNextLineStartPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToNextPageEndPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToNextPageStartPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToNextParagraphEndPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToNextParagraphStartPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToNextWordEndPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToNextWordStartPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToParentPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToPositionAtEndOfAnchor"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToPositionAtEndOfDocument"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToPositionAtStartOfAnchor"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToPositionAtStartOfDocument"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToPreviousAnchorPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToPreviousCharacterPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToPreviousFormatStartPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToPreviousLeafTextPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToPreviousLeafTreePosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToPreviousLineEndPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToPreviousLineStartPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToPreviousPageEndPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToPreviousPageStartPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToPreviousParagraphEndPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToPreviousParagraphStartPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToPreviousWordEndPosition"
          },
          {
            "type": "function",
            "parameters": [],
            "name": "moveToPreviousWordStartPosition"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "optional": true,
            "name": "node"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "name": "textOffset"
          }
        ],
        "name": "AutomationPosition"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "name": "description"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "name": "id"
          }
        ],
        "name": "CustomAction"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "<p>A map of attribute name to expected value, for example <code>{ name: 'Root\ndirectory', checkbox_mixed: true }</code>. String attribute values may be\nspecified as a regex, for example <code>{ name: /stralia$/</code> }</code>.\nUnless specifying a regex, the expected value must be an exact match in type\nand value for the actual value. Thus, the type of expected value must be one\nof: <ul> <li>string</li> <li>integer</li> <li>float</li> <li>boolean</li>\n</ul></p>",
            "optional": true,
            "name": "attributes"
          },
          {
            "type": "reference",
            "referenceType": "RoleType",
            "referenceLink": "#type-RoleType",
            "optional": true,
            "name": "role"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "<p>A map of <a href=\"#type-StateType\"><code>StateType</code></a> to boolean, indicating for each state\nwhether it should be set or not. For example: <code>{ StateType.disabled:\nfalse }</code> would only match if <code>StateType.disabled</code> was\n<em>not</em> present in the node's <code>state</code> object.</p>",
            "optional": true,
            "name": "state"
          }
        ],
        "name": "FindParams"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Exclusive end index of substring that contains language.</p>",
            "name": "endIndex"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Detected language for substring.</p>",
            "name": "language"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Probability that language is correct.</p>",
            "name": "probability"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Inclusive start index of substring that contains language.</p>",
            "name": "startIndex"
          }
        ],
        "name": "LanguageSpan"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The end offset within the text of the associated node.</p>",
            "name": "endOffset"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "<p>A mapping of MarkerType to true or undefined indicating the marker types for\nthis marker.</p>",
            "name": "flags"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The start offset within the text of the associated node.</p>",
            "name": "startOffset"
          }
        ],
        "name": "Marker"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "name": "height"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "name": "left"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "name": "top"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "name": "width"
          }
        ],
        "name": "Rect"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "comment": "<p>The node where the selection begins.</p>",
            "name": "anchorObject"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The offset in the anchor node where the selection begins.</p>",
            "name": "anchorOffset"
          },
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "comment": "<p>The node where the selection ends.</p>",
            "name": "focusObject"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The offset within the focus node where the selection ends.</p>",
            "name": "focusOffset"
          }
        ],
        "name": "SetDocumentSelectionParams"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "AutomationNode",
            "referenceLink": "#type-AutomationNode",
            "comment": "<p>The <a href=\"#type-AutomationNode\"><code>AutomationNode</code></a> that changed.</p>",
            "name": "target"
          },
          {
            "type": "reference",
            "referenceType": "TreeChangeType",
            "referenceLink": "#type-TreeChangeType",
            "comment": "<p>The type of change.</p>",
            "name": "type"
          }
        ],
        "name": "TreeChange"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"annotatePageImages\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"blur\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"clearAccessibilityFocus\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"collapse\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"customAction\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"decrement\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"doDefault\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"expand\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"focus\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"getImageData\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"getTextLocation\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"hideTooltip\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"hitTest\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"increment\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"internalInvalidateTree\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"loadInlineTextBoxes\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"replaceSelectedText\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"scrollBackward\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"scrollDown\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"scrollForward\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"scrollLeft\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"scrollRight\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"scrollUp\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"scrollToMakeVisible\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"scrollToPoint\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"setAccessibilityFocus\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"setScrollOffset\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"setSelection\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"setSequentialFocusNavigationStartingPoint\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"setValue\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"showContextMenu\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"signalEndOfTest\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"showTooltip\""
          }
        ],
        "comment": "<p>All possible actions that can be performed on automation nodes.</p>",
        "name": "ActionType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"activate\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"check\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"click\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"clickAncestor\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"jump\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"open\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"press\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"select\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"uncheck\""
          }
        ],
        "comment": "<p>Describes possible actions when performing a do default action.</p>",
        "name": "DefaultActionVerb"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"uninitialized\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"attribute\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"contents\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"relatedElement\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"title\""
          }
        ],
        "name": "DescriptionFromType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"accessKeyChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"activeDescendantChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"alert\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ariaAttributeChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ariaCurrentChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"atomicChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"autoCompleteChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"autocorrectionOccured\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"blur\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"busyChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"checkedStateChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"childrenChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"classNameChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"clicked\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"collapsed\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"controlsChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"describedByChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"descriptionChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"documentSelectionChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"documentTitleChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"dropeffectChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"editableTextChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"enabledChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"endOfTest\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"expanded\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"expandedChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"flowFromChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"flowToChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"focus\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"focusAfterMenuClose\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"focusChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"focusContext\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"grabbedChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"haspopupChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"hide\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"hierarchicalLevelChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"hitTestResult\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"hover\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ignoredChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"imageAnnotationChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"imageFrameUpdated\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"invalidStatusChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"keyShortcutsChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"labeledByChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"languageChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"layoutComplete\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"layoutInvalidated\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"liveRegionChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"liveRegionCreated\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"liveRegionNodeChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"liveRelevantChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"liveStatusChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"loadComplete\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"loadStart\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"locationChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"mediaStartedPlaying\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"mediaStoppedPlaying\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"menuEnd\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"menuItemSelected\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"menuListItemSelected\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"menuListValueChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"menuPopupEnd\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"menuPopupStart\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"menuStart\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"mouseCanceled\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"mouseDragged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"mouseMoved\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"mousePressed\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"mouseReleased\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"multilineStateChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"multiselectableStateChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"nameChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"objectAttributeChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"otherAttributeChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"parentChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"placeholderChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"portalActivated\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"positionInSetChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"rangeValueChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"rangeValueMaxChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"rangeValueMinChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"rangeValueStepChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"readonlyChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"relatedNodeChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"requiredStateChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"roleChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"rowCollapsed\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"rowCountChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"rowExpanded\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"scrollHorizontalPositionChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"scrollPositionChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"scrollVerticalPositionChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"scrolledToAnchor\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"selectedChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"selectedChildrenChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"selectedValueChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"selection\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"selectionAdd\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"selectionInTextFieldChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"selectionRemove\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"setSizeChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"show\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"sortChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"stateChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"subtreeCreated\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"textAttributeChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"textSelectionChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"textChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"tooltipClosed\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"tooltipOpened\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"treeChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"valueInTextFieldChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"valueChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"windowActivated\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"windowDeactivated\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"windowVisibilityChanged\""
          }
        ],
        "comment": "<p>Possible events fired on an <a href=\"#type-AutomationNode\"><code>AutomationNode</code></a>.</p>",
        "name": "EventType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"true\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"menu\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"listbox\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"tree\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"grid\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"dialog\""
          }
        ],
        "comment": "<p>Indicates the availability and type of interactive popup element</p>",
        "name": "HasPopup"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"clearSelection\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"delete\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"dictate\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"extendSelection\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"format\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"history\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"insert\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"marker\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"moveSelection\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"setSelection\""
          }
        ],
        "comment": "<p>A command associated with an <a href=\"#type-AutomationIntent\"><code>AutomationIntent</code></a>.</p>",
        "name": "IntentCommandType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"insertText\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"insertLineBreak\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"insertParagraph\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"insertOrderedList\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"insertUnorderedList\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"insertHorizontalRule\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"insertFromPaste\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"insertFromDrop\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"insertFromYank\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"insertTranspose\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"insertReplacementText\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"insertCompositionText\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"deleteWordBackward\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"deleteWordForward\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"deleteSoftLineBackward\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"deleteSoftLineForward\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"deleteHardLineBackward\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"deleteHardLineForward\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"deleteContentBackward\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"deleteContentForward\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"deleteByCut\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"deleteByDrag\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"historyUndo\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"historyRedo\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"formatBold\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"formatItalic\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"formatUnderline\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"formatStrikeThrough\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"formatSuperscript\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"formatSubscript\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"formatJustifyCenter\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"formatJustifyFull\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"formatJustifyRight\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"formatJustifyLeft\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"formatIndent\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"formatOutdent\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"formatRemove\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"formatSetBlockTextDirection\""
          }
        ],
        "comment": "<p>The type of an input event associated with an <a href=\"#type-AutomationIntent\"><code>AutomationIntent</code></a>. It describes an edit command, e.g.\nIntentCommandType.insert, in more detail.</p>",
        "name": "IntentInputEventType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"backward\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"forward\""
          }
        ],
        "comment": "<p>A move direction associated with an <a href=\"#type-AutomationIntent\"><code>AutomationIntent</code></a>.</p>",
        "name": "IntentMoveDirectionType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"character\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"format\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"lineEnd\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"lineStart\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"lineStartOrEnd\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"object\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"pageEnd\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"pageStart\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"pageStartOrEnd\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"paragraphEnd\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"paragraphStart\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"paragraphStartOrEnd\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"sentenceEnd\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"sentenceStart\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"sentenceStartOrEnd\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"webPage\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"wordEnd\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"wordStart\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"wordStartOrEnd\""
          }
        ],
        "comment": "<p>A text boundary associated with an <a href=\"#type-AutomationIntent\"><code>AutomationIntent</code></a>.</p>",
        "name": "IntentTextBoundaryType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"spelling\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"grammar\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"textMatch\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"activeSuggestion\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"suggestion\""
          }
        ],
        "comment": "<p>Types of markers on text. See <code>AutomationNode.markerTypes</code>.</p>",
        "name": "MarkerType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"uninitialized\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"attribute\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"attributeExplicitlyEmpty\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"caption\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"contents\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"placeholder\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"relatedElement\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"title\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"value\""
          }
        ],
        "comment": "<p>Where the node's name is from.</p>",
        "name": "NameFromType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"disabled\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"readOnly\""
          }
        ],
        "comment": "<p>The input restriction for a object -- even non-controls can be disabled.</p>",
        "name": "Restriction"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"abbr\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"alert\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"alertDialog\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"anchor\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"application\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"article\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"audio\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"banner\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"blockquote\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"button\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"canvas\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"caption\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"caret\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"cell\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"checkBox\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"client\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"code\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"colorWell\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"column\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"columnHeader\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"comboBoxGrouping\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"comboBoxMenuButton\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"comment\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"complementary\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"contentDeletion\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"contentInsertion\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"contentInfo\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"date\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"dateTime\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"definition\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"descriptionList\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"descriptionListDetail\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"descriptionListTerm\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"desktop\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"details\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"dialog\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"directory\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"disclosureTriangle\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docAbstract\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docAcknowledgments\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docAfterword\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docAppendix\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docBackLink\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docBiblioEntry\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docBibliography\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docBiblioRef\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docChapter\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docColophon\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docConclusion\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docCover\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docCredit\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docCredits\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docDedication\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docEndnote\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docEndnotes\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docEpigraph\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docEpilogue\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docErrata\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docExample\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docFootnote\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docForeword\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docGlossary\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docGlossRef\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docIndex\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docIntroduction\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docNoteRef\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docNotice\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docPageBreak\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docPageFooter\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docPageHeader\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docPageList\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docPart\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docPreface\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docPrologue\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docPullquote\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docQna\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docSubtitle\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docTip\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"docToc\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"document\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"embeddedObject\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"emphasis\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"feed\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"figcaption\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"figure\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"footer\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"footerAsNonLandmark\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"form\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"genericContainer\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"graphicsDocument\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"graphicsObject\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"graphicsSymbol\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"grid\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"group\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"header\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"headerAsNonLandmark\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"heading\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"iframe\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"iframePresentational\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ignored\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"image\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"imageMap\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"imeCandidate\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"inlineTextBox\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"inputTime\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"keyboard\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"labelText\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"layoutTable\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"layoutTableCell\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"layoutTableRow\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"legend\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"lineBreak\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"link\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"list\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"listBox\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"listBoxOption\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"listGrid\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"listItem\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"listMarker\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"log\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"main\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"mark\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"marquee\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"math\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"menu\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"menuBar\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"menuItem\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"menuItemCheckBox\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"menuItemRadio\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"menuListOption\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"menuListPopup\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"meter\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"navigation\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"note\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"pane\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"paragraph\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"pdfActionableHighlight\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"pdfRoot\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"pluginObject\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"popUpButton\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"portal\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"pre\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"presentational\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"progressIndicator\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"radioButton\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"radioGroup\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"region\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"rootWebArea\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"row\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"rowGroup\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"rowHeader\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ruby\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"rubyAnnotation\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"scrollBar\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"scrollView\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"search\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"searchBox\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"section\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"slider\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"spinButton\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"splitter\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"staticText\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"status\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"strong\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"suggestion\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"svgRoot\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"switch\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"tab\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"tabList\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"tabPanel\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"table\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"tableHeaderContainer\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"term\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"textField\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"textFieldWithComboBox\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"time\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"timer\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"titleBar\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"toggleButton\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"toolbar\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"tooltip\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"tree\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"treeGrid\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"treeItem\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"unknown\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"video\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"webView\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"window\""
          }
        ],
        "comment": "<p>Describes the purpose of an <a href=\"#type-AutomationNode\"><code>AutomationNode</code></a>.</p>",
        "name": "RoleType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"unsorted\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ascending\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"descending\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"other\""
          }
        ],
        "comment": "<p>A sort applied to a table row or column header.</p>",
        "name": "SortDirectionType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"autofillAvailable\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"collapsed\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"default\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"editable\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"expanded\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"focusable\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"focused\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"horizontal\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"hovered\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ignored\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"invisible\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"linked\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"multiline\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"multiselectable\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"offscreen\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"protected\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"required\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"richlyEditable\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"vertical\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"visited\""
          }
        ],
        "comment": "<p>Describes characteristics of an <a href=\"#type-AutomationNode\"><code>AutomationNode</code></a>.</p>",
        "name": "StateType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"noTreeChanges\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"liveRegionTreeChanges\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"textMarkerChanges\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"allTreeChanges\""
          }
        ],
        "comment": "<p>Possible tree changes to listen to using addTreeChangeObserver. Note that\nlistening to all tree changes can be expensive.</p>",
        "name": "TreeChangeObserverFilter"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"nodeCreated\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"subtreeCreated\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"nodeChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"textChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"nodeRemoved\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"subtreeUpdateEnd\""
          }
        ],
        "comment": "<p>Possible changes to the automation tree. For any given atomic change to\nthe tree, each node that's added, removed, or changed, will appear in exactly\none TreeChange, with one of these types.</p><p>nodeCreated means that this\nnode was added to the tree and its parent is new as well, so it's just one\nnode in a new subtree that was added.</p>",
        "name": "TreeChangeType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "TreeChangeObserverFilter",
            "referenceLink": "#type-TreeChangeObserverFilter",
            "optional": false,
            "name": "filter"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "TreeChange",
                "referenceLink": "#type-TreeChange",
                "optional": false,
                "name": "treeChange"
              }
            ],
            "optional": false,
            "name": "observer",
            "comment": "<p>A listener for changes on the <code>AutomationNode</code> tree.</p>"
          }
        ],
        "comment": "<p>Add a tree change observer. Tree change observers are static/global, they\nlisten to changes across all trees. Pass a filter to determine what specific\ntree changes to listen to, and note that listnening to all tree changes can\nbe expensive.</p>",
        "name": "addTreeChangeObserver"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "AutomationNode",
                "referenceLink": "#type-AutomationNode",
                "optional": false,
                "name": "focusedNode"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the <code>AutomationNode</code> that currently has accessibility focus.</p>"
          }
        ],
        "comment": "<p>Get the automation node that currently has accessibility focus, globally.\nWill return null if none of the nodes in any loaded trees have accessibility\nfocus.</p>",
        "name": "getAccessibilityFocus"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "AutomationNode",
                "referenceLink": "#type-AutomationNode",
                "optional": false,
                "name": "rootNode"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the <code>AutomationNode</code> for the page is available.</p>"
          }
        ],
        "comment": "<p>Get the automation tree for the whole desktop which consists of all on screen\nviews. Note this API is currently only supported on Chrome OS.</p>",
        "name": "getDesktop"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "AutomationNode",
                "referenceLink": "#type-AutomationNode",
                "optional": false,
                "name": "focusedNode"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the <code>AutomationNode</code> that currently has focus.</p>"
          }
        ],
        "comment": "<p>Get the automation node that currently has focus, globally. Will return null\nif none of the nodes in any loaded trees have focus.</p>",
        "name": "getFocus"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "tabId"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "AutomationNode",
                "referenceLink": "#type-AutomationNode",
                "optional": false,
                "name": "rootNode"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the <code>AutomationNode</code> for the page is available.</p>"
          }
        ],
        "comment": "<p>Get the automation tree for the tab with the given tabId, or the current tab\nif no tabID is given, enabling automation if necessary. Returns a tree with a\nplaceholder root node; listen for the \"loadComplete\" event to get a\nnotification that the tree has fully loaded (the previous root node reference\nwill stop working at or before this point).</p>",
        "name": "getTree"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "TreeChange",
                "referenceLink": "#type-TreeChange",
                "optional": false,
                "name": "treeChange"
              }
            ],
            "optional": false,
            "name": "observer",
            "comment": "<p>A listener for changes on the <code>AutomationNode</code> tree.</p>"
          }
        ],
        "comment": "<p>Remove a tree change observer.</p>",
        "name": "removeTreeChangeObserver"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "SetDocumentSelectionParams",
            "referenceLink": "#type-SetDocumentSelectionParams",
            "optional": false,
            "name": "params"
          }
        ],
        "comment": "<p>Sets the selection in a tree. This creates a selection in a single tree\n(anchorObject and focusObject must have the same root). Everything in the\ntree between the two node/offset pairs gets included in the selection. The\nanchor is where the user started the selection, while the focus is the point\nat which the selection gets extended e.g. when dragging with a mouse or using\nthe keyboard. For nodes with the role staticText, the offset gives the\ncharacter offset within the value where the selection starts or ends,\nrespectively.</p>",
        "name": "setDocumentSelection"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.bluetooth",
    "shortName": "bluetooth",
    "comment": "<p>Use the <code>chrome.bluetooth</code> API to connect to a Bluetooth\ndevice.\nAll functions report failures via chrome.runtime.lastError.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The address of the adapter, in the format 'XX:XX:XX:XX:XX:XX'.</p>",
            "name": "address"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates whether or not the adapter is available (i.e. enabled).</p>",
            "name": "available"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates whether or not the adapter is currently discovering.</p>",
            "name": "discovering"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The human-readable name of the adapter.</p>",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates whether or not the adapter has power.</p>",
            "name": "powered"
          }
        ],
        "name": "AdapterState"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "FilterType",
            "referenceLink": "#type-FilterType",
            "comment": "<p>Type of filter to apply to the device list. Default is all.</p>",
            "optional": true,
            "name": "filterType"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Maximum number of bluetoth devices to return. Default is 0 (no limit) if\nunspecified.</p>",
            "optional": true,
            "name": "limit"
          }
        ],
        "name": "BluetoothFilter"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The address of the device, in the format 'XX:XX:XX:XX:XX:XX'.</p>",
            "name": "address"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The remaining battery of the device. TODO(https://crbug.com/973237): This\nfield is only used by Chrome OS and it is different from others because it is\nnot filled by the platform. In the future, when there is a unified Mojo\nservice, this field will be moved to BluetoothDeviceInfo.</p>",
            "optional": true,
            "name": "batteryPercentage"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates whether the device is connectable.</p>",
            "optional": true,
            "name": "connectable"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates whether the device is currently connected to the system.</p>",
            "optional": true,
            "name": "connected"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates whether the device is currently connecting to the system.</p>",
            "optional": true,
            "name": "connecting"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The class of the device, a bit-field defined by\nhttp://www.bluetooth.org/en-us/specification/assigned-numbers/baseband.</p>",
            "optional": true,
            "name": "deviceClass"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "deviceId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The received signal strength, in dBm. This field is avaliable and valid only\nduring discovery. Outside of discovery it's value is not specified.</p>",
            "optional": true,
            "name": "inquiryRssi"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The transmitted power level. This field is avaliable only for LE devices that\ninclude this field in AD. It is avaliable and valid only during discovery.</p>",
            "optional": true,
            "name": "inquiryTxPower"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The human-readable name of the device.</p>",
            "optional": true,
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates whether or not the device is paired with the system.</p>",
            "optional": true,
            "name": "paired"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "productId"
          },
          {
            "type": "reference",
            "referenceType": "Transport",
            "referenceLink": "#type-Transport",
            "comment": "<p>The transport type of the bluetooth device.</p>",
            "optional": true,
            "name": "transport"
          },
          {
            "type": "reference",
            "referenceType": "DeviceType",
            "referenceLink": "#type-DeviceType",
            "comment": "<p>The type of the device, if recognized by Chrome. This is obtained from the\n|deviceClass| field and only represents a small fraction of the possible\ndevice types. When in doubt you should use the |deviceClass| field directly.</p>",
            "optional": true,
            "name": "type"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>UUIDs of protocols, profiles and services advertised by the device. For\nclassic Bluetooth devices, this list is obtained from EIR data and SDP\ntables. For Low Energy devices, this list is obtained from AD and GATT\nprimary services. For dual mode devices this may be obtained from both.</p>",
            "optional": true,
            "name": "uuids"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "vendorId"
          },
          {
            "type": "reference",
            "referenceType": "VendorIdSource",
            "referenceLink": "#type-VendorIdSource",
            "comment": "<p>The Device ID record of the device, where available.</p>",
            "optional": true,
            "name": "vendorIdSource"
          }
        ],
        "name": "Device"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"computer\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"phone\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"modem\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"audio\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"carAudio\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"video\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"peripheral\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"joystick\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"gamepad\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"keyboard\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"mouse\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"tablet\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"keyboardMouseCombo\""
          }
        ],
        "comment": "<p>Common device types recognized by Chrome.</p>",
        "name": "DeviceType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"all\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"known\""
          }
        ],
        "comment": "<p>Types for filtering bluetooth devices.</p>",
        "name": "FilterType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"invalid\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"classic\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"le\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"dual\""
          }
        ],
        "comment": "<p>Transport type of the bluetooth device.</p>",
        "name": "Transport"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"bluetooth\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"usb\""
          }
        ],
        "comment": "<p>Allocation authorities for Vendor IDs.</p>",
        "name": "VendorIdSource"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "AdapterState",
                "referenceLink": "#type-AdapterState",
                "optional": false,
                "name": "adapterInfo",
                "comment": "<p>Object containing the adapter information.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with an AdapterState object describing the adapter state.</p>"
          }
        ],
        "comment": "<p>Get information about the Bluetooth adapter.</p>",
        "name": "getAdapterState"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "deviceAddress",
            "comment": "<p>Address of device to get.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Device",
                "referenceLink": "#type-Device",
                "optional": false,
                "name": "deviceInfo",
                "comment": "<p>Object containing the device information.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the Device object describing the device.</p>"
          }
        ],
        "comment": "<p>Get information about a Bluetooth device known to the system.</p>",
        "name": "getDevice"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "BluetoothFilter",
            "referenceLink": "#type-BluetoothFilter",
            "optional": true,
            "name": "filter",
            "comment": "<p>Some criteria to filter the list of returned bluetooth devices. If the filter is not set or set to <code>{}</code>, returned device list will contain all bluetooth devices. Right now this is only supported in ChromeOS, for other platforms, a full list is returned.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Device",
                  "referenceLink": "#type-Device"
                },
                "optional": false,
                "name": "deviceInfos",
                "comment": "<p>Array of object containing device information.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the search is completed.</p>"
          }
        ],
        "comment": "<p>Get a list of Bluetooth devices known to the system, including paired and\nrecently discovered devices.</p>",
        "name": "getDevices"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called to indicate success or failure.</p>"
          }
        ],
        "comment": "<p>Start discovery. Newly discovered devices will be returned via the\nonDeviceAdded event. Previously discovered devices already known to the\nadapter must be obtained using getDevices and will only be updated using the\n|onDeviceChanged| event if information about them changes.</p><p>Discovery\nwill fail to start if this application has already called startDiscovery.\nDiscovery can be resource intensive: stopDiscovery should be called as soon\nas possible.</p>",
        "name": "startDiscovery"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called to indicate success or failure.</p>"
          }
        ],
        "comment": "<p>Stop discovery.</p>",
        "name": "stopDiscovery"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "AdapterState",
                "referenceLink": "#type-AdapterState",
                "optional": false,
                "name": "state",
                "comment": "<p>The new state of the adapter.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the state of the Bluetooth adapter changes.</p>",
        "name": "onAdapterStateChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Device",
                "referenceLink": "#type-Device",
                "optional": false,
                "name": "device"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when information about a new Bluetooth device is available.</p>",
        "name": "onDeviceAdded"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Device",
                "referenceLink": "#type-Device",
                "optional": false,
                "name": "device"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when information about a known Bluetooth device has changed.</p>",
        "name": "onDeviceChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Device",
                "referenceLink": "#type-Device",
                "optional": false,
                "name": "device"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a Bluetooth device that was previously discovered has been out\nof range for long enough to be considered unavailable again, and when a\npaired device is removed.</p>",
        "name": "onDeviceRemoved"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "platforms": [
      "chromeos",
      "win",
      "mac",
      "linux\n"
    ]
  },
  {
    "name": "chrome.bluetoothLowEnergy",
    "shortName": "bluetoothLowEnergy",
    "comment": "<p>The <code>chrome.bluetoothLowEnergy</code> API is used to communicate with\nBluetooth Smart (Low Energy) devices using the\n<a\nhref=\"https://developer.bluetooth.org/TechnologyOverview/Pages/GATT.aspx\">\nGeneric Attribute Profile (GATT)</a>.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ManufacturerData",
              "referenceLink": "#type-ManufacturerData"
            },
            "comment": "<p>List of manufacturer specific data to be included in \"Manufacturer Specific\nData\" fields of the advertising data.</p>",
            "optional": true,
            "name": "manufacturerData"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ServiceData",
              "referenceLink": "#type-ServiceData"
            },
            "comment": "<p>List of service data to be included in \"Service Data\" fields of the\nadvertising data.</p>",
            "optional": true,
            "name": "serviceData"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>List of UUIDs to include in the \"Service UUIDs\" field of the Advertising\nData. These UUIDs can be of the 16bit, 32bit or 128 formats.</p>",
            "optional": true,
            "name": "serviceUuids"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>List of UUIDs to include in the \"Solicit UUIDs\" field of the Advertising\nData. These UUIDs can be of the 16bit, 32bit or 128 formats.</p>",
            "optional": true,
            "name": "solicitUuids"
          },
          {
            "type": "reference",
            "referenceType": "AdvertisementType",
            "referenceLink": "#type-AdvertisementType",
            "comment": "<p>Type of advertisement.</p>",
            "name": "type"
          }
        ],
        "name": "Advertisement"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Returns the identifier assigned to this characteristic. Use the instance ID\nto distinguish between characteristics from a peripheral with the same UUID\nand to make function calls that take in a characteristic identifier. Present,\nif this instance represents a remote characteristic.</p>",
            "optional": true,
            "name": "instanceId"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "CharacteristicProperty",
              "referenceLink": "#type-CharacteristicProperty"
            },
            "comment": "<p>The properties of this characteristic.</p>",
            "name": "properties"
          },
          {
            "type": "reference",
            "referenceType": "Service",
            "referenceLink": "#type-Service",
            "comment": "<p>The GATT service this characteristic belongs to.</p>",
            "optional": true,
            "name": "service"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The UUID of the characteristic, e.g. 00002a37-0000-1000-8000-00805f9b34fb.</p>",
            "name": "uuid"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>The currently cached characteristic value. This value gets updated when the\nvalue of the characteristic is read or updated via a notification or\nindication.</p>",
            "optional": true,
            "name": "value"
          }
        ],
        "name": "Characteristic"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating whether a connection to the device is left open when the\nevent page of the application is unloaded (see <a\nhref=\"http://developer.chrome.com/apps/app_lifecycle.html\">Manage App\nLifecycle</a>). The default value is <code>false.</code></p>",
            "name": "persistent"
          }
        ],
        "name": "ConnectProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "Characteristic",
            "referenceLink": "#type-Characteristic",
            "comment": "<p>The GATT characteristic this descriptor belongs to.</p>",
            "optional": true,
            "name": "characteristic"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Returns the identifier assigned to this descriptor. Use the instance ID to\ndistinguish between descriptors from a peripheral with the same UUID and to\nmake function calls that take in a descriptor identifier. Present, if this\ninstance represents a remote characteristic.</p>",
            "optional": true,
            "name": "instanceId"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "DescriptorPermission",
              "referenceLink": "#type-DescriptorPermission"
            },
            "comment": "<p>The permissions of this descriptor.</p>",
            "name": "permissions"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The UUID of the characteristic descriptor, e.g.\n00002902-0000-1000-8000-00805f9b34fb.</p>",
            "name": "uuid"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>The currently cached descriptor value. This value gets updated when the value\nof the descriptor is read.</p>",
            "optional": true,
            "name": "value"
          }
        ],
        "name": "Descriptor"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The address of the device, in the format 'XX:XX:XX:XX:XX:XX'.</p>",
            "name": "address"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The class of the device, a bit-field defined by\nhttp://www.bluetooth.org/en-us/specification/assigned-numbers/baseband.</p>",
            "optional": true,
            "name": "deviceClass"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The human-readable name of the device.</p>",
            "optional": true,
            "name": "name"
          }
        ],
        "name": "Device"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "number"
            },
            "name": "data"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "name": "id"
          }
        ],
        "name": "ManufacturerData"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Optional flag for sending an indication instead of a notification.</p>",
            "optional": true,
            "name": "shouldIndicate"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>New value of the characteristic.</p>",
            "name": "value"
          }
        ],
        "name": "Notification"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating whether the app should receive notifications when the event\npage of the application is unloaded (see <a\nhref=\"http://developer.chrome.com/apps/app_lifecycle.html\">Manage App\nLifecycle</a>). The default value is <code>false</code>.</p>",
            "name": "persistent"
          }
        ],
        "name": "NotificationProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "Device",
            "referenceLink": "#type-Device",
            "comment": "<p>Device that send this request.</p>",
            "name": "device"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Unique ID for this request. Use this ID when responding to this request.</p>",
            "name": "requestId"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>Value to write (if this is a write request).</p>",
            "optional": true,
            "name": "value"
          }
        ],
        "name": "Request"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If this is an error response, this should be true.</p>",
            "name": "isError"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Id of the request this is a response to.</p>",
            "name": "requestId"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>Response value. Write requests and error responses will ignore this\nparameter.</p>",
            "optional": true,
            "name": "value"
          }
        ],
        "name": "Response"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The device address of the remote peripheral that the GATT service belongs to.\nPresent, if this instance represents a remote service.</p>",
            "optional": true,
            "name": "deviceAddress"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Returns the identifier assigned to this service. Use the instance ID to\ndistinguish between services from a peripheral with the same UUID and to make\nfunction calls that take in a service identifier. Present, if this instance\nrepresents a remote service.</p>",
            "optional": true,
            "name": "instanceId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates whether the type of this service is primary or secondary.</p>",
            "name": "isPrimary"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The UUID of the service, e.g. 0000180d-0000-1000-8000-00805f9b34fb.</p>",
            "name": "uuid"
          }
        ],
        "name": "Service"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "number"
            },
            "name": "data"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "name": "uuid"
          }
        ],
        "name": "ServiceData"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"broadcast\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"peripheral\""
          }
        ],
        "comment": "<p>Type of advertisement. If 'broadcast' is chosen, the sent advertisement type\nwill be ADV_NONCONN_IND and the device will broadcast with a random MAC\nAddress. If set to 'peripheral', the advertisement type will be ADV_IND or\nADV_SCAN_IND and the device will broadcast with real Bluetooth Adapter's MAC\nAddress.</p>",
        "name": "AdvertisementType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"broadcast\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"read\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"writeWithoutResponse\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"write\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"notify\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"indicate\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"authenticatedSignedWrites\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"extendedProperties\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"reliableWrite\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"writableAuxiliaries\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"encryptRead\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"encryptWrite\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"encryptAuthenticatedRead\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"encryptAuthenticatedWrite\""
          }
        ],
        "comment": "<p>Values representing the possible properties of a characteristic.\nCharacteristic permissions are inferred from these properties. Please see the\nBluetooth 4.x spec to see the meaning of each individual property.</p>",
        "name": "CharacteristicProperty"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"read\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"write\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"encryptedRead\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"encryptedWrite\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"encryptedAuthenticatedRead\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"encryptedAuthenticatedWrite\""
          }
        ],
        "comment": "<p>Values representing possible permissions for a descriptor. Please see the\nBluetooth 4.x spec to see the meaning of each individual permission.</p>",
        "name": "DescriptorPermission"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "deviceAddress",
            "comment": "<p>The Bluetooth address of the remote device to which a GATT connection should be opened.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ConnectProperties",
            "referenceLink": "#type-ConnectProperties",
            "optional": true,
            "name": "properties",
            "comment": "<p>Connection properties (optional).</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the connect request has completed.</p>"
          }
        ],
        "comment": "<p>Establishes a connection between the application and the device with the\ngiven address. A device may be already connected and its GATT services\navailable without calling <code>connect</code>, however, an app that wants to\naccess GATT services of a device should call this function to make sure that\na connection to the device is maintained. If the device is not connected, all\nGATT services of the device will be discovered after a successful call to\n<code>connect</code>.</p>",
        "name": "connect"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Characteristic",
            "referenceLink": "#type-Characteristic",
            "optional": false,
            "name": "characteristic",
            "comment": "<p>The characteristic to create.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "serviceId",
            "comment": "<p>ID of the service to create this characteristic for.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "characteristicId"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the created characteristic's unique ID.</p>"
          }
        ],
        "comment": "<p>Create a locally hosted GATT characteristic. This characteristic must be\nhosted under a valid service. If the service ID is not valid, the lastError\nwill be set. This function is only available if the app has both the\nbluetooth:low_energy and the bluetooth:peripheral permissions set to true.\nThe peripheral permission may not be available to all apps.</p>",
        "name": "createCharacteristic"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Descriptor",
            "referenceLink": "#type-Descriptor",
            "optional": false,
            "name": "descriptor",
            "comment": "<p>The descriptor to create.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "characteristicId",
            "comment": "<p>ID of the characteristic to create this descriptor for.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "descriptorId"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the created descriptor's unique ID.</p>"
          }
        ],
        "comment": "<p>Create a locally hosted GATT descriptor. This descriptor must be hosted under\na valid characteristic. If the characteristic ID is not valid, the lastError\nwill be set. This function is only available if the app has both the\nbluetooth:low_energy and the bluetooth:peripheral permissions set to true.\nThe peripheral permission may not be available to all apps.</p>",
        "name": "createDescriptor"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Service",
            "referenceLink": "#type-Service",
            "optional": false,
            "name": "service",
            "comment": "<p>The service to create.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "serviceId"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the created services's unique ID.</p>"
          }
        ],
        "comment": "<p>Create a locally hosted GATT service. This service can be registered to be\navailable on a local GATT server. This function is only available if the app\nhas both the bluetooth:low_energy and the bluetooth:peripheral permissions\nset to true. The peripheral permission may not be available to all apps.</p>",
        "name": "createService"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "deviceAddress",
            "comment": "<p>The Bluetooth address of the remote device.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the disconnect request has completed.</p>"
          }
        ],
        "comment": "<p>Closes the app's connection to the device with the given address. Note that\nthis will not always destroy the physical link itself, since there may be\nother apps with open connections.</p>",
        "name": "disconnect"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "characteristicId",
            "comment": "<p>The instance ID of the requested GATT characteristic.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Characteristic",
                "referenceLink": "#type-Characteristic",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the requested Characteristic object.</p>"
          }
        ],
        "comment": "<p>Get the GATT characteristic with the given instance ID that belongs to the\ngiven GATT service, if the characteristic exists.</p>",
        "name": "getCharacteristic"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "serviceId",
            "comment": "<p>The instance ID of the GATT service whose characteristics should be returned.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Characteristic",
                  "referenceLink": "#type-Characteristic"
                },
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the list of characteristics that belong to the given service.</p>"
          }
        ],
        "comment": "<p>Get a list of all discovered GATT characteristics that belong to the given\nservice.</p>",
        "name": "getCharacteristics"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "descriptorId",
            "comment": "<p>The instance ID of the requested GATT characteristic descriptor.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Descriptor",
                "referenceLink": "#type-Descriptor",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the requested Descriptor object.</p>"
          }
        ],
        "comment": "<p>Get the GATT characteristic descriptor with the given instance ID.</p>",
        "name": "getDescriptor"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "characteristicId",
            "comment": "<p>The instance ID of the GATT characteristic whose descriptors should be returned.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Descriptor",
                  "referenceLink": "#type-Descriptor"
                },
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the list of descriptors that belong to the given characteristic.</p>"
          }
        ],
        "comment": "<p>Get a list of GATT characteristic descriptors that belong to the given\ncharacteristic.</p>",
        "name": "getDescriptors"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "serviceId",
            "comment": "<p>The instance ID of the GATT service whose included services should be returned.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Service",
                  "referenceLink": "#type-Service"
                },
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the list of GATT services included from the given service.</p>"
          }
        ],
        "comment": "<p>Get a list of GATT services that are included by the given service.</p>",
        "name": "getIncludedServices"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "serviceId",
            "comment": "<p>The instance ID of the requested GATT service.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Service",
                "referenceLink": "#type-Service",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the requested Service object.</p>"
          }
        ],
        "comment": "<p>Get the GATT service with the given instance ID.</p>",
        "name": "getService"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "deviceAddress",
            "comment": "<p>The Bluetooth address of the remote device whose GATT services should be returned.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Service",
                  "referenceLink": "#type-Service"
                },
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the list of requested Service objects.</p>"
          }
        ],
        "comment": "<p>Get all the GATT services that were discovered on the remote device with\nthe given device address.</p><p><em>Note:</em> If service discovery is not\nyet complete on the device, this API will return a subset (possibly empty) of\nservices. A work around is to add a time based delay and/or call repeatedly\nuntil the expected number of services is returned.</p>",
        "name": "getServices"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "characteristicId",
            "comment": "<p>The characteristic to send the notication for.</p>"
          },
          {
            "type": "reference",
            "referenceType": "Notification",
            "referenceLink": "#type-Notification",
            "optional": false,
            "name": "notification"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback called once the notification or indication has been sent successfully.</p>"
          }
        ],
        "comment": "<p>Notify a remote device of a new value for a characteristic. If the\nshouldIndicate flag in the notification object is true, an indication will be\nsent instead of a notification. Note, the characteristic needs to correctly\nset the 'notify' or 'indicate' property during creation for this call to\nsucceed. This function is only available if the app has both the\nbluetooth:low_energy and the bluetooth:peripheral permissions set to true.\nThe peripheral permission may not be available to all apps.</p>",
        "name": "notifyCharacteristicValueChanged"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "characteristicId",
            "comment": "<p>The instance ID of the GATT characteristic whose value should be read from the remote device.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Characteristic",
                "referenceLink": "#type-Characteristic",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the Characteristic object whose value was requested. The <code>value</code> field of the returned Characteristic object contains the result of the read request.</p>"
          }
        ],
        "comment": "<p>Retrieve the value of a specified characteristic from a remote peripheral.</p>",
        "name": "readCharacteristicValue"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "descriptorId",
            "comment": "<p>The instance ID of the GATT characteristic descriptor whose value should be read from the remote device.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Descriptor",
                "referenceLink": "#type-Descriptor",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the Descriptor object whose value was requested. The <code>value</code> field of the returned Descriptor object contains the result of the read request.</p>"
          }
        ],
        "comment": "<p>Retrieve the value of a specified characteristic descriptor from a remote\nperipheral.</p>",
        "name": "readDescriptorValue"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Advertisement",
            "referenceLink": "#type-Advertisement",
            "optional": false,
            "name": "advertisement",
            "comment": "<p>The advertisement to advertise.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "advertisementId"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called once the registeration is done and we've started advertising. Returns the id of the created advertisement.</p>"
          }
        ],
        "comment": "<p>Create an advertisement and register it for advertising. To call this\nfunction, the app must have the bluetooth:low_energy and bluetooth:peripheral\npermissions set to true. Additionally this API is only available to auto\nlaunched apps in Kiosk Mode or by setting the\n'--enable-ble-advertising-in-apps' command-line switch. See\nhttps://developer.chrome.com/apps/manifest/bluetooth Note: On some hardware,\ncentral and peripheral modes at the same time is supported but on hardware\nthat doesn't support this, making this call will switch the device to\nperipheral mode. In the case of hardware which does not support both central\nand peripheral mode, attempting to use the device in both modes will lead to\nundefined behavior or prevent other central-role applications from behaving\ncorrectly (including the discovery of Bluetooth Low Energy devices).</p>",
        "name": "registerAdvertisement"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "serviceId",
            "comment": "<p>Unique ID of a created service.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback with the result of the register operation.</p>"
          }
        ],
        "comment": "<p>Register the given service with the local GATT server. If the service ID is\ninvalid, the lastError will be set. This function is only available if the\napp has both the bluetooth:low_energy and the bluetooth:peripheral\npermissions set to true. The peripheral permission may not be available to\nall apps.</p>",
        "name": "registerService"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "serviceId",
            "comment": "<p>Unique ID of a current registered service.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback called once the service is removed.</p>"
          }
        ],
        "comment": "<p>Remove the specified service, unregistering it if it was registered. If the\nservice ID is invalid, the lastError will be set. This function is only\navailable if the app has both the bluetooth:low_energy and the\nbluetooth:peripheral permissions set to true. The peripheral permission may\nnot be available to all apps.</p>",
        "name": "removeService"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called once the advertisements are reset.</p>"
          }
        ],
        "comment": "<p>Resets advertising on the current device. It will unregister and stop all\nexisting advertisements.</p>",
        "name": "resetAdvertising"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Response",
            "referenceLink": "#type-Response",
            "optional": false,
            "name": "response",
            "comment": "<p>The response to the request.</p>"
          }
        ],
        "comment": "<p>Sends a response for a characteristic or descriptor read/write request. This\nfunction is only available if the app has both the bluetooth:low_energy and\nthe bluetooth:peripheral permissions set to true. The peripheral permission\nmay not be available to all apps.</p>",
        "name": "sendRequestResponse"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "minInterval",
            "comment": "<p>Minimum interval between advertisments (in milliseconds). This cannot be lower than 20ms (as per the spec).</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "maxInterval",
            "comment": "<p>Maximum interval between advertisments (in milliseconds). This cannot be more than 10240ms (as per the spec).</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called once the interval has been set.</p>"
          }
        ],
        "comment": "<p>Set's the interval betweeen two consecutive advertisements. Note: This is a\nbest effort. The actual interval may vary non-trivially from the requested\nintervals. On some hardware, there is a minimum interval of 100ms. The\nminimum and maximum values cannot exceed the the range allowed by the\nBluetooth 4.2 specification.</p>",
        "name": "setAdvertisingInterval"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "characteristicId",
            "comment": "<p>The instance ID of the GATT characteristic that notifications should be enabled on.</p>"
          },
          {
            "type": "reference",
            "referenceType": "NotificationProperties",
            "referenceLink": "#type-NotificationProperties",
            "optional": true,
            "name": "properties",
            "comment": "<p>Notification session properties (optional).</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the request has completed.</p>"
          }
        ],
        "comment": "<p>Enable value notifications/indications from the specified characteristic.\nOnce enabled, an application can listen to notifications using the <a href=\"#event-onCharacteristicValueChanged\"><code>onCharacteristicValueChanged</code></a> event.</p>",
        "name": "startCharacteristicNotifications"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "characteristicId",
            "comment": "<p>The instance ID of the GATT characteristic on which this app's notification session should be stopped.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the request has completed (optional).</p>"
          }
        ],
        "comment": "<p>Disable value notifications/indications from the specified characteristic.\nAfter a successful call, the application will stop receiving\nnotifications/indications from this characteristic.</p>",
        "name": "stopCharacteristicNotifications"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "advertisementId",
            "comment": "<p>Id of the advertisement to unregister.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called once the advertisement is unregistered and is no longer being advertised.</p>"
          }
        ],
        "comment": "<p>Unregisters an advertisement and stops its advertising. If the advertisement\nfails to unregister the only way to stop advertising might be to restart the\ndevice.</p>",
        "name": "unregisterAdvertisement"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "serviceId",
            "comment": "<p>Unique ID of a current registered service.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback with the result of the register operation.</p>"
          }
        ],
        "comment": "<p>Unregister the given service with the local GATT server. If the service ID is\ninvalid, the lastError will be set. This function is only available if the\napp has both the bluetooth:low_energy and the bluetooth:peripheral\npermissions set to true. The peripheral permission may not be available to\nall apps.</p>",
        "name": "unregisterService"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "characteristicId",
            "comment": "<p>The instance ID of the GATT characteristic whose value should be written to.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "value",
            "comment": "<p>The value that should be sent to the remote characteristic as part of the write request.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the write request has completed.</p>"
          }
        ],
        "comment": "<p>Write the value of a specified characteristic from a remote peripheral.</p>",
        "name": "writeCharacteristicValue"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "descriptorId",
            "comment": "<p>The instance ID of the GATT characteristic descriptor whose value should be written to.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "value",
            "comment": "<p>The value that should be sent to the remote descriptor as part of the write request.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the write request has completed.</p>"
          }
        ],
        "comment": "<p>Write the value of a specified characteristic descriptor from a remote\nperipheral.</p>",
        "name": "writeDescriptorValue"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Request",
                "referenceLink": "#type-Request",
                "optional": false,
                "name": "request",
                "comment": "<p>Request data for this request.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "characteristicId"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a connected central device requests to read the value of a\ncharacteristic registered on the local GATT server. Not responding to\nthis request for a long time may lead to a disconnection. This event is\nonly available if the app has both the bluetooth:low_energy and the\nbluetooth:peripheral permissions set to true. The peripheral permission\nmay not be available to all apps.</p>",
        "name": "onCharacteristicReadRequest"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Characteristic",
                "referenceLink": "#type-Characteristic",
                "optional": false,
                "name": "characteristic",
                "comment": "<p>The GATT characteristic whose value has changed.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the value of a remote GATT characteristic changes, either as a\nresult of a read request, or a value change notification/indication This\nevent will only be sent if the app has enabled notifications by calling\n<a href=\"#method-startCharacteristicNotifications\"><code>startCharacteristicNotifications</code></a>.</p>",
        "name": "onCharacteristicValueChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Request",
                "referenceLink": "#type-Request",
                "optional": false,
                "name": "request",
                "comment": "<p>Request data for this request.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "characteristicId"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a connected central device requests to write the value of a\ncharacteristic registered on the local GATT server. Not responding to\nthis request for a long time may lead to a disconnection. This event is\nonly available if the app has both the bluetooth:low_energy and the\nbluetooth:peripheral permissions set to true. The peripheral permission\nmay not be available to all apps.</p>",
        "name": "onCharacteristicWriteRequest"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Request",
                "referenceLink": "#type-Request",
                "optional": false,
                "name": "request",
                "comment": "<p>Request data for this request.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "descriptorId"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a connected central device requests to read the value of a\ndescriptor registered on the local GATT server. Not responding to this\nrequest for a long time may lead to a disconnection. This event is only\navailable if the app has both the bluetooth:low_energy and the\nbluetooth:peripheral permissions set to true. The peripheral permission\nmay not be available to all apps.</p>",
        "name": "onDescriptorReadRequest"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Descriptor",
                "referenceLink": "#type-Descriptor",
                "optional": false,
                "name": "descriptor",
                "comment": "<p>The GATT characteristic descriptor whose value has changed.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the value of a remote GATT characteristic descriptor changes,\nusually as a result of a read request. This event exists mostly for\nconvenience and will always be sent after a successful call to <a href=\"#method-readDescriptorValue\"><code>readDescriptorValue</code></a>.</p>",
        "name": "onDescriptorValueChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Request",
                "referenceLink": "#type-Request",
                "optional": false,
                "name": "request",
                "comment": "<p>Request data for this request.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "descriptorId"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a connected central device requests to write the value of a\ndescriptor registered on the local GATT server. Not responding to this\nrequest for a long time may lead to a disconnection. This event is only\navailable if the app has both the bluetooth:low_energy and the\nbluetooth:peripheral permissions set to true. The peripheral permission\nmay not be available to all apps.</p>",
        "name": "onDescriptorWriteRequest"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Service",
                "referenceLink": "#type-Service",
                "optional": false,
                "name": "service",
                "comment": "<p>The GATT service that was added.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired whan a new GATT service has been discovered on a remote device.</p>",
        "name": "onServiceAdded"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Service",
                "referenceLink": "#type-Service",
                "optional": false,
                "name": "service",
                "comment": "<p>The GATT service whose state has changed.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the state of a remote GATT service changes. This involves any\ncharacteristics and/or descriptors that get added or removed from the\nservice, as well as \"ServiceChanged\" notifications from the remote\ndevice.</p>",
        "name": "onServiceChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Service",
                "referenceLink": "#type-Service",
                "optional": false,
                "name": "service",
                "comment": "<p>The GATT service that was removed.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a GATT service that was previously discovered on a remote\ndevice has been removed.</p>",
        "name": "onServiceRemoved"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "platforms": [
      "chromeos",
      "linux",
      "win",
      "mac\n"
    ]
  },
  {
    "name": "chrome.bluetoothSocket",
    "shortName": "bluetoothSocket",
    "comment": "<p>Use the <code>chrome.bluetoothSocket</code> API to send and receive data\nto\nBluetooth devices using RFCOMM and L2CAP connections.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "AcceptError",
            "referenceLink": "#type-AcceptError",
            "comment": "<p>An error code indicating what went wrong.</p>",
            "name": "error"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The error message.</p>",
            "name": "errorMessage"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The server socket identifier.</p>",
            "name": "socketId"
          }
        ],
        "name": "AcceptErrorInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The client socket identifier, i.e. the socket identifier of the newly\nestablished connection. This socket identifier should be used only with\nfunctions from the <code>chrome.bluetoothSocket</code> namespace. Note the\nclient socket is initially paused and must be explictly un-paused by the\napplication to start receiving data.</p>",
            "name": "clientSocketId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The server socket identifier.</p>",
            "name": "socketId"
          }
        ],
        "name": "AcceptInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID of the newly created socket. Note that socket IDs created from this\nAPI are not compatible with socket IDs created from other APIs, such as the\n<code><a href=\"../sockets_tcp/\"><code>sockets.tcp</code></a></code> API.</p>",
            "name": "socketId"
          }
        ],
        "name": "CreateInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Length of the socket's listen queue. The default value depends on the\noperating system's host subsystem.</p>",
            "optional": true,
            "name": "backlog"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The RFCOMM Channel used by <code>listenUsingRfcomm</code>. If specified, this\nchannel must not be previously in use or the method call will fail. When not\nspecified, an unused channel will be automatically allocated.</p>",
            "optional": true,
            "name": "channel"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The L2CAP PSM used by <code>listenUsingL2cap</code>. If specified, this PSM\nmust not be previously in use or the method call with fail. When not\nspecified, an unused PSM will be automatically allocated.</p>",
            "optional": true,
            "name": "psm"
          }
        ],
        "name": "ListenOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ReceiveError",
            "referenceLink": "#type-ReceiveError",
            "comment": "<p>An error code indicating what went wrong.</p>",
            "name": "error"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The error message.</p>",
            "name": "errorMessage"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The socket identifier.</p>",
            "name": "socketId"
          }
        ],
        "name": "ReceiveErrorInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>The data received, with a maxium size of <code>bufferSize</code>.</p>",
            "name": "data"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The socket identifier.</p>",
            "name": "socketId"
          }
        ],
        "name": "ReceiveInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>If the underlying socket is connected, contains the Bluetooth address of the\ndevice it is connected to.</p>",
            "optional": true,
            "name": "address"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The size of the buffer used to receive data. If no buffer size has been\nspecified explictly, the value is not provided.</p>",
            "optional": true,
            "name": "bufferSize"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating whether the socket is connected to a remote peer.</p>",
            "name": "connected"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Application-defined string associated with the socket.</p>",
            "optional": true,
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating whether a connected socket blocks its peer from sending more\ndata, or whether connection requests on a listening socket are dispatched\nthrough the <code>onAccept</code> event or queued up in the listen queue\nbacklog. See <code>setPaused</code>. The default value is \"false\".</p>",
            "name": "paused"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating if the socket remains open when the event page of the\napplication is unloaded (see <code>SocketProperties.persistent</code>). The\ndefault value is \"false\".</p>",
            "name": "persistent"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The socket identifier.</p>",
            "name": "socketId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>If the underlying socket is connected, contains information about the service\nUUID it is connected to, otherwise if the underlying socket is listening,\ncontains information about the service UUID it is listening on.</p>",
            "optional": true,
            "name": "uuid"
          }
        ],
        "name": "SocketInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The size of the buffer used to receive data. The default value is 4096.</p>",
            "optional": true,
            "name": "bufferSize"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>An application-defined string associated with the socket.</p>",
            "optional": true,
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating whether the socket is left open when the event page of the\napplication is unloaded (see <a\nhref=\"http://developer.chrome.com/apps/app_lifecycle.html\">Manage App\nLifecycle</a>). The default value is <code>false.</code> When the application\nis loaded, any sockets previously opened with persistent=true can be fetched\nwith $ref:getSockets.</p>",
            "optional": true,
            "name": "persistent"
          }
        ],
        "name": "SocketProperties"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"system_error\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"not_listening\""
          }
        ],
        "name": "AcceptError"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"disconnected\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"system_error\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"not_connected\""
          }
        ],
        "name": "ReceiveError"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the <code>close</code> operation completes.</p>"
          }
        ],
        "comment": "<p>Disconnects and destroys the socket. Each socket created should be closed\nafter use. The socket id is no longer valid as soon at the function is\ncalled. However, the socket is guaranteed to be closed only when the callback\nis invoked.</p>",
        "name": "close"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "address",
            "comment": "<p>The address of the Bluetooth device.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "uuid",
            "comment": "<p>The UUID of the service to connect to.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the connect attempt is complete.</p>"
          }
        ],
        "comment": "<p>Connects the socket to a remote Bluetooth device. When the\n<code>connect</code> operation completes successfully, <code>onReceive</code>\nevents are raised when data is received from the peer. If a network error\noccur while the runtime is receiving packets, a <code>onReceiveError</code>\nevent is raised, at which point no more <code>onReceive</code> event will be\nraised for this socket until the <code>setPaused(false)</code> method is\ncalled.</p>",
        "name": "connect"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "SocketProperties",
            "referenceLink": "#type-SocketProperties",
            "optional": true,
            "name": "properties",
            "comment": "<p>The socket properties (optional).</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "CreateInfo",
                "referenceLink": "#type-CreateInfo",
                "optional": false,
                "name": "createInfo",
                "comment": "<p>The result of the socket creation.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the socket has been created.</p>"
          }
        ],
        "comment": "<p>Creates a Bluetooth socket.</p>",
        "name": "create"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the disconnect attempt is complete.</p>"
          }
        ],
        "comment": "<p>Disconnects the socket. The socket identifier remains valid.</p>",
        "name": "disconnect"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "SocketInfo",
                "referenceLink": "#type-SocketInfo",
                "optional": false,
                "name": "socketInfo",
                "comment": "<p>Object containing the socket information.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the socket state is available.</p>"
          }
        ],
        "comment": "<p>Retrieves the state of the given socket.</p>",
        "name": "getInfo"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "SocketInfo",
                  "referenceLink": "#type-SocketInfo"
                },
                "optional": false,
                "name": "sockets"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the list of sockets is available.</p>"
          }
        ],
        "comment": "<p>Retrieves the list of currently opened sockets owned by the application.</p>",
        "name": "getSockets"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "uuid",
            "comment": "<p>Service UUID to listen on.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ListenOptions",
            "referenceLink": "#type-ListenOptions",
            "optional": true,
            "name": "options",
            "comment": "<p>Optional additional options for the service.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when listen operation completes.</p>"
          }
        ],
        "comment": "<p>Listen for connections using the L2CAP protocol.</p>",
        "name": "listenUsingL2cap"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "uuid",
            "comment": "<p>Service UUID to listen on.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ListenOptions",
            "referenceLink": "#type-ListenOptions",
            "optional": true,
            "name": "options",
            "comment": "<p>Optional additional options for the service.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when listen operation completes.</p>"
          }
        ],
        "comment": "<p>Listen for connections using the RFCOMM protocol.</p>",
        "name": "listenUsingRfcomm"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "data",
            "comment": "<p>The data to send.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "bytesSent",
                "comment": "<p>The number of bytes sent.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the number of bytes sent.</p>"
          }
        ],
        "comment": "<p>Sends data on the given Bluetooth socket.</p>",
        "name": "send"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "paused"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback from the <code>setPaused</code> method.</p>"
          }
        ],
        "comment": "<p>Enables or disables a connected socket from receiving messages from its peer,\nor a listening socket from accepting new connections. The default value is\n\"false\". Pausing a connected socket is typically used by an application to\nthrottle data sent by its peer. When a connected socket is paused, no\n<code>onReceive</code>event is raised. When a socket is connected and\nun-paused, <code>onReceive</code> events are raised again when messages are\nreceived. When a listening socket is paused, new connections are accepted\nuntil its backlog is full then additional connection requests are refused.\n<code>onAccept</code> events are raised only when the socket is un-paused.</p>",
        "name": "setPaused"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "reference",
            "referenceType": "SocketProperties",
            "referenceLink": "#type-SocketProperties",
            "optional": false,
            "name": "properties",
            "comment": "<p>The properties to update.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the properties are updated.</p>"
          }
        ],
        "comment": "<p>Updates the socket properties.</p>",
        "name": "update"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "AcceptInfo",
                "referenceLink": "#type-AcceptInfo",
                "optional": false,
                "name": "info",
                "comment": "<p>The event data.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event raised when a connection has been established for a given socket.</p>",
        "name": "onAccept"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "AcceptErrorInfo",
                "referenceLink": "#type-AcceptErrorInfo",
                "optional": false,
                "name": "info",
                "comment": "<p>The event data.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event raised when a network error occurred while the runtime was waiting\nfor new connections on the given socket. Once this event is raised, the\nsocket is set to <code>paused</code> and no more <code>onAccept</code>\nevents are raised for this socket.</p>",
        "name": "onAcceptError"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ReceiveInfo",
                "referenceLink": "#type-ReceiveInfo",
                "optional": false,
                "name": "info",
                "comment": "<p>The event data.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event raised when data has been received for a given socket.</p>",
        "name": "onReceive"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ReceiveErrorInfo",
                "referenceLink": "#type-ReceiveErrorInfo",
                "optional": false,
                "name": "info",
                "comment": "<p>The event data.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event raised when a network error occured while the runtime was waiting\nfor data on the socket. Once this event is raised, the socket is set to\n<code>paused</code> and no more <code>onReceive</code> events are raised\nfor this socket.</p>",
        "name": "onReceiveError"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "platforms": [
      "chromeos",
      "win",
      "mac",
      "linux\n"
    ]
  },
  {
    "name": "chrome.bookmarks",
    "shortName": "bookmarks",
    "comment": "<p>Use the <code>chrome.bookmarks</code> API to create, organize, and otherwise\nmanipulate bookmarks. Also see <a href=\"../../override/\">Override Pages</a>, which\nyou can use to create a custom Bookmark Manager page.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "BookmarkTreeNode",
              "referenceLink": "#type-BookmarkTreeNode"
            },
            "comment": "<p>An ordered list of children of this node.</p>",
            "optional": true,
            "name": "children"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>When this node was created, in milliseconds since the epoch (<code>new\nDate(dateAdded)</code>).</p>",
            "optional": true,
            "name": "dateAdded"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>When the contents of this folder last changed, in milliseconds since the\nepoch.</p>",
            "optional": true,
            "name": "dateGroupModified"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The unique identifier for the node. IDs are unique within the current\nprofile, and they remain valid even after the browser is restarted.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The 0-based position of this node within its parent folder.</p>",
            "optional": true,
            "name": "index"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The <code>id</code> of the parent folder.  Omitted for the root node.</p>",
            "optional": true,
            "name": "parentId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The text displayed for the node.</p>",
            "name": "title"
          },
          {
            "type": "reference",
            "referenceType": "BookmarkTreeNodeUnmodifiable",
            "referenceLink": "#type-BookmarkTreeNodeUnmodifiable",
            "comment": "<p>Indicates the reason why this node is unmodifiable. The <var>managed</var>\nvalue indicates that this node was configured by the system administrator or\nby the custodian of a supervised user. Omitted if the node can be modified by\nthe user and the extension (default).</p>",
            "optional": true,
            "name": "unmodifiable"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL navigated to when a user clicks the bookmark. Omitted for folders.</p>",
            "optional": true,
            "name": "url"
          }
        ],
        "comment": "<p>A node (either a bookmark or a folder) in the bookmark tree.  Child nodes are\nordered within their parent folder.</p>",
        "name": "BookmarkTreeNode"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "index"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Defaults to the Other Bookmarks folder.</p>",
            "optional": true,
            "name": "parentId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "title"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "url"
          }
        ],
        "comment": "<p>Object passed to the create() function.</p>",
        "name": "CreateDetails"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"managed\""
          }
        ],
        "comment": "<p>Indicates the reason why this node is unmodifiable. The <var>managed</var>\nvalue indicates that this node was configured by the system administrator.\nOmitted if the node can be modified by the user and the extension (default).</p>",
        "name": "BookmarkTreeNodeUnmodifiable"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "1000000",
        "deprecated": "Bookmark write operations are no longer limited by Chrome.\n",
        "name": "MAX_SUSTAINED_WRITE_OPERATIONS_PER_MINUTE"
      },
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "1000000",
        "deprecated": "Bookmark write operations are no longer limited by Chrome.\n",
        "name": "MAX_WRITE_OPERATIONS_PER_HOUR"
      }
    ],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "CreateDetails",
            "referenceLink": "#type-CreateDetails",
            "optional": false,
            "name": "bookmark"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "BookmarkTreeNode",
                "referenceLink": "#type-BookmarkTreeNode",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Creates a bookmark or folder under the specified parentId.  If url is NULL or\nmissing, it will be a folder.</p>",
        "name": "create"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "union",
            "isEnum": false,
            "options": [
              {
                "type": "primitive",
                "primitiveType": "string"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                },
                "minLength": 1
              }
            ],
            "optional": false,
            "name": "idOrIdList",
            "comment": "<p>A single string-valued id, or an array of string-valued ids</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "BookmarkTreeNode",
                  "referenceLink": "#type-BookmarkTreeNode"
                },
                "optional": false,
                "name": "results"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves the specified BookmarkTreeNode(s).</p>",
        "name": "get"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "BookmarkTreeNode",
                  "referenceLink": "#type-BookmarkTreeNode"
                },
                "optional": false,
                "name": "results"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves the children of the specified BookmarkTreeNode id.</p>",
        "name": "getChildren"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "numberOfItems",
            "comment": "<p>The maximum number of items to return.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "BookmarkTreeNode",
                  "referenceLink": "#type-BookmarkTreeNode"
                },
                "optional": false,
                "name": "results"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves the recently added bookmarks.</p>",
        "name": "getRecent"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id",
            "comment": "<p>The ID of the root of the subtree to retrieve.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "BookmarkTreeNode",
                  "referenceLink": "#type-BookmarkTreeNode"
                },
                "optional": false,
                "name": "results"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves part of the Bookmarks hierarchy, starting at the specified node.</p>",
        "name": "getSubTree"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "BookmarkTreeNode",
                  "referenceLink": "#type-BookmarkTreeNode"
                },
                "optional": false,
                "name": "results"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves the entire Bookmarks hierarchy.</p>",
        "name": "getTree"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": true,
                "name": "index"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": true,
                "name": "parentId"
              }
            ],
            "optional": false,
            "name": "destination"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "BookmarkTreeNode",
                "referenceLink": "#type-BookmarkTreeNode",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Moves the specified BookmarkTreeNode to the provided location.</p>",
        "name": "move"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Removes a bookmark or an empty bookmark folder.</p>",
        "name": "remove"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Recursively removes a bookmark folder.</p>",
        "name": "removeTree"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "union",
            "isEnum": false,
            "options": [
              {
                "type": "primitive",
                "primitiveType": "string"
              },
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>A string of words and quoted phrases that are matched against bookmark URLs\nand titles.</p>",
                    "optional": true,
                    "name": "query"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The title of the bookmark; matches verbatim.</p>",
                    "optional": true,
                    "name": "title"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The URL of the bookmark; matches verbatim. Note that folders have no URL.</p>",
                    "optional": true,
                    "name": "url"
                  }
                ]
              }
            ],
            "optional": false,
            "name": "query",
            "comment": "<p>Either a string of words and quoted phrases that are matched against bookmark URLs and titles, or an object. If an object, the properties <code>query</code>, <code>url</code>, and <code>title</code> may be specified and bookmarks matching all specified properties will be produced.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "BookmarkTreeNode",
                  "referenceLink": "#type-BookmarkTreeNode"
                },
                "optional": false,
                "name": "results"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Searches for BookmarkTreeNodes matching the given query. Queries specified\nwith an object produce BookmarkTreeNodes matching all specified properties.</p>",
        "name": "search"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": true,
                "name": "title"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": true,
                "name": "url"
              }
            ],
            "optional": false,
            "name": "changes"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "BookmarkTreeNode",
                "referenceLink": "#type-BookmarkTreeNode",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Updates the properties of a bookmark or folder. Specify only the properties\nthat you want to change; unspecified properties will be left unchanged.\n<b>Note:</b> Currently, only 'title' and 'url' are supported.</p>",
        "name": "update"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "id"
              },
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "title"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "optional": true,
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "changeInfo"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a bookmark or folder changes.  <b>Note:</b> Currently, only\ntitle and url changes trigger this.</p>",
        "name": "onChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "id"
              },
              {
                "type": "object",
                "properties": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "primitive",
                      "primitiveType": "string"
                    },
                    "name": "childIds"
                  }
                ],
                "optional": false,
                "name": "reorderInfo"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the children of a folder have changed their order due to the\norder being sorted in the UI.  This is not called as a result of a\nmove().</p>",
        "name": "onChildrenReordered"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "id"
              },
              {
                "type": "reference",
                "referenceType": "BookmarkTreeNode",
                "referenceLink": "#type-BookmarkTreeNode",
                "optional": false,
                "name": "bookmark"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a bookmark or folder is created.</p>",
        "name": "onCreated"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a bookmark import session is begun.  Expensive observers\nshould ignore onCreated updates until onImportEnded is fired.  Observers\nshould still handle other notifications immediately.</p>",
        "name": "onImportBegan"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a bookmark import session is ended.</p>",
        "name": "onImportEnded"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "id"
              },
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "name": "index"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "name": "oldIndex"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "oldParentId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "parentId"
                  }
                ],
                "optional": false,
                "name": "moveInfo"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a bookmark or folder is moved to a different parent folder.</p>",
        "name": "onMoved"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "id"
              },
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "name": "index"
                  },
                  {
                    "type": "reference",
                    "referenceType": "BookmarkTreeNode",
                    "referenceLink": "#type-BookmarkTreeNode",
                    "name": "node"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "parentId"
                  }
                ],
                "optional": false,
                "name": "removeInfo"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a bookmark or folder is removed.  When a folder is removed\nrecursively, a single notification is fired for the folder, and none for\nits contents.</p>",
        "name": "onRemoved"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "bookmarks\n"
    ]
  },
  {
    "name": "chrome.browser",
    "shortName": "browser",
    "comment": "<p>Use the <code>chrome.browser</code> API to interact with the Chrome browser\nassociated with the current application and Chrome profile.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL to navigate to when the new tab is initially opened.</p>",
            "name": "url"
          }
        ],
        "name": "OpenTabOptions"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "OpenTabOptions",
            "referenceLink": "#type-OpenTabOptions",
            "optional": false,
            "name": "options",
            "comment": "<p>Configures how the tab should be opened.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the tab was successfully created, or failed to be created. If failed, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set.</p>"
          }
        ],
        "comment": "<p>Opens a new tab in a browser window associated with the current application\nand Chrome profile. If no browser window for the Chrome profile is opened, a\nnew one is opened prior to creating the new tab.</p>",
        "name": "openTab"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "platform_app.d.ts",
    "permissions": [
      "browser\n"
    ]
  },
  {
    "name": "chrome.browserAction",
    "shortName": "browserAction",
    "comment": "<p>Use browser actions to put icons in the main Google Chrome toolbar, to the\nright of the address bar. In addition to its <a\nhref=\"#icon\">icon</a>, a browser action can have a <a\nhref=\"#tooltip\">tooltip</a>, a <a\nhref=\"#badge\">badge</a>, and a <a\nhref=\"#popups\">popup</a>.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID of the tab to query state for. If no tab is specified, the\nnon-tab-specific state is returned.</p>",
            "optional": true,
            "name": "tabId"
          }
        ],
        "name": "TabDetails"
      },
      {
        "type": "array",
        "elementType": {
          "type": "primitive",
          "primitiveType": "number"
        },
        "minLength": 4,
        "maxLength": 4,
        "name": "ColorArray"
      },
      {
        "type": "reference",
        "referenceType": "ImageData",
        "comment": "<p>Pixel data for an image. Must be an ImageData object; for example, from a\n<code>canvas</code> element.</p>",
        "name": "ImageDataType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "tabId",
            "comment": "<p>The ID of the tab for which to modify the browser action.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Disables the browser action for a tab.</p>",
        "name": "disable"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "tabId",
            "comment": "<p>The ID of the tab for which to modify the browser action.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Enables the browser action for a tab. Defaults to enabled.</p>",
        "name": "enable"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "TabDetails",
            "referenceLink": "#type-TabDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ColorArray",
                "referenceLink": "#type-ColorArray",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the background color of the browser action.</p>",
        "name": "getBadgeBackgroundColor"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "TabDetails",
            "referenceLink": "#type-TabDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the badge text of the browser action. If no tab is specified, the\nnon-tab-specific badge text is returned.</p>",
        "name": "getBadgeText"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "TabDetails",
            "referenceLink": "#type-TabDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the HTML document that is set as the popup for this browser action.</p>",
        "name": "getPopup"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "TabDetails",
            "referenceLink": "#type-TabDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the title of the browser action.</p>",
        "name": "getTitle"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "union",
                "isEnum": false,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "string"
                  },
                  {
                    "type": "reference",
                    "referenceType": "ColorArray",
                    "referenceLink": "#type-ColorArray"
                  }
                ],
                "comment": "<p>An array of four integers in the range 0-255 that make up the RGBA color of\nthe badge. Can also be a string with a CSS hex color value; for example,\n<code>#FF0000</code> or <code>#F00</code> (red). Renders colors at full\nopacity.</p>",
                "name": "color"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Limits the change to when a particular tab is selected. Automatically resets\nwhen the tab is closed.</p>",
                "optional": true,
                "name": "tabId"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets the background color for the badge.</p>",
        "name": "setBadgeBackgroundColor"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Limits the change to when a particular tab is selected. Automatically resets\nwhen the tab is closed.</p>",
                "optional": true,
                "name": "tabId"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>Any number of characters can be passed, but only about four can fit into the\nspace. If an empty string (<code>''</code>) is passed, the badge text is\ncleared.  If <code>tabId</code> is specified and <code>text</code> is null,\nthe text for the specified tab is cleared and defaults to the global badge\ntext.</p>",
                "optional": true,
                "name": "text"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets the badge text for the browser action. The badge is displayed on top of\nthe icon.</p>",
        "name": "setBadgeText"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "union",
                "isEnum": false,
                "options": [
                  {
                    "type": "reference",
                    "referenceType": "ImageDataType",
                    "referenceLink": "#type-ImageDataType"
                  },
                  {
                    "type": "object",
                    "properties": []
                  }
                ],
                "comment": "<p>Either an ImageData object or a dictionary {size -> ImageData} representing\nan icon to be set. If the icon is specified as a dictionary, the image used\nis chosen depending on the screen's pixel density. If the number of image\npixels that fit into one screen space unit equals <code>scale</code>, then an\nimage with size <code>scale</code> * n is selected, where <i>n</i> is the\nsize of the icon in the UI. At least one image must be specified. Note that\n'details.imageData = foo' is equivalent to 'details.imageData = {'16': foo}'</p>",
                "optional": true,
                "name": "imageData"
              },
              {
                "type": "union",
                "isEnum": false,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "string"
                  },
                  {
                    "type": "object",
                    "properties": []
                  }
                ],
                "comment": "<p>Either a relative image path or a dictionary {size -> relative image path}\npointing to an icon to be set. If the icon is specified as a dictionary, the\nimage used is chosen depending on the screen's pixel density. If the number\nof image pixels that fit into one screen space unit equals\n<code>scale</code>, then an image with size <code>scale</code> * n is\nselected, where <i>n</i> is the size of the icon in the UI. At least one\nimage must be specified. Note that 'details.path = foo' is equivalent to\n'details.path = {'16': foo}'</p>",
                "optional": true,
                "name": "path"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Limits the change to when a particular tab is selected. Automatically resets\nwhen the tab is closed.</p>",
                "optional": true,
                "name": "tabId"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets the icon for the browser action. The icon can be specified as the path\nto an image file, as the pixel data from a canvas element, or as a dictionary\nof one of those. Either the <code>path</code> or the <code>imageData</code>\nproperty must be specified.</p>",
        "name": "setIcon"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The HTML file to show in a popup. If set to the empty string (''), no popup\nis shown.</p>",
                "name": "popup"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Limits the change to when a particular tab is selected. Automatically resets\nwhen the tab is closed.</p>",
                "optional": true,
                "name": "tabId"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets the HTML document to be opened as a popup when the user clicks the\nbrowser action icon.</p>",
        "name": "setPopup"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Limits the change to when a particular tab is selected. Automatically resets\nwhen the tab is closed.</p>",
                "optional": true,
                "name": "tabId"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The string the browser action should display when moused over.</p>",
                "name": "title"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets the title of the browser action. This title appears in the tooltip.</p>",
        "name": "setTitle"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "tabs.Tab",
                "referenceLink": "../tabs/#type-Tab",
                "optional": false,
                "name": "tab"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a browser action icon is clicked. Does not fire if the browser\naction has a popup.</p>",
        "name": "onClicked"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.browsingData",
    "shortName": "browsingData",
    "comment": "<p>Use the <code>chrome.browsingData</code> API to remove browsing data from a\nuser's local profile.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Websites' appcaches.</p>",
            "optional": true,
            "name": "appcache"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The browser's cache.</p>",
            "optional": true,
            "name": "cache"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Cache storage</p>",
            "optional": true,
            "name": "cacheStorage"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The browser's cookies.</p>",
            "optional": true,
            "name": "cookies"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The browser's download list.</p>",
            "optional": true,
            "name": "downloads"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Websites' file systems.</p>",
            "optional": true,
            "name": "fileSystems"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The browser's stored form data.</p>",
            "optional": true,
            "name": "formData"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The browser's history.</p>",
            "optional": true,
            "name": "history"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Websites' IndexedDB data.</p>",
            "optional": true,
            "name": "indexedDB"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Websites' local storage data.</p>",
            "optional": true,
            "name": "localStorage"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Stored passwords.</p>",
            "optional": true,
            "name": "passwords"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Plugins' data.</p>",
            "deprecated": "Support for Flash has been removed. This data type will be ignored.\n",
            "optional": true,
            "name": "pluginData"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Server-bound certificates.</p>",
            "deprecated": "Support for server-bound certificates has been removed. This data type will be ignored.\n",
            "optional": true,
            "name": "serverBoundCertificates"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Service Workers.</p>",
            "optional": true,
            "name": "serviceWorkers"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Websites' WebSQL data.</p>",
            "optional": true,
            "name": "webSQL"
          }
        ],
        "comment": "<p>A set of data types. Missing data types are interpreted as\n<code>false</code>.</p>",
        "name": "DataTypeSet"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>When present, data for origins in this list is excluded from deletion. Can't\nbe used together with <code>origins</code>. Only supported for cookies,\nstorage and cache.  Cookies are excluded for the whole registrable domain.</p>",
            "optional": true,
            "name": "excludeOrigins"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Extensions and packaged applications a user has installed (be _really_\ncareful!).</p>",
                "optional": true,
                "name": "extension"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Websites that have been installed as hosted applications (be careful!).</p>",
                "optional": true,
                "name": "protectedWeb"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Normal websites.</p>",
                "optional": true,
                "name": "unprotectedWeb"
              }
            ],
            "comment": "<p>An object whose properties specify which origin types ought to be cleared. If\nthis object isn't specified, it defaults to clearing only \"unprotected\"\norigins. Please ensure that you <em>really</em> want to remove application\ndata before adding 'protectedWeb' or 'extensions'.</p>",
            "optional": true,
            "name": "originTypes"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>When present, only data for origins in this list is deleted. Only supported\nfor cookies, storage and cache. Cookies are cleared for the whole registrable\ndomain.</p>",
            "optional": true,
            "name": "origins"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Remove data accumulated on or after this date, represented in milliseconds\nsince the epoch (accessible via the <code>getTime</code> method of the\nJavaScript <code>Date</code> object). If absent, defaults to 0 (which would\nremove all browsing data).</p>",
            "optional": true,
            "name": "since"
          }
        ],
        "comment": "<p>Options that determine exactly what data will be removed.</p>",
        "name": "RemovalOptions"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "RemovalOptions",
            "referenceLink": "#type-RemovalOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "reference",
            "referenceType": "DataTypeSet",
            "referenceLink": "#type-DataTypeSet",
            "optional": false,
            "name": "dataToRemove",
            "comment": "<p>The set of data types to remove.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when deletion has completed.</p>"
          }
        ],
        "comment": "<p>Clears various types of browsing data stored in a user's profile.</p>",
        "name": "remove"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "RemovalOptions",
            "referenceLink": "#type-RemovalOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when websites' appcache data has been cleared.</p>"
          }
        ],
        "comment": "<p>Clears websites' appcache data.</p>",
        "name": "removeAppcache"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "RemovalOptions",
            "referenceLink": "#type-RemovalOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the browser's cache has been cleared.</p>"
          }
        ],
        "comment": "<p>Clears the browser's cache.</p>",
        "name": "removeCache"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "RemovalOptions",
            "referenceLink": "#type-RemovalOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when websites' cache storage has been cleared.</p>"
          }
        ],
        "comment": "<p>Clears websites' cache storage data.</p>",
        "name": "removeCacheStorage"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "RemovalOptions",
            "referenceLink": "#type-RemovalOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the browser's cookies and server-bound certificates have been cleared.</p>"
          }
        ],
        "comment": "<p>Clears the browser's cookies and server-bound certificates modified within a\nparticular timeframe.</p>",
        "name": "removeCookies"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "RemovalOptions",
            "referenceLink": "#type-RemovalOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the browser's list of downloaded files has been cleared.</p>"
          }
        ],
        "comment": "<p>Clears the browser's list of downloaded files (<em>not</em> the downloaded\nfiles themselves).</p>",
        "name": "removeDownloads"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "RemovalOptions",
            "referenceLink": "#type-RemovalOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when websites' file systems have been cleared.</p>"
          }
        ],
        "comment": "<p>Clears websites' file system data.</p>",
        "name": "removeFileSystems"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "RemovalOptions",
            "referenceLink": "#type-RemovalOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the browser's form data has been cleared.</p>"
          }
        ],
        "comment": "<p>Clears the browser's stored form data (autofill).</p>",
        "name": "removeFormData"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "RemovalOptions",
            "referenceLink": "#type-RemovalOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the browser's history has cleared.</p>"
          }
        ],
        "comment": "<p>Clears the browser's history.</p>",
        "name": "removeHistory"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "RemovalOptions",
            "referenceLink": "#type-RemovalOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when websites' IndexedDB data has been cleared.</p>"
          }
        ],
        "comment": "<p>Clears websites' IndexedDB data.</p>",
        "name": "removeIndexedDB"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "RemovalOptions",
            "referenceLink": "#type-RemovalOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when websites' local storage has been cleared.</p>"
          }
        ],
        "comment": "<p>Clears websites' local storage data.</p>",
        "name": "removeLocalStorage"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "RemovalOptions",
            "referenceLink": "#type-RemovalOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the browser's passwords have been cleared.</p>"
          }
        ],
        "comment": "<p>Clears the browser's stored passwords.</p>",
        "name": "removePasswords"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "RemovalOptions",
            "referenceLink": "#type-RemovalOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when plugins' data has been cleared.</p>"
          }
        ],
        "comment": "<p>Clears plugins' data.</p>",
        "deprecated": "Support for Flash has been removed. This function has no effect.\n",
        "name": "removePluginData"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "RemovalOptions",
            "referenceLink": "#type-RemovalOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when websites' service workers have been cleared.</p>"
          }
        ],
        "comment": "<p>Clears websites' service workers.</p>",
        "name": "removeServiceWorkers"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "RemovalOptions",
            "referenceLink": "#type-RemovalOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when websites' WebSQL databases have been cleared.</p>"
          }
        ],
        "comment": "<p>Clears websites' WebSQL data.</p>",
        "name": "removeWebSQL"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "reference",
                    "referenceType": "DataTypeSet",
                    "referenceLink": "#type-DataTypeSet",
                    "comment": "<p>All of the types will be present in the result, with values of\n<code>true</code> if they are permitted to be removed (e.g., by enterprise\npolicy) and <code>false</code> if not.</p>",
                    "name": "dataRemovalPermitted"
                  },
                  {
                    "type": "reference",
                    "referenceType": "DataTypeSet",
                    "referenceLink": "#type-DataTypeSet",
                    "comment": "<p>All of the types will be present in the result, with values of\n<code>true</code> if they are both selected to be removed and permitted to be\nremoved, otherwise <code>false</code>.</p>",
                    "name": "dataToRemove"
                  },
                  {
                    "type": "reference",
                    "referenceType": "RemovalOptions",
                    "referenceLink": "#type-RemovalOptions",
                    "name": "options"
                  }
                ],
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Reports which types of data are currently selected in the 'Clear browsing\ndata' settings UI.  Note: some of the data types included in this API are not\navailable in the settings UI, and some UI settings control more than one data\ntype listed here.</p>",
        "name": "settings"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "browsingData\n"
    ]
  },
  {
    "name": "chrome.cast.channel",
    "shortName": "cast.channel",
    "comment": "<p>API for communicating with a Google Cast device over an authenticated\nchannel.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the channel is audio only as identified by the device certificate\nduring channel authentication.</p>",
            "name": "audioOnly"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Id for the channel.</p>",
            "name": "channelId"
          },
          {
            "type": "reference",
            "referenceType": "ConnectInfo",
            "referenceLink": "#type-ConnectInfo",
            "comment": "<p>Connection information that was used to establish the channel to the\nreceiver.</p>",
            "name": "connectInfo"
          },
          {
            "type": "reference",
            "referenceType": "ChannelError",
            "referenceLink": "#type-ChannelError",
            "comment": "<p>If set, the last error condition encountered by the channel.</p>",
            "optional": true,
            "name": "errorState"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If true, keep-alive messages are handled automatically by the channel.</p>",
            "name": "keepAlive"
          },
          {
            "type": "reference",
            "referenceType": "ReadyState",
            "referenceLink": "#type-ReadyState",
            "comment": "<p>The current state of the channel.</p>",
            "name": "readyState"
          }
        ],
        "name": "ChannelInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ChannelAuthType",
            "referenceLink": "#type-ChannelAuthType",
            "comment": "<p>The authentication method required for the channel.</p>",
            "name": "auth"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>If set, CastDeviceCapability bitmask values describing capability of the cast\ndevice.</p>",
            "optional": true,
            "name": "capabilities"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The IPV4 address of the Cast receiver, e.g. '198.1.0.2'. TODO(mfoltz):\nInvestigate whether IPV6 addresses \"just work.\"</p>",
            "name": "ipAddress"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The maximum amount of idle time allowed before a channel is closed.</p>",
            "optional": true,
            "name": "livenessTimeout"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The amount of time to wait in milliseconds before sending pings to idle\nchannels.</p>",
            "optional": true,
            "name": "pingInterval"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The port number to connect to, 0-65535.</p>",
            "name": "port"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The amount of time to wait in milliseconds before stopping the connection\nprocess. Timeouts are disabled if the value is zero. The default timeout is\n8000ms.</p>",
            "optional": true,
            "name": "timeout"
          }
        ],
        "name": "ConnectInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>An error encountered when processing the authentication handshake. Values are\ndefined in the enum ChallengeReplyErrorType in logging.proto.</p>",
            "optional": true,
            "name": "challengeReplyErrorType"
          },
          {
            "type": "reference",
            "referenceType": "ChannelError",
            "referenceLink": "#type-ChannelError",
            "comment": "<p>The type of error encountered by the channel.</p>",
            "name": "errorState"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The event that was occurring when the error happened.  Values are defined in\nthe enum EventType in logging.proto.</p>",
            "optional": true,
            "name": "eventType"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>A return value from the underlying net:: socket libraries. Values are defined\nin net/base/net_error_list.h.</p>",
            "optional": true,
            "name": "netReturnValue"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>An error code returned by NSS. Values are defined in secerr.h.</p>",
            "optional": true,
            "name": "nssErrorCode"
          }
        ],
        "name": "ErrorInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "any",
            "comment": "<p>The content of the message.  Must be either a string or an ArrayBuffer.</p>",
            "name": "data"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "name": "destinationId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The message namespace.  A namespace is a URN of the form\nurn:cast-x:<namespace> that is used to interpret and route Cast messages.</p>",
            "name": "namespace_"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>source and destination ids identify the origin and destination of the\nmessage.  They are used to route messages between endpoints that share a\ndevice-to-device channel.</p><p>For messages between applications:   - The\nsender application id is a unique identifier generated on behalf     of the\nsender application.   - The receiver id is always the the session id for the\napplication.</p><p>For messages to or from the sender or receiver platform,\nthe special ids 'sender-0' and 'receiver-0' can be used.</p><p>For messages\nintended for all endpoints using a given channel, the wildcard destination_id\n'*' can be used.</p>",
            "name": "sourceId"
          }
        ],
        "name": "MessageInfo"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ssl_verified\""
          }
        ],
        "comment": "<p>Authentication methods that may be required to connect to a Cast receiver.</p>",
        "name": "ChannelAuthType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"channel_not_open\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"authentication_error\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"connect_error\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"socket_error\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"transport_error\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"invalid_message\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"invalid_channel_id\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"connect_timeout\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ping_timeout\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"unknown\""
          }
        ],
        "comment": "<p>Error conditions that the channel may encounter.  All error conditions are\nterminal.  When an error condition is encountered the API will: (1)\nTransition the channel to readyState == 'closed'. (2) Set\nChannelInfo.lastError to the error condition. (3) Fire an onError event with\nthe error condition. (4) Fire an onClose event.</p>",
        "name": "ChannelError"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"connecting\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"open\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"closing\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"closed\""
          }
        ],
        "comment": "<p>The state of the channel.</p>",
        "name": "ReadyState"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ChannelInfo",
            "referenceLink": "#type-ChannelInfo",
            "optional": false,
            "name": "channel"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ChannelInfo",
                "referenceLink": "#type-ChannelInfo",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback holding the result of a channel operation.</p>"
          }
        ],
        "comment": "<p>Requests that the channel be closed and invokes callback with the resulting\nchannel status.  The channel must be in readyState == 'open' or 'connecting'.\nIf successful, onClose will be fired with readyState == 'closed'.  If\nunsuccessful, channel.readyState will be set to 'closed', and\nchannel.errorState will be set to the error condition.</p>",
        "name": "close"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ConnectInfo",
            "referenceLink": "#type-ConnectInfo",
            "optional": false,
            "name": "connectInfo"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ChannelInfo",
                "referenceLink": "#type-ChannelInfo",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback holding the result of a channel operation.</p>"
          }
        ],
        "comment": "<p>Opens a new channel to the Cast receiver specified by connectInfo.  Only one\nchannel may be connected to same receiver from the same extension at a time.\nIf the open request is successful, the callback will be invoked with a\nChannelInfo with readyState == 'connecting'.  If unsuccessful, the callback\nwill be invoked with a ChannelInfo with channel.readyState == 'closed',\nchannel.errorState will be set to the error condition, and onError will be\nfired with error details.</p>",
        "name": "open"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ChannelInfo",
            "referenceLink": "#type-ChannelInfo",
            "optional": false,
            "name": "channel"
          },
          {
            "type": "reference",
            "referenceType": "MessageInfo",
            "referenceLink": "#type-MessageInfo",
            "optional": false,
            "name": "message"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ChannelInfo",
                "referenceLink": "#type-ChannelInfo",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback holding the result of a channel operation.</p>"
          }
        ],
        "comment": "<p>Sends a message on the channel and invokes callback with the resulting\nchannel status.  The channel must be in readyState == 'open'.  If\nunsuccessful, channel.readyState will be set to 'closed', channel.errorState\nwill be set to the error condition, and onError will be fired with error\ndetails.</p>",
        "name": "send"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ChannelInfo",
                "referenceLink": "#type-ChannelInfo",
                "optional": false,
                "name": "channel"
              },
              {
                "type": "reference",
                "referenceType": "ErrorInfo",
                "referenceLink": "#type-ErrorInfo",
                "optional": false,
                "name": "error"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when an error occurs as a result of a channel operation or a\nnetwork event. |error| contains details of the error.</p>",
        "name": "onError"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ChannelInfo",
                "referenceLink": "#type-ChannelInfo",
                "optional": false,
                "name": "channel"
              },
              {
                "type": "reference",
                "referenceType": "MessageInfo",
                "referenceLink": "#type-MessageInfo",
                "optional": false,
                "name": "message"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a message is received on an open channel.</p>",
        "name": "onMessage"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "cast\n"
    ]
  },
  {
    "name": "chrome.certificateProvider",
    "shortName": "certificateProvider",
    "comment": "<p>Use this API to expose certificates to the platform which can use these\ncertificates for TLS authentications.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>Must be the DER encoding of a X.509 certificate. Currently, only certificates\nof RSA keys are supported.</p>",
            "name": "certificate"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "Hash",
              "referenceLink": "#type-Hash"
            },
            "comment": "<p>Must be set to all hashes supported for this certificate. This extension will\nonly be asked for signatures of digests calculated with one of these hash\nalgorithms. This should be in order of decreasing hash preference.</p>",
            "name": "supportedHashes"
          }
        ],
        "name": "CertificateInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Request identifier to be passed to <a href=\"#method-setCertificates\"><code>setCertificates</code></a>.</p>",
            "name": "certificatesRequestId"
          }
        ],
        "name": "CertificatesUpdateRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ArrayBuffer"
            },
            "comment": "<p>The array must contain the DER encoding of the X.509 client certificate as\nits first element. </p>\n<p>This must include exactly one certificate.</p>",
            "name": "certificateChain"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "Algorithm",
              "referenceLink": "#type-Algorithm"
            },
            "comment": "<p>All algorithms supported for this certificate. The extension will only be\nasked for signatures using one of these algorithms.</p>",
            "name": "supportedAlgorithms"
          }
        ],
        "name": "ClientCertificateInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The code provided by the user. Empty if user closed the dialog or some other\nerror occurred.</p>",
            "optional": true,
            "name": "userInput"
          }
        ],
        "name": "PinResponseDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "Error",
            "referenceLink": "#type-Error",
            "comment": "<p>Error that occurred while generating the signature, if any.</p>",
            "optional": true,
            "name": "error"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Request identifier that was received via the <a href=\"#event-onSignatureRequested\"><code>onSignatureRequested</code></a>\nevent.</p>",
            "name": "signRequestId"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>The signature, if successfully generated.</p>",
            "optional": true,
            "name": "signature"
          }
        ],
        "name": "ReportSignatureDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of attempts left. This is provided so that any UI can present this\ninformation to the user. Chrome is not expected to enforce this, instead\nstopPinRequest should be called by the extension with errorType =\nMAX_ATTEMPTS_EXCEEDED when the number of pin requests is exceeded.</p>",
            "optional": true,
            "name": "attemptsLeft"
          },
          {
            "type": "reference",
            "referenceType": "PinRequestErrorType",
            "referenceLink": "#type-PinRequestErrorType",
            "comment": "<p>The error template displayed to the user. This should be set if the previous\nrequest failed, to notify the user of the failure reason.</p>",
            "optional": true,
            "name": "errorType"
          },
          {
            "type": "reference",
            "referenceType": "PinRequestType",
            "referenceLink": "#type-PinRequestType",
            "comment": "<p>The type of code requested. Default is PIN.</p>",
            "optional": true,
            "name": "requestType"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID given by Chrome in SignRequest.</p>",
            "name": "signRequestId"
          }
        ],
        "name": "RequestPinDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>When called in response to <a href=\"#event-onCertificatesUpdateRequested\"><code>onCertificatesUpdateRequested</code></a>, should\ncontain the received <code>certificatesRequestId</code> value. Otherwise,\nshould be unset.</p>",
            "optional": true,
            "name": "certificatesRequestId"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ClientCertificateInfo",
              "referenceLink": "#type-ClientCertificateInfo"
            },
            "comment": "<p>List of currently available client certificates.</p>",
            "name": "clientCertificates"
          },
          {
            "type": "reference",
            "referenceType": "Error",
            "referenceLink": "#type-Error",
            "comment": "<p>Error that occurred while extracting the certificates, if any. This error\nwill be surfaced to the user when appropriate.</p>",
            "optional": true,
            "name": "error"
          }
        ],
        "name": "SetCertificatesDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>The DER encoding of a X.509 certificate. The extension must sign\n<code>digest</code> using the associated private key.</p>",
            "name": "certificate"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>The digest that must be signed.</p>",
            "name": "digest"
          },
          {
            "type": "reference",
            "referenceType": "Hash",
            "referenceLink": "#type-Hash",
            "comment": "<p>Refers to the hash algorithm that was used to create <code>digest</code>.</p>",
            "name": "hash"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique ID to be used by the extension should it need to call a method\nthat requires it, e.g. requestPin.</p>",
            "name": "signRequestId"
          }
        ],
        "name": "SignRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "Algorithm",
            "referenceLink": "#type-Algorithm",
            "comment": "<p>Signature algorithm to be used.</p>",
            "name": "algorithm"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>The DER encoding of a X.509 certificate. The extension must sign\n<code>input</code> using the associated private key.</p>",
            "name": "certificate"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>Data to be signed. Note that the data is not hashed.</p>",
            "name": "input"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Request identifier to be passed to <a href=\"#method-reportSignature\"><code>reportSignature</code></a>.</p>",
            "name": "signRequestId"
          }
        ],
        "name": "SignatureRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "PinRequestErrorType",
            "referenceLink": "#type-PinRequestErrorType",
            "comment": "<p>The error template. If present it is displayed to user. Intended to contain\nthe reason for stopping the flow if it was caused by an error, e.g.\nMAX_ATTEMPTS_EXCEEDED.</p>",
            "optional": true,
            "name": "errorType"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID given by Chrome in SignRequest.</p>",
            "name": "signRequestId"
          }
        ],
        "name": "StopPinRequestDetails"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"RSASSA_PKCS1_v1_5_MD5_SHA1\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"RSASSA_PKCS1_v1_5_SHA1\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"RSASSA_PKCS1_v1_5_SHA256\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"RSASSA_PKCS1_v1_5_SHA384\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"RSASSA_PKCS1_v1_5_SHA512\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"RSASSA_PSS_SHA256\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"RSASSA_PSS_SHA384\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"RSASSA_PSS_SHA512\""
          }
        ],
        "comment": "<p>Types of supported cryptographic signature algorithms.</p>",
        "name": "Algorithm"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"GENERAL_ERROR\""
          }
        ],
        "comment": "<p>Types of errors that the extension can report.</p>",
        "name": "Error"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"MD5_SHA1\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"SHA1\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"SHA256\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"SHA384\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"SHA512\""
          }
        ],
        "comment": "<p>Deprecated. Replaced by <a href=\"#type-Algorithm\"><code>Algorithm</code></a>.</p>",
        "name": "Hash"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"INVALID_PIN\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"INVALID_PUK\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"MAX_ATTEMPTS_EXCEEDED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"UNKNOWN_ERROR\""
          }
        ],
        "comment": "<p>The types of errors that can be presented to the user through the requestPin\nfunction.</p>",
        "name": "PinRequestErrorType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"PIN\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"PUK\""
          }
        ],
        "comment": "<p>The type of code being requested by the extension with requestPin function.</p>",
        "name": "PinRequestType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ReportSignatureDetails",
            "referenceLink": "#type-ReportSignatureDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Should be called as a response to <a href=\"#event-onSignatureRequested\"><code>onSignatureRequested</code></a>. </p>\n<p>The\nextension must eventually call this function for every <a href=\"#event-onSignatureRequested\"><code>onSignatureRequested</code></a> event; the API implementation will stop waiting for\nthis call after some time and respond with a timeout error when this function\nis called.</p>",
        "name": "reportSignature"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "RequestPinDetails",
            "referenceLink": "#type-RequestPinDetails",
            "optional": false,
            "name": "details",
            "comment": "<p>Contains the details about the requested dialog.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "PinResponseDetails",
                "referenceLink": "#type-PinResponseDetails",
                "optional": false,
                "name": "details"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Is called when the dialog is resolved with the user input, or when the dialog request finishes unsuccessfully (e.g. the dialog was canceled by the user or was not allowed to be shown).</p>"
          }
        ],
        "comment": "<p>Requests the PIN from the user. Only one ongoing request at a time is\nallowed. The requests issued while another flow is ongoing are rejected. It's\nthe extension's responsibility to try again later if another flow is in\nprogress.</p>",
        "name": "requestPin"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "SetCertificatesDetails",
            "referenceLink": "#type-SetCertificatesDetails",
            "optional": false,
            "name": "details",
            "comment": "<p>The certificates to set. Invalid certificates will be ignored.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called upon completion.</p>"
          }
        ],
        "comment": "<p>Sets a list of certificates to use in the browser. </p>\n<p>The extension should\ncall this function after initialization and on every change in the set of\ncurrently available certificates. The extension should also call this\nfunction in response to <a href=\"#event-onCertificatesUpdateRequested\"><code>onCertificatesUpdateRequested</code></a> every time this\nevent is received.</p>",
        "name": "setCertificates"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "StopPinRequestDetails",
            "referenceLink": "#type-StopPinRequestDetails",
            "optional": false,
            "name": "details",
            "comment": "<p>Contains the details about the reason for stopping the request flow.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>To be used by Chrome to send to the extension the status from their request to close PIN dialog for user.</p>"
          }
        ],
        "comment": "<p>Stops the pin request started by the <a href=\"#method-requestPin\"><code>requestPin</code></a> function.</p>",
        "name": "stopPinRequest"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "referenceType": "CertificateInfo",
                      "referenceLink": "#type-CertificateInfo"
                    },
                    "optional": false,
                    "name": "certificates"
                  },
                  {
                    "type": "function",
                    "parameters": [
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "referenceType": "ArrayBuffer"
                        },
                        "optional": false,
                        "name": "rejectedCertificates"
                      }
                    ],
                    "optional": false,
                    "name": "callback"
                  }
                ],
                "optional": false,
                "name": "reportCallback"
              }
            ],
            "deprecated": "Use <a href=\"#event-onCertificatesUpdateRequested\"><code>onCertificatesUpdateRequested</code></a> instead.\n",
            "name": "listener"
          }
        ],
        "comment": "<p>This event fires every time the browser requests the current list of\ncertificates provided by this extension. The extension must call\n<code>reportCallback</code> exactly once with the current list of\ncertificates.</p>",
        "name": "onCertificatesRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "CertificatesUpdateRequest",
                "referenceLink": "#type-CertificatesUpdateRequest",
                "optional": false,
                "name": "request"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>This event fires if the certificates set via <a href=\"#method-setCertificates\"><code>setCertificates</code></a> are\ninsufficient or the browser requests updated information. The extension\nmust call <a href=\"#method-setCertificates\"><code>setCertificates</code></a> with the updated list of certificates\nand the received <code>certificatesRequestId</code>.</p>",
        "name": "onCertificatesUpdateRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "SignRequest",
                "referenceLink": "#type-SignRequest",
                "optional": false,
                "name": "request",
                "comment": "<p>Contains the details about the sign request.</p>"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ArrayBuffer",
                    "optional": false,
                    "name": "signature"
                  }
                ],
                "optional": false,
                "name": "reportCallback"
              }
            ],
            "deprecated": "Use <a href=\"#event-onSignatureRequested\"><code>onSignatureRequested</code></a> instead.\n",
            "name": "listener"
          }
        ],
        "comment": "<p>This event fires every time the browser needs to sign a message using a\ncertificate provided by this extension in reply to an <a href=\"#event-onCertificatesRequested\"><code>onCertificatesRequested</code></a> event. The extension must sign the data in\n<code>request</code> using the appropriate algorithm and private key and\nreturn it by calling <code>reportCallback</code>.\n<code>reportCallback</code> must be called exactly once.</p>",
        "name": "onSignDigestRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "SignatureRequest",
                "referenceLink": "#type-SignatureRequest",
                "optional": false,
                "name": "request"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>This event fires every time the browser needs to sign a message using a\ncertificate provided by this extension via <a href=\"#method-setCertificates\"><code>setCertificates</code></a>.\n</p>\n<p>The extension must sign the input data from <code>request</code> using\nthe appropriate algorithm and private key and return it by calling <a href=\"#method-reportSignature\"><code>reportSignature</code></a> with the received <code>signRequestId</code>.</p>",
        "name": "onSignatureRequested"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "certificateProvider\n"
    ],
    "platforms": [
      "chromeos"
    ]
  },
  {
    "name": "chrome.clipboard",
    "shortName": "clipboard",
    "comment": "<p>The <code>chrome.clipboard</code> API is provided to allow users to\naccess\ndata of the clipboard. This is a temporary solution for\nchromeos platform\napps until open-web alternative is available. It will be\ndeprecated once\nopen-web solution is available, which could be in 2017 Q4.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Content of the additional data item. Either the plain text string if |type|\nis \"textPlain\" or markup string if |type| is \"textHtml\". The data can not\nexceed 2MB.</p>",
            "name": "data"
          },
          {
            "type": "reference",
            "referenceType": "DataItemType",
            "referenceLink": "#type-DataItemType",
            "comment": "<p>Type of the additional data item.</p>",
            "name": "type"
          }
        ],
        "name": "AdditionalDataItem"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"textPlain\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"textHtml\""
          }
        ],
        "name": "DataItemType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"png\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"jpeg\""
          }
        ],
        "comment": "<p>Supported image types.</p>",
        "name": "ImageType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "imageData",
            "comment": "<p>The encoded image data.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ImageType",
            "referenceLink": "#type-ImageType",
            "optional": false,
            "name": "type",
            "comment": "<p>The type of image being passed.</p>"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "AdditionalDataItem",
              "referenceLink": "#type-AdditionalDataItem"
            },
            "optional": false,
            "name": "additionalItems",
            "comment": "<p>Additional data items for describing image data. The callback is called with <code>chrome.runtime.lastError</code> set to error code if there is an error. Requires clipboard and clipboardWrite permissions.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets image data to clipboard.</p>",
        "name": "setImageData"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when clipboard data changes. Requires clipboard and clipboardRead\npermissions for adding listener to\nchrome.clipboard.onClipboardDataChanged event. After this event fires,\nthe clipboard data is available by calling document.execCommand('paste').</p>",
        "name": "onClipboardDataChanged"
      }
    ],
    "channel": "dev",
    "source": "platform_app.d.ts",
    "permissions": [
      "clipboard\n"
    ],
    "platforms": [
      "chromeos"
    ]
  },
  {
    "name": "chrome.commands",
    "shortName": "commands",
    "comment": "<p>Use the commands API to add keyboard shortcuts that trigger actions in your\nextension, for example, an action to open the browser action or send a\ncommand to the extension.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The Extension Command description</p>",
            "optional": true,
            "name": "description"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The name of the Extension Command</p>",
            "optional": true,
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The shortcut active for this command, or blank if not active.</p>",
            "optional": true,
            "name": "shortcut"
          }
        ],
        "name": "Command"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Command",
                  "referenceLink": "#type-Command"
                },
                "optional": false,
                "name": "commands"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called to return the registered commands.</p>"
          }
        ],
        "comment": "<p>Returns all the registered extension commands for this extension and their\nshortcut (if active).</p>",
        "name": "getAll"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "command"
              },
              {
                "type": "reference",
                "referenceType": "tabs.Tab",
                "referenceLink": "../tabs/#type-Tab",
                "optional": false,
                "name": "tab"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a registered command is activated using a keyboard shortcut.</p>",
        "name": "onCommand"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.contentScripts",
    "shortName": "contentScripts",
    "comment": "<p>Stub namespace for the \"content_scripts\" manifest key.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If specified true, it will inject into all frames, even if the frame is not\nthe top-most frame in the tab. Each frame is checked independently for URL\nrequirements; it will not inject into child frames if the URL requirements\nare not met. Defaults to false, meaning that only the top frame is matched.</p>",
            "optional": true,
            "name": "all_frames"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The list of CSS files to be injected into matching pages. These are injected\nin the order they appear in this array, before any DOM is constructed or\ndisplayed for the page.</p>",
            "optional": true,
            "name": "css"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Applied after matches to exclude URLs that match this glob. Intended to\nemulate the <a\nhref=\"https://wiki.greasespot.net/Metadata_Block#.40exclude\">@exclude </a>\nGreasemonkey keyword.</p>",
            "optional": true,
            "name": "exclude_globs"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Excludes pages that this content script would otherwise be injected into. See\n<a href=\"../../match_patterns/\">Match Patterns</a> for more details on the syntax of\nthese strings.</p>",
            "optional": true,
            "name": "exclude_matches"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Applied after matches to include only those URLs that also match this glob.\nIntended to emulate the <a\nhref=\"http://wiki.greasespot.net/Metadata_Block#.40include\">@include </a>\nGreasemonkey keyword.</p>",
            "optional": true,
            "name": "include_globs"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The list of JavaScript files to be injected into matching pages. These are\ninjected in the order they appear in this array.</p>",
            "optional": true,
            "name": "js"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the script should inject into an about:blank frame where the parent\nor opener frame matches one of the patterns declared in matches. Defaults to\nfalse.</p>",
            "optional": true,
            "name": "match_about_blank"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Specifies which pages this content script will be injected into. See <a\nhref=\"../../match_patterns/\">Match Patterns</a> for more details on the syntax of\nthese strings.</p>",
            "name": "matches"
          },
          {
            "type": "reference",
            "referenceType": "RunAt",
            "referenceLink": "#type-RunAt",
            "comment": "<p>Specifies when JavaScript files are injected into the web page. The preferred\nand default value is <code>document_idle</code>.</p>",
            "optional": true,
            "name": "run_at"
          }
        ],
        "name": "ContentScript"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"document_idle\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"document_start\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"document_end\""
          }
        ],
        "comment": "<p>The stage in the document lifecycle when the javascript file is injected.</p>",
        "name": "RunAt"
      }
    ],
    "properties": [],
    "methods": [],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.contentSettings",
    "shortName": "contentSettings",
    "comment": "<p>Use the <code>chrome.contentSettings</code> API to change settings that\ncontrol whether websites can use features such as cookies, JavaScript, and\nplugins. More generally speaking, content settings allow you to customize\nChrome's behavior on a per-site basis instead of globally.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "reference",
                    "referenceType": "Scope",
                    "referenceLink": "#type-Scope",
                    "comment": "<p>Where to clear the setting (default: regular).</p>",
                    "optional": true,
                    "name": "scope"
                  }
                ],
                "optional": false,
                "name": "details"
              },
              {
                "type": "function",
                "parameters": [],
                "optional": false,
                "name": "callback"
              }
            ],
            "comment": "<p>Clear all content setting rules set by this extension.</p>",
            "name": "clear"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>Whether to check the content settings for an incognito session. (default\nfalse)</p>",
                    "optional": true,
                    "name": "incognito"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The primary URL for which the content setting should be retrieved. Note that\nthe meaning of a primary URL depends on the content type.</p>",
                    "name": "primaryUrl"
                  },
                  {
                    "type": "reference",
                    "referenceType": "ResourceIdentifier",
                    "referenceLink": "#type-ResourceIdentifier",
                    "comment": "<p>A more specific identifier of the type of content for which the settings\nshould be retrieved.</p>",
                    "optional": true,
                    "name": "resourceIdentifier"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The secondary URL for which the content setting should be retrieved. Defaults\nto the primary URL. Note that the meaning of a secondary URL depends on the\ncontent type, and not all content types use secondary URLs.</p>",
                    "optional": true,
                    "name": "secondaryUrl"
                  }
                ],
                "optional": false,
                "name": "details"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "object",
                    "properties": [
                      {
                        "type": "reference",
                        "referenceType": "T",
                        "comment": "<p>The content setting. See the description of the individual ContentSetting\nobjects for the possible values.</p>",
                        "name": "setting"
                      }
                    ],
                    "optional": false,
                    "name": "details"
                  }
                ],
                "optional": false,
                "name": "callback"
              }
            ],
            "comment": "<p>Gets the current content setting for a given pair of URLs.</p>",
            "name": "get"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "referenceType": "ResourceIdentifier",
                      "referenceLink": "#type-ResourceIdentifier"
                    },
                    "optional": false,
                    "name": "resourceIdentifiers",
                    "comment": "<p>A list of resource identifiers for this content type, or <var>undefined</var> if this content type does not use resource identifiers.</p>"
                  }
                ],
                "optional": false,
                "name": "callback"
              }
            ],
            "name": "getResourceIdentifiers"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The pattern for the primary URL. For details on the format of a pattern, see\n<a href=\"#patterns\">Content Setting Patterns</a>.</p>",
                    "name": "primaryPattern"
                  },
                  {
                    "type": "reference",
                    "referenceType": "ResourceIdentifier",
                    "referenceLink": "#type-ResourceIdentifier",
                    "comment": "<p>The resource identifier for the content type.</p>",
                    "optional": true,
                    "name": "resourceIdentifier"
                  },
                  {
                    "type": "reference",
                    "referenceType": "Scope",
                    "referenceLink": "#type-Scope",
                    "comment": "<p>Where to set the setting (default: regular).</p>",
                    "optional": true,
                    "name": "scope"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The pattern for the secondary URL. Defaults to matching all URLs. For details\non the format of a pattern, see <a href=\"#patterns\">Content\nSetting Patterns</a>.</p>",
                    "optional": true,
                    "name": "secondaryPattern"
                  },
                  {
                    "type": "reference",
                    "referenceType": "T",
                    "comment": "<p>The setting applied by this rule. See the description of the individual\nContentSetting objects for the possible values.</p>",
                    "name": "setting"
                  }
                ],
                "optional": false,
                "name": "details"
              },
              {
                "type": "function",
                "parameters": [],
                "optional": false,
                "name": "callback"
              }
            ],
            "comment": "<p>Applies a new content setting rule.</p>",
            "name": "set"
          }
        ],
        "templates": [
          "T"
        ],
        "name": "ContentSetting"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A human readable description of the resource.</p>",
            "optional": true,
            "name": "description"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The resource identifier for the given content type.</p>",
            "name": "id"
          }
        ],
        "comment": "<p>The only content type using resource identifiers is <a href=\"#property-plugins\"><code>plugins</code></a>. For more information, see <a\nhref=\"contentSettings#resource-identifiers\">Resource Identifiers</a>.</p>",
        "name": "ResourceIdentifier"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"allow\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"block\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ask\""
          }
        ],
        "name": "CameraContentSetting"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"allow\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"block\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"session_only\""
          }
        ],
        "name": "CookiesContentSetting"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"allow\""
          }
        ],
        "name": "FullscreenContentSetting"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"allow\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"block\""
          }
        ],
        "name": "ImagesContentSetting"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"allow\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"block\""
          }
        ],
        "name": "JavascriptContentSetting"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"allow\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"block\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ask\""
          }
        ],
        "name": "LocationContentSetting"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"allow\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"block\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ask\""
          }
        ],
        "name": "MicrophoneContentSetting"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"allow\""
          }
        ],
        "name": "MouselockContentSetting"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"allow\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"block\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ask\""
          }
        ],
        "name": "MultipleAutomaticDownloadsContentSetting"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"allow\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"block\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ask\""
          }
        ],
        "name": "NotificationsContentSetting"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"allow\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"block\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"detect_important_content\""
          }
        ],
        "name": "PluginsContentSetting"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"allow\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"block\""
          }
        ],
        "name": "PopupsContentSetting"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"allow\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"block\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ask\""
          }
        ],
        "name": "PpapiBrokerContentSetting"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"regular\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"incognito_session_only\""
          }
        ],
        "comment": "<p>The scope of the ContentSetting. One of<br><var>regular</var>: setting for\nregular profile (which is inherited by the incognito profile if not\noverridden elsewhere),<br><var>incognito_session_only</var>: setting for\nincognito profile that can only be set during an incognito session and is\ndeleted when the incognito session ends (overrides regular settings).</p>",
        "name": "Scope"
      }
    ],
    "properties": [
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": "#type-ContentSetting",
        "referenceTemplates": [
          {
            "type": "reference",
            "referenceType": "MultipleAutomaticDownloadsContentSetting",
            "referenceLink": "#type-MultipleAutomaticDownloadsContentSetting"
          }
        ],
        "comment": "<p>Whether to allow sites to download multiple files automatically. One of\n<br><var>allow</var>: Allow sites to download multiple files\nautomatically,<br><var>block</var>: Don't allow sites to download multiple\nfiles automatically,<br><var>ask</var>: Ask when a site wants to download\nfiles automatically after the first file. <br>Default is\n<var>ask</var>.<br>The primary URL is the URL of the top-level frame. The\nsecondary URL is not used.</p>",
        "name": "automaticDownloads"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": "#type-ContentSetting",
        "referenceTemplates": [
          {
            "type": "reference",
            "referenceType": "CameraContentSetting",
            "referenceLink": "#type-CameraContentSetting"
          }
        ],
        "comment": "<p>Whether to allow sites to access the camera. One of <br><var>allow</var>:\nAllow sites to access the camera,<br><var>block</var>: Don't allow sites to\naccess the camera,<br><var>ask</var>: Ask when a site wants to access the\ncamera. <br>Default is <var>ask</var>.<br>The primary URL is the URL of the\ndocument which requested camera access. The secondary URL is not\nused.<br>NOTE: The 'allow' setting is not valid if both patterns are\n'<all_urls>'.</p>",
        "name": "camera"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": "#type-ContentSetting",
        "referenceTemplates": [
          {
            "type": "reference",
            "referenceType": "CookiesContentSetting",
            "referenceLink": "#type-CookiesContentSetting"
          }
        ],
        "comment": "<p>Whether to allow cookies and other local data to be set by websites. One\nof<br><var>allow</var>: Accept cookies,<br><var>block</var>: Block\ncookies,<br><var>session_only</var>: Accept cookies only for the current\nsession. <br>Default is <var>allow</var>.<br>The primary URL is the URL\nrepresenting the cookie origin. The secondary URL is the URL of the top-level\nframe.</p>",
        "name": "cookies"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": "#type-ContentSetting",
        "referenceTemplates": [
          {
            "type": "reference",
            "referenceType": "FullscreenContentSetting",
            "referenceLink": "#type-FullscreenContentSetting"
          }
        ],
        "comment": "<p><i>Deprecated.</i> No longer has any effect. Fullscreen permission is now\nautomatically granted for all sites. Value is always <var>allow</var>.</p>",
        "name": "fullscreen"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": "#type-ContentSetting",
        "referenceTemplates": [
          {
            "type": "reference",
            "referenceType": "ImagesContentSetting",
            "referenceLink": "#type-ImagesContentSetting"
          }
        ],
        "comment": "<p>Whether to show images. One of<br><var>allow</var>: Show\nimages,<br><var>block</var>: Don't show images. <br>Default is\n<var>allow</var>.<br>The primary URL is the URL of the top-level frame. The\nsecondary URL is the URL of the image.</p>",
        "name": "images"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": "#type-ContentSetting",
        "referenceTemplates": [
          {
            "type": "reference",
            "referenceType": "JavascriptContentSetting",
            "referenceLink": "#type-JavascriptContentSetting"
          }
        ],
        "comment": "<p>Whether to run JavaScript. One of<br><var>allow</var>: Run\nJavaScript,<br><var>block</var>: Don't run JavaScript. <br>Default is\n<var>allow</var>.<br>The primary URL is the URL of the top-level frame. The\nsecondary URL is not used.</p>",
        "name": "javascript"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": "#type-ContentSetting",
        "referenceTemplates": [
          {
            "type": "reference",
            "referenceType": "LocationContentSetting",
            "referenceLink": "#type-LocationContentSetting"
          }
        ],
        "comment": "<p>Whether to allow Geolocation. One of <br><var>allow</var>: Allow sites to\ntrack your physical location,<br><var>block</var>: Don't allow sites to track\nyour physical location,<br><var>ask</var>: Ask before allowing sites to track\nyour physical location. <br>Default is <var>ask</var>.<br>The primary URL is\nthe URL of the document which requested location data. The secondary URL is\nthe URL of the top-level frame (which may or may not differ from the\nrequesting URL).</p>",
        "name": "location"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": "#type-ContentSetting",
        "referenceTemplates": [
          {
            "type": "reference",
            "referenceType": "MicrophoneContentSetting",
            "referenceLink": "#type-MicrophoneContentSetting"
          }
        ],
        "comment": "<p>Whether to allow sites to access the microphone. One of <br><var>allow</var>:\nAllow sites to access the microphone,<br><var>block</var>: Don't allow sites\nto access the microphone,<br><var>ask</var>: Ask when a site wants to access\nthe microphone. <br>Default is <var>ask</var>.<br>The primary URL is the URL\nof the document which requested microphone access. The secondary URL is not\nused.<br>NOTE: The 'allow' setting is not valid if both patterns are\n'<all_urls>'.</p>",
        "name": "microphone"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": "#type-ContentSetting",
        "referenceTemplates": [
          {
            "type": "reference",
            "referenceType": "MouselockContentSetting",
            "referenceLink": "#type-MouselockContentSetting"
          }
        ],
        "comment": "<p><i>Deprecated.</i> No longer has any effect. Mouse lock permission is now\nautomatically granted for all sites. Value is always <var>allow</var>.</p>",
        "name": "mouselock"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": "#type-ContentSetting",
        "referenceTemplates": [
          {
            "type": "reference",
            "referenceType": "NotificationsContentSetting",
            "referenceLink": "#type-NotificationsContentSetting"
          }
        ],
        "comment": "<p>Whether to allow sites to show desktop notifications. One\nof<br><var>allow</var>: Allow sites to show desktop\nnotifications,<br><var>block</var>: Don't allow sites to show desktop\nnotifications,<br><var>ask</var>: Ask when a site wants to show desktop\nnotifications. <br>Default is <var>ask</var>.<br>The primary URL is the URL\nof the document which wants to show the notification. The secondary URL is\nnot used.</p>",
        "name": "notifications"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": "#type-ContentSetting",
        "referenceTemplates": [
          {
            "type": "reference",
            "referenceType": "PluginsContentSetting",
            "referenceLink": "#type-PluginsContentSetting"
          }
        ],
        "comment": "<p>Whether to run plugins. One of<br><var>allow</var>: Run plugins\nautomatically,<br><var>block</var>: Don't run plugins\nautomatically,<br><var>detect_important_content</var>: Only run automatically\nthose plugins that are detected as the website's main content.<br>The primary\nURL is the URL of the top-level frame. The secondary URL is not used.</p>",
        "name": "plugins"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": "#type-ContentSetting",
        "referenceTemplates": [
          {
            "type": "reference",
            "referenceType": "PopupsContentSetting",
            "referenceLink": "#type-PopupsContentSetting"
          }
        ],
        "comment": "<p>Whether to allow sites to show pop-ups. One of<br><var>allow</var>: Allow\nsites to show pop-ups,<br><var>block</var>: Don't allow sites to show\npop-ups. <br>Default is <var>block</var>.<br>The primary URL is the URL of\nthe top-level frame. The secondary URL is not used.</p>",
        "name": "popups"
      },
      {
        "type": "reference",
        "referenceType": "ContentSetting",
        "referenceLink": "#type-ContentSetting",
        "referenceTemplates": [
          {
            "type": "reference",
            "referenceType": "PpapiBrokerContentSetting",
            "referenceLink": "#type-PpapiBrokerContentSetting"
          }
        ],
        "comment": "<p>Whether to allow sites to run plugins unsandboxed. One of\n<br><var>allow</var>: Allow sites to run plugins\nunsandboxed,<br><var>block</var>: Don't allow sites to run plugins\nunsandboxed,<br><var>ask</var>: Ask when a site wants to run a plugin\nunsandboxed. <br>Default is <var>ask</var>.<br>The primary URL is the URL of\nthe top-level frame. The secondary URL is not used.</p>",
        "name": "unsandboxedPlugins"
      }
    ],
    "methods": [],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "contentSettings\n"
    ]
  },
  {
    "name": "chrome.contextMenus",
    "shortName": "contextMenus",
    "comment": "<p>Use the <code>chrome.contextMenus</code> API to add items to Google Chrome's\ncontext menu. You can choose what types of objects your context menu\nadditions apply to, such as images, hyperlinks, and pages.</p>",
    "types": [
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"all\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"page\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"frame\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"selection\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"link\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"editable\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"image\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"video\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"audio\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"launcher\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"browser_action\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"page_action\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"action\""
          }
        ],
        "comment": "<p>The different contexts a menu can appear in. Specifying 'all' is equivalent\nto the combination of all other contexts except for 'launcher'. The\n'launcher' context is only supported by apps and is used to add menu items to\nthe context menu that appears when clicking the app icon in the\nlauncher/taskbar/dock/etc. Different platforms might put limitations on what\nis actually supported in a launcher context menu.</p>",
        "name": "ContextType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"normal\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"checkbox\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"radio\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"separator\""
          }
        ],
        "comment": "<p>The type of menu item.</p>",
        "name": "ItemType"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "6",
        "comment": "<p>The maximum number of top level extension items that can be added to an\nextension action context menu. Any items beyond this limit will be ignored.</p>",
        "name": "ACTION_MENU_TOP_LEVEL_LIMIT"
      }
    ],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>The initial state of a checkbox or radio button: <code>true</code> for\nselected, <code>false</code> for unselected. Only one radio button can be\nselected at a time in a given group.</p>",
                "optional": true,
                "name": "checked"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "ContextType",
                  "referenceLink": "#type-ContextType"
                },
                "minLength": 1,
                "comment": "<p>List of contexts this menu item will appear in. Defaults to\n<code>['page']</code>.</p>",
                "optional": true,
                "name": "contexts"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                },
                "comment": "<p>Restricts the item to apply only to documents or frames whose URL matches one\nof the given patterns. For details on pattern formats, see <a\nhref=\"../../match_patterns/\">Match Patterns</a>.</p>",
                "optional": true,
                "name": "documentUrlPatterns"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether this context menu item is enabled or disabled. Defaults to\n<code>true</code>.</p>",
                "optional": true,
                "name": "enabled"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The unique ID to assign to this item. Mandatory for event pages. Cannot be\nthe same as another ID for this extension.</p>",
                "optional": true,
                "name": "id"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "primitive",
                    "primitiveType": "object",
                    "optional": false,
                    "name": "info",
                    "comment": "<p>Information about the item clicked and the context where the click happened.</p>"
                  },
                  {
                    "type": "reference",
                    "referenceType": "tabs.Tab",
                    "referenceLink": "../tabs/#type-Tab",
                    "optional": false,
                    "name": "tab",
                    "comment": "<p>The details of the tab where the click took place. This parameter is not present for platform apps.</p>"
                  }
                ],
                "comment": "<p>A function that is called back when the menu item is clicked. Event pages\ncannot use this; instead, they should register a listener for <a href=\"#event-onClicked\"><code>onClicked</code></a>.</p>",
                "optional": true,
                "name": "onclick"
              },
              {
                "type": "union",
                "isEnum": true,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "number"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string"
                  }
                ],
                "comment": "<p>The ID of a parent menu item; this makes the item a child of a previously\nadded item.</p>",
                "optional": true,
                "name": "parentId"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                },
                "comment": "<p>Similar to <code>documentUrlPatterns</code>, filters based on the\n<code>src</code> attribute of <code>img</code>, <code>audio</code>, and\n<code>video</code> tags and the <code>href</code> attribute of <code>a</code>\ntags.</p>",
                "optional": true,
                "name": "targetUrlPatterns"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The text to display in the item; this is <em>required</em> unless\n<code>type</code> is <code>separator</code>. When the context is\n<code>selection</code>, use <code>%s</code> within the string to show the\nselected text. For example, if this parameter's value is \"Translate '%s' to\nPig Latin\" and the user selects the word \"cool\", the context menu item for\nthe selection is \"Translate 'cool' to Pig Latin\".</p>",
                "optional": true,
                "name": "title"
              },
              {
                "type": "reference",
                "referenceType": "ItemType",
                "referenceLink": "#type-ItemType",
                "comment": "<p>The type of menu item. Defaults to <code>normal</code>.</p>",
                "optional": true,
                "name": "type"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the item is visible in the menu.</p>",
                "optional": true,
                "name": "visible"
              }
            ],
            "optional": false,
            "name": "createProperties"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the item has been created in the browser. If an error occurs during creation, details will be available in <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a>.</p>"
          }
        ],
        "comment": "<p>Creates a new context menu item. If an error occurs during creation, it may\nnot be detected until the creation callback fires; details will be in <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a>.</p>",
        "returnType": {
          "type": "union",
          "isEnum": true,
          "options": [
            {
              "type": "primitive",
              "primitiveType": "number"
            },
            {
              "type": "primitive",
              "primitiveType": "string"
            }
          ],
          "name": "returns",
          "comment": "<p>The ID of the newly created item.</p>"
        },
        "name": "create"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "union",
            "isEnum": true,
            "options": [
              {
                "type": "primitive",
                "primitiveType": "number"
              },
              {
                "type": "primitive",
                "primitiveType": "string"
              }
            ],
            "optional": false,
            "name": "menuItemId",
            "comment": "<p>The ID of the context menu item to remove.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the context menu has been removed.</p>"
          }
        ],
        "comment": "<p>Removes a context menu item.</p>",
        "name": "remove"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when removal is complete.</p>"
          }
        ],
        "comment": "<p>Removes all context menu items added by this extension.</p>",
        "name": "removeAll"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "union",
            "isEnum": true,
            "options": [
              {
                "type": "primitive",
                "primitiveType": "number"
              },
              {
                "type": "primitive",
                "primitiveType": "string"
              }
            ],
            "optional": false,
            "name": "id",
            "comment": "<p>The ID of the item to update.</p>"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": true,
                "name": "checked"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "ContextType",
                  "referenceLink": "#type-ContextType"
                },
                "minLength": 1,
                "optional": true,
                "name": "contexts"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                },
                "optional": true,
                "name": "documentUrlPatterns"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": true,
                "name": "enabled"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "primitive",
                    "primitiveType": "object",
                    "optional": false,
                    "name": "info"
                  },
                  {
                    "type": "reference",
                    "referenceType": "tabs.Tab",
                    "referenceLink": "../tabs/#type-Tab",
                    "optional": false,
                    "name": "tab",
                    "comment": "<p>The details of the tab where the click took place. This parameter is not present for platform apps.</p>"
                  }
                ],
                "optional": true,
                "name": "onclick"
              },
              {
                "type": "union",
                "isEnum": true,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "number"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string"
                  }
                ],
                "comment": "<p>The ID of the item to be made this item's parent. Note: You cannot set an\nitem to become a child of its own descendant.</p>",
                "optional": true,
                "name": "parentId"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                },
                "optional": true,
                "name": "targetUrlPatterns"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": true,
                "name": "title"
              },
              {
                "type": "reference",
                "referenceType": "ItemType",
                "referenceLink": "#type-ItemType",
                "optional": true,
                "name": "type"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the item is visible in the menu.</p>",
                "optional": true,
                "name": "visible"
              }
            ],
            "optional": false,
            "name": "updateProperties",
            "comment": "<p>The properties to update. Accepts the same values as the <a href=\"#method-create\"><code>create</code></a> function.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the context menu has been updated.</p>"
          }
        ],
        "comment": "<p>Updates a previously created context menu item.</p>",
        "name": "update"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "name": "onClicked"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "contextMenus\n"
    ]
  },
  {
    "name": "chrome.cookies",
    "shortName": "cookies",
    "comment": "<p>Use the <code>chrome.cookies</code> API to query and modify cookies, and to\nbe notified when they change.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The domain of the cookie (e.g. \"www.google.com\", \"example.com\").</p>",
            "name": "domain"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The expiration date of the cookie as the number of seconds since the UNIX\nepoch. Not provided for session cookies.</p>",
            "optional": true,
            "name": "expirationDate"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if the cookie is a host-only cookie (i.e. a request's host must exactly\nmatch the domain of the cookie).</p>",
            "name": "hostOnly"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if the cookie is marked as HttpOnly (i.e. the cookie is inaccessible to\nclient-side scripts).</p>",
            "name": "httpOnly"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The name of the cookie.</p>",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The path of the cookie.</p>",
            "name": "path"
          },
          {
            "type": "reference",
            "referenceType": "SameSiteStatus",
            "referenceLink": "#type-SameSiteStatus",
            "comment": "<p>The cookie's same-site status (i.e. whether the cookie is sent with\ncross-site requests).</p>",
            "name": "sameSite"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if the cookie is marked as Secure (i.e. its scope is limited to secure\nchannels, typically HTTPS).</p>",
            "name": "secure"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if the cookie is a session cookie, as opposed to a persistent cookie\nwith an expiration date.</p>",
            "name": "session"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The ID of the cookie store containing this cookie, as provided in\ngetAllCookieStores().</p>",
            "name": "storeId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The value of the cookie.</p>",
            "name": "value"
          }
        ],
        "comment": "<p>Represents information about an HTTP cookie.</p>",
        "name": "Cookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The name of the cookie to access.</p>",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The ID of the cookie store in which to look for the cookie. By default, the\ncurrent execution context's cookie store will be used.</p>",
            "optional": true,
            "name": "storeId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL with which the cookie to access is associated. This argument may be a\nfull URL, in which case any data following the URL path (e.g. the query\nstring) is simply ignored. If host permissions for this URL are not specified\nin the manifest file, the API call will fail.</p>",
            "name": "url"
          }
        ],
        "comment": "<p>Details to identify the cookie.</p>",
        "name": "CookieDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The unique identifier for the cookie store.</p>",
            "name": "id"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "number"
            },
            "comment": "<p>Identifiers of all the browser tabs that share this cookie store.</p>",
            "name": "tabIds"
          }
        ],
        "comment": "<p>Represents a cookie store in the browser. An incognito mode window, for\ninstance, uses a separate cookie store from a non-incognito window.</p>",
        "name": "CookieStore"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"evicted\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"expired\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"explicit\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"expired_overwrite\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"overwrite\""
          }
        ],
        "comment": "<p>The underlying reason behind the cookie's change. If a cookie was inserted,\nor removed via an explicit call to \"chrome.cookies.remove\", \"cause\" will be\n\"explicit\". If a cookie was automatically removed due to expiry, \"cause\" will\nbe \"expired\". If a cookie was removed due to being overwritten with an\nalready-expired expiration date, \"cause\" will be set to \"expired_overwrite\".\nIf a cookie was automatically removed due to garbage collection, \"cause\" will\nbe \"evicted\".  If a cookie was automatically removed due to a \"set\" call that\noverwrote it, \"cause\" will be \"overwrite\". Plan your response accordingly.</p>",
        "name": "OnChangedCause"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"no_restriction\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"lax\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"strict\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"unspecified\""
          }
        ],
        "comment": "<p>A cookie's 'SameSite' state\n(https://tools.ietf.org/html/draft-west-first-party-cookies).\n'no_restriction' corresponds to a cookie set with 'SameSite=None', 'lax' to\n'SameSite=Lax', and 'strict' to 'SameSite=Strict'. 'unspecified' corresponds\nto a cookie set without the SameSite attribute.</p>",
        "name": "SameSiteStatus"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "CookieDetails",
            "referenceLink": "#type-CookieDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Cookie",
                "referenceLink": "#type-Cookie",
                "optional": false,
                "name": "cookie",
                "comment": "<p>Contains details about the cookie. This parameter is null if no such cookie was found.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves information about a single cookie. If more than one cookie of the\nsame name exists for the given URL, the one with the longest path will be\nreturned. For cookies with the same path length, the cookie with the earliest\ncreation time will be returned.</p>",
        "name": "get"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>Restricts the retrieved cookies to those whose domains match or are\nsubdomains of this one.</p>",
                "optional": true,
                "name": "domain"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>Filters the cookies by name.</p>",
                "optional": true,
                "name": "name"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>Restricts the retrieved cookies to those whose path exactly matches this\nstring.</p>",
                "optional": true,
                "name": "path"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Filters the cookies by their Secure property.</p>",
                "optional": true,
                "name": "secure"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Filters out session vs. persistent cookies.</p>",
                "optional": true,
                "name": "session"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The cookie store to retrieve cookies from. If omitted, the current execution\ncontext's cookie store will be used.</p>",
                "optional": true,
                "name": "storeId"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>Restricts the retrieved cookies to those that would match the given URL.</p>",
                "optional": true,
                "name": "url"
              }
            ],
            "optional": false,
            "name": "details",
            "comment": "<p>Information to filter the cookies being retrieved.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Cookie",
                  "referenceLink": "#type-Cookie"
                },
                "optional": false,
                "name": "cookies",
                "comment": "<p>All the existing, unexpired cookies that match the given cookie info.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves all cookies from a single cookie store that match the given\ninformation.  The cookies returned will be sorted, with those with the\nlongest path first.  If multiple cookies have the same path length, those\nwith the earliest creation time will be first.</p>",
        "name": "getAll"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "CookieStore",
                  "referenceLink": "#type-CookieStore"
                },
                "optional": false,
                "name": "cookieStores",
                "comment": "<p>All the existing cookie stores.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Lists all existing cookie stores.</p>",
        "name": "getAllCookieStores"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "CookieDetails",
            "referenceLink": "#type-CookieDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The name of the cookie that's been removed.</p>",
                    "name": "name"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The ID of the cookie store from which the cookie was removed.</p>",
                    "name": "storeId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The URL associated with the cookie that's been removed.</p>",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details",
                "comment": "<p>Contains details about the cookie that's been removed.  If removal failed for any reason, this will be \"null\", and <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Deletes a cookie by name.</p>",
        "name": "remove"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The domain of the cookie. If omitted, the cookie becomes a host-only cookie.</p>",
                "optional": true,
                "name": "domain"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The expiration date of the cookie as the number of seconds since the UNIX\nepoch. If omitted, the cookie becomes a session cookie.</p>",
                "optional": true,
                "name": "expirationDate"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the cookie should be marked as HttpOnly. Defaults to false.</p>",
                "optional": true,
                "name": "httpOnly"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The name of the cookie. Empty by default if omitted.</p>",
                "optional": true,
                "name": "name"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The path of the cookie. Defaults to the path portion of the url parameter.</p>",
                "optional": true,
                "name": "path"
              },
              {
                "type": "reference",
                "referenceType": "SameSiteStatus",
                "referenceLink": "#type-SameSiteStatus",
                "comment": "<p>The cookie's same-site status. Defaults to \"unspecified\", i.e., if omitted,\nthe cookie is set without specifying a SameSite attribute.</p>",
                "optional": true,
                "name": "sameSite"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the cookie should be marked as Secure. Defaults to false.</p>",
                "optional": true,
                "name": "secure"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The ID of the cookie store in which to set the cookie. By default, the cookie\nis set in the current execution context's cookie store.</p>",
                "optional": true,
                "name": "storeId"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The request-URI to associate with the setting of the cookie. This value can\naffect the default domain and path values of the created cookie. If host\npermissions for this URL are not specified in the manifest file, the API call\nwill fail.</p>",
                "name": "url"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The value of the cookie. Empty by default if omitted.</p>",
                "optional": true,
                "name": "value"
              }
            ],
            "optional": false,
            "name": "details",
            "comment": "<p>Details about the cookie being set.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Cookie",
                "referenceLink": "#type-Cookie",
                "optional": false,
                "name": "cookie",
                "comment": "<p>Contains details about the cookie that's been set.  If setting failed for any reason, this will be \"null\", and <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets a cookie with the given cookie data; may overwrite equivalent cookies if\nthey exist.</p>",
        "name": "set"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "reference",
                    "referenceType": "OnChangedCause",
                    "referenceLink": "#type-OnChangedCause",
                    "comment": "<p>The underlying reason behind the cookie's change.</p>",
                    "name": "cause"
                  },
                  {
                    "type": "reference",
                    "referenceType": "Cookie",
                    "referenceLink": "#type-Cookie",
                    "comment": "<p>Information about the cookie that was set or removed.</p>",
                    "name": "cookie"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>True if a cookie was removed.</p>",
                    "name": "removed"
                  }
                ],
                "optional": false,
                "name": "changeInfo"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a cookie is set or removed. As a special case, note that\nupdating a cookie's properties is implemented as a two step process: the\ncookie to be updated is first removed entirely, generating a notification\nwith \"cause\" of \"overwrite\" .  Afterwards, a new cookie is written with\nthe updated values, generating a second notification with \"cause\"\n\"explicit\".</p>",
        "name": "onChanged"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "cookies\n"
    ]
  },
  {
    "name": "chrome.debugger",
    "shortName": "debugger",
    "comment": "<p>The <code>chrome.debugger</code> API serves as an alternate transport for\nChrome's <a\nhref='https://developer.chrome.com/devtools/docs/debugger-protocol'>remote\ndebugging protocol</a>. Use <code>chrome.debugger</code> to attach to one or\nmore tabs to instrument network interaction, debug JavaScript, mutate the DOM\nand CSS, etc. Use the Debuggee <code>tabId</code> to target tabs with\nsendCommand and route events by <code>tabId</code> from onEvent callbacks.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The id of the extension which you intend to debug. Attaching to an extension\nbackground page is only possible when 'silent-debugger-extension-api' flag is\nenabled on the target browser.</p>",
            "optional": true,
            "name": "extensionId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The id of the tab which you intend to debug.</p>",
            "optional": true,
            "name": "tabId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The opaque id of the debug target.</p>",
            "optional": true,
            "name": "targetId"
          }
        ],
        "comment": "<p>Debuggee identifier. Either tabId or extensionId must be specified</p>",
        "name": "Debuggee"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if debugger is already attached.</p>",
            "name": "attached"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The extension id, defined if type = 'background_page'.</p>",
            "optional": true,
            "name": "extensionId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Target favicon URL.</p>",
            "optional": true,
            "name": "faviconUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Target id.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The tab id, defined if type == 'page'.</p>",
            "optional": true,
            "name": "tabId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Target page title.</p>",
            "name": "title"
          },
          {
            "type": "reference",
            "referenceType": "TargetInfoType",
            "referenceLink": "#type-TargetInfoType",
            "comment": "<p>Target type.</p>",
            "name": "type"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Target URL.</p>",
            "name": "url"
          }
        ],
        "comment": "<p>Debug target information</p>",
        "name": "TargetInfo"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"target_closed\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"canceled_by_user\""
          }
        ],
        "comment": "<p>Connection termination reason.</p>",
        "name": "DetachReason"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"page\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"background_page\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"worker\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"other\""
          }
        ],
        "comment": "<p>Target type.</p>",
        "name": "TargetInfoType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Debuggee",
            "referenceLink": "#type-Debuggee",
            "optional": false,
            "name": "target",
            "comment": "<p>Debugging target to which you want to attach.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "requiredVersion",
            "comment": "<p>Required debugging protocol version (\"0.1\"). One can only attach to the debuggee with matching major version and greater or equal minor version. List of the protocol versions can be obtained <a href='https://developer.chrome.com/devtools/docs/debugger-protocol'>here</a>.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called once the attach operation succeeds or fails. Callback receives no arguments. If the attach fails, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set to the error message.</p>"
          }
        ],
        "comment": "<p>Attaches debugger to the given target.</p>",
        "name": "attach"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Debuggee",
            "referenceLink": "#type-Debuggee",
            "optional": false,
            "name": "target",
            "comment": "<p>Debugging target from which you want to detach.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called once the detach operation succeeds or fails. Callback receives no arguments. If the detach fails, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set to the error message.</p>"
          }
        ],
        "comment": "<p>Detaches debugger from the given target.</p>",
        "name": "detach"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "TargetInfo",
                  "referenceLink": "#type-TargetInfo"
                },
                "optional": false,
                "name": "result",
                "comment": "<p>Array of TargetInfo objects corresponding to the available debug targets.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Returns the list of available debug targets.</p>",
        "name": "getTargets"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Debuggee",
            "referenceLink": "#type-Debuggee",
            "optional": false,
            "name": "target",
            "comment": "<p>Debugging target to which you want to send the command.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "method",
            "comment": "<p>Method name. Should be one of the methods defined by the <a href='https://developer.chrome.com/devtools/docs/debugger-protocol'>remote debugging protocol</a>.</p>"
          },
          {
            "type": "object",
            "properties": [],
            "optional": false,
            "name": "commandParams",
            "comment": "<p>JSON object with request parameters. This object must conform to the remote debugging params scheme for given method.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [],
                "optional": false,
                "name": "result",
                "comment": "<p>JSON object with the response. Structure of the response varies depending on the method name and is defined by the 'returns' attribute of the command description in the remote debugging protocol.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Response body. If an error occurs while posting the message, the callback will be called with no arguments and <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set to the error message.</p>"
          }
        ],
        "comment": "<p>Sends given command to the debugging target.</p>",
        "name": "sendCommand"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Debuggee",
                "referenceLink": "#type-Debuggee",
                "optional": false,
                "name": "source",
                "comment": "<p>The debuggee that was detached.</p>"
              },
              {
                "type": "reference",
                "referenceType": "DetachReason",
                "referenceLink": "#type-DetachReason",
                "optional": false,
                "name": "reason",
                "comment": "<p>Connection termination reason.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when browser terminates debugging session for the tab. This happens\nwhen either the tab is being closed or Chrome DevTools is being invoked\nfor the attached tab.</p>",
        "name": "onDetach"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Debuggee",
                "referenceLink": "#type-Debuggee",
                "optional": false,
                "name": "source",
                "comment": "<p>The debuggee that generated this event.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "method",
                "comment": "<p>Method name. Should be one of the notifications defined by the <a href='https://developer.chrome.com/devtools/docs/debugger-protocol'>remote debugging protocol</a>.</p>"
              },
              {
                "type": "object",
                "properties": [],
                "comment": "<p>JSON object with the parameters. Structure of the parameters varies depending on the method name and is defined by the 'parameters' attribute of the event description in the remote debugging protocol.</p>",
                "optional": false,
                "name": "params"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired whenever debugging target issues instrumentation event.</p>",
        "name": "onEvent"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.declarativeContent",
    "shortName": "declarativeContent",
    "comment": "<p>Use the <code>chrome.declarativeContent</code> API to take actions depending\non the content of a page, without requiring permission to read the page's\ncontent.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Matches if all of the CSS selectors in the array match displayed elements in\na frame with the same origin as the page's main frame. All selectors in this\narray must be <a href=\"http://www.w3.org/TR/selectors4/#compound\">compound\nselectors</a> to speed up matching. Note: Listing hundreds of CSS selectors\nor listing CSS selectors that match hundreds of times per page can slow down\nweb sites.</p>",
            "optional": true,
            "name": "css"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Matches if the bookmarked state of the page is equal to the specified value.\nRequres the <a href=\"../../declare_permissions/\">bookmarks permission</a>.</p>",
            "optional": true,
            "name": "isBookmarked"
          },
          {
            "type": "reference",
            "referenceType": "events.UrlFilter",
            "referenceLink": "../events/#type-UrlFilter",
            "comment": "<p>Matches if the conditions of the <code>UrlFilter</code> are fulfilled for the\ntop-level URL of the page.</p>",
            "optional": true,
            "name": "pageUrl"
          }
        ],
        "comment": "<p>Matches the state of a web page based on various criteria.</p>",
        "name": "PageStateMatcher"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the content script runs in all frames of the matching page, or in\nonly the top frame. Default is <code>false</code>.</p>",
            "optional": true,
            "name": "allFrames"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Names of CSS files to be injected as a part of the content script.</p>",
            "optional": true,
            "name": "css"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Names of JavaScript files to be injected as a part of the content script.</p>",
            "optional": true,
            "name": "js"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether to insert the content script on <code>about:blank</code> and\n<code>about:srcdoc</code>. Default is <code>false</code>.</p>",
            "optional": true,
            "name": "matchAboutBlank"
          }
        ],
        "comment": "<p>Declarative event action that injects a content script. </p>\n<p><b>WARNING:</b>\nThis action is still experimental and is not supported on stable builds of\nChrome.</p>",
        "name": "RequestContentScript"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "union",
            "isEnum": false,
            "options": [
              {
                "type": "reference",
                "referenceType": "ImageDataType",
                "referenceLink": "#type-ImageDataType"
              },
              {
                "type": "object",
                "properties": []
              }
            ],
            "comment": "<p>Either an <code>ImageData</code> object or a dictionary {size -> ImageData}\nrepresenting an icon to be set. If the icon is specified as a dictionary, the\nimage used is chosen depending on the screen's pixel density. If the number\nof image pixels that fit into one screen space unit equals\n<code>scale</code>, then an image with size <code>scale * n</code> is\nselected, where <i>n</i> is the size of the icon in the UI. At least one\nimage must be specified. Note that <code>details.imageData = foo</code> is\nequivalent to <code>details.imageData = {'16': foo}</code>.</p>",
            "optional": true,
            "name": "imageData"
          }
        ],
        "comment": "<p>Declarative event action that sets the n-<abbr title=\"device-independent\npixel\">dip</abbr> square icon for the extension's <a href=\"../pageAction/\">page\naction</a> or <a href=\"../browserAction/\">browser action</a> while the corresponding\nconditions are met. This action can be used without <a\nhref=\"declare_permissions.html#host-permissions\">host permissions</a>, but\nthe extension must have a page or browser action.</p>\n<p>Exactly one of\n<code>imageData</code> or <code>path</code> must be specified. Both are\ndictionaries mapping a number of pixels to an image representation. The image\nrepresentation in <code>imageData</code> is an <a\nhref=\"https://developer.mozilla.org/en-US/docs/Web/API/ImageData\">ImageData</a> object; for example, from a <code>canvas</code> element, while the image representation in <code>path</code> is the path to an image file relative to the extension's manifest. If <code>scale</code> screen pixels fit into a device-independent pixel, the <code>scale * n</code> icon is used. If that scale is missing, another image is resized to the required size.</p>",
        "name": "SetIcon"
      },
      {
        "type": "type",
        "properties": [],
        "comment": "<p>Declarative event action that shows the extension's <a href=\"../pageAction/\">page\naction</a> while the corresponding conditions are met. This action can be used\nwithout <a href=\"declare_permissions#host-permissions\">host permissions</a>,\nbut the extension must have a page action. If the extension has the <a\nhref=\"activeTab.html\">activeTab</a> permission, clicking the page action\ngrants access to the active tab.</p>",
        "name": "ShowPageAction"
      },
      {
        "type": "reference",
        "referenceType": "ArrayBuffer",
        "comment": "<p>See <a\nhref=\"https://developer.mozilla.org/en-US/docs/Web/API/ImageData\">https://developer.mozilla.org/en-US/docs/Web/API/ImageData</a>.</p>",
        "name": "ImageDataType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"declarativeContent.PageStateMatcher\""
          }
        ],
        "name": "PageStateMatcherInstanceType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"declarativeContent.RequestContentScript\""
          }
        ],
        "name": "RequestContentScriptInstanceType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"declarativeContent.SetIcon\""
          }
        ],
        "name": "SetIconInstanceType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"declarativeContent.ShowPageAction\""
          }
        ],
        "name": "ShowPageActionInstanceType"
      }
    ],
    "properties": [],
    "methods": [],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "name": "onPageChanged"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "declarativeContent\n"
    ]
  },
  {
    "name": "chrome.declarativeNetRequest",
    "shortName": "declarativeNetRequest",
    "comment": "<p>The <code>chrome.declarativeNetRequest</code> API is used to block or modify\nnetwork requests by specifying declarative rules. This lets extensions\nmodify network requests without intercepting them and viewing their content,\nthus providing more privacy.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether to automatically display the action count for a page as the\nextension's badge text. This preference is persisted across sessions.</p>",
            "optional": true,
            "name": "displayActionCountAsBadgeText"
          },
          {
            "type": "reference",
            "referenceType": "TabActionCountUpdate",
            "referenceLink": "#type-TabActionCountUpdate",
            "comment": "<p>Details of how the tab's action count should be adjusted.</p>",
            "optional": true,
            "name": "tabUpdate"
          }
        ],
        "name": "ExtensionActionOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "name": "isSupported"
          },
          {
            "type": "reference",
            "referenceType": "UnsupportedRegexReason",
            "referenceLink": "#type-UnsupportedRegexReason",
            "comment": "<p>Specifies the reason why the regular expression is not supported. Only\nprovided if <code>isSupported</code> is false.</p>",
            "optional": true,
            "name": "reason"
          }
        ],
        "name": "IsRegexSupportedResult"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>A matching rule's ID.</p>",
            "name": "ruleId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>ID of the <a href=\"#type-Ruleset\"><code>Ruleset</code></a> this rule belongs to. For a rule originating from\nthe set of dynamic rules, this will be equal to <a href=\"#property-DYNAMIC_RULESET_ID\"><code>DYNAMIC_RULESET_ID</code></a>.</p>",
            "name": "rulesetId"
          }
        ],
        "name": "MatchedRule"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "MatchedRule",
            "referenceLink": "#type-MatchedRule",
            "name": "rule"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The tabId of the tab from which the request originated if the tab is still\nactive. Else -1.</p>",
            "name": "tabId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The time the rule was matched. Timestamps will correspond to the Javascript\nconvention for times, i.e. number of milliseconds since the epoch.</p>",
            "name": "timeStamp"
          }
        ],
        "name": "MatchedRuleInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "RequestDetails",
            "referenceLink": "#type-RequestDetails",
            "comment": "<p>Details about the request for which the rule was matched.</p>",
            "name": "request"
          },
          {
            "type": "reference",
            "referenceType": "MatchedRule",
            "referenceLink": "#type-MatchedRule",
            "name": "rule"
          }
        ],
        "name": "MatchedRuleInfoDebug"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>If specified, only matches rules after the given timestamp.</p>",
            "optional": true,
            "name": "minTimeStamp"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>If specified, only matches rules for the given tab.</p>",
            "optional": true,
            "name": "tabId"
          }
        ],
        "name": "MatchedRulesFilter"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The name of the header to be modified.</p>",
            "name": "header"
          },
          {
            "type": "reference",
            "referenceType": "HeaderOperation",
            "referenceLink": "#type-HeaderOperation",
            "comment": "<p>The operation to be performed on a header.</p>",
            "name": "operation"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The new value for the header. Must be specified for <code>append</code> and\n<code>set</code> operations.</p>",
            "optional": true,
            "name": "value"
          }
        ],
        "name": "ModifyHeaderInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "name": "key"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "name": "value"
          }
        ],
        "name": "QueryKeyValue"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "QueryKeyValue",
              "referenceLink": "#type-QueryKeyValue"
            },
            "comment": "<p>The list of query key-value pairs to be added or replaced.</p>",
            "optional": true,
            "name": "addOrReplaceParams"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The list of query keys to be removed.</p>",
            "optional": true,
            "name": "removeParams"
          }
        ],
        "name": "QueryTransform"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Path relative to the extension directory. Should start with '/'.</p>",
            "optional": true,
            "name": "extensionPath"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Substitution pattern for rules which specify a <code>regexFilter</code>. The\nfirst match of <code>regexFilter</code> within the url will be replaced with\nthis pattern. Within <code>regexSubstitution</code>, backslash-escaped digits\n(\\1 to \\9) can be used to insert the corresponding capture groups. \\0 refers\nto the entire matching text.</p>",
            "optional": true,
            "name": "regexSubstitution"
          },
          {
            "type": "reference",
            "referenceType": "URLTransform",
            "referenceLink": "#type-URLTransform",
            "comment": "<p>Url transformations to perform.</p>",
            "optional": true,
            "name": "transform"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The redirect url. Redirects to JavaScript urls are not allowed.</p>",
            "optional": true,
            "name": "url"
          }
        ],
        "name": "Redirect"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the <code>regex</code> specified is case sensitive. Default is true.</p>",
            "optional": true,
            "name": "isCaseSensitive"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The regular expresson to check.</p>",
            "name": "regex"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the <code>regex</code> specified requires capturing. Capturing is\nonly required for redirect rules which specify a <code>regexSubstition</code>\naction. The default is false.</p>",
            "optional": true,
            "name": "requireCapturing"
          }
        ],
        "name": "RegexOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The value 0 indicates that the request happens in the main frame; a positive\nvalue indicates the ID of a subframe in which the request happens. If the\ndocument of a (sub-)frame is loaded (<code>type</code> is\n<code>main_frame</code> or <code>sub_frame</code>), <code>frameId</code>\nindicates the ID of this frame, not the ID of the outer frame. Frame IDs are\nunique within a tab.</p>",
            "name": "frameId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The origin where the request was initiated. This does not change through\nredirects. If this is an opaque origin, the string 'null' will be used.</p>",
            "optional": true,
            "name": "initiator"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Standard HTTP method.</p>",
            "name": "method"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>ID of frame that wraps the frame which sent the request. Set to -1 if no\nparent frame exists.</p>",
            "name": "parentFrameId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The ID of the request. Request IDs are unique within a browser session.</p>",
            "name": "requestId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID of the tab in which the request takes place. Set to -1 if the request\nisn't related to a tab.</p>",
            "name": "tabId"
          },
          {
            "type": "reference",
            "referenceType": "ResourceType",
            "referenceLink": "#type-ResourceType",
            "comment": "<p>The resource type of the request.</p>",
            "name": "type"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL of the request.</p>",
            "name": "url"
          }
        ],
        "name": "RequestDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "RuleAction",
            "referenceLink": "#type-RuleAction",
            "comment": "<p>The action to take if this rule is matched.</p>",
            "name": "action"
          },
          {
            "type": "reference",
            "referenceType": "RuleCondition",
            "referenceLink": "#type-RuleCondition",
            "comment": "<p>The condition under which this rule is triggered.</p>",
            "name": "condition"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>An id which uniquely identifies a rule. Mandatory and should be >= 1.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Rule priority. Defaults to 1. When specified, should be >= 1.</p>",
            "optional": true,
            "name": "priority"
          }
        ],
        "name": "Rule"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "Redirect",
            "referenceLink": "#type-Redirect",
            "comment": "<p>Describes how the redirect should be performed. Only valid for redirect\nrules.</p>",
            "optional": true,
            "name": "redirect"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ModifyHeaderInfo",
              "referenceLink": "#type-ModifyHeaderInfo"
            },
            "comment": "<p>The request headers to modify for the request. Only valid if RuleActionType\nis \"modifyHeaders\".</p>",
            "optional": true,
            "name": "requestHeaders"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ModifyHeaderInfo",
              "referenceLink": "#type-ModifyHeaderInfo"
            },
            "comment": "<p>The response headers to modify for the request. Only valid if RuleActionType\nis \"modifyHeaders\".</p>",
            "optional": true,
            "name": "responseHeaders"
          },
          {
            "type": "reference",
            "referenceType": "RuleActionType",
            "referenceLink": "#type-RuleActionType",
            "comment": "<p>The type of action to perform.</p>",
            "name": "type"
          }
        ],
        "name": "RuleAction"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "DomainType",
            "referenceLink": "#type-DomainType",
            "comment": "<p>Specifies whether the network request is first-party or third-party to the\ndomain from which it originated. If omitted, all requests are accepted.</p>",
            "optional": true,
            "name": "domainType"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The rule will only match network requests originating from the list of\n<code>domains</code>. If the list is omitted, the rule is applied to requests\nfrom all domains. An empty list is not allowed.</p><p>Notes: <ul>\n<li>Sub-domains like \"a.example.com\" are also allowed.</li>  <li>The entries\nmust consist of only ascii characters.</li>  <li>Use punycode encoding for\ninternationalized domains.</li>  <li>    This matches against the request\ninitiator and not the request url.  </li> </ul></p>",
            "optional": true,
            "name": "domains"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The rule will not match network requests originating from the list of\n<code>excludedDomains</code>. If the list is empty or omitted, no domains are\nexcluded. This takes precedence over <code>domains</code>.</p><p>Notes: <ul>\n<li>Sub-domains like \"a.example.com\" are also allowed.</li>  <li>The entries\nmust consist of only ascii characters.</li>  <li>Use punycode encoding for\ninternationalized domains.</li>  <li>    This matches against the request\ninitiator and not the request url.  </li> </ul></p>",
            "optional": true,
            "name": "excludedDomains"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ResourceType",
              "referenceLink": "#type-ResourceType"
            },
            "comment": "<p>List of resource types which the rule won't match. Only one of\n<code>resourceTypes</code> and <code>excludedResourceTypes</code> should be\nspecified. If neither of them is specified, all resource types except\n\"main_frame\" are blocked.</p>",
            "optional": true,
            "name": "excludedResourceTypes"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the <code>urlFilter</code> or <code>regexFilter</code> (whichever is\nspecified) is case sensitive. Default is true.</p>",
            "optional": true,
            "name": "isUrlFilterCaseSensitive"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Regular expression to match against the network request url. This follows\nthe <a href = \"https://github.com/google/re2/wiki/Syntax\">RE2\nsyntax</a>.</p><p>Note: Only one of <code>urlFilter</code> or\n<code>regexFilter</code> can be specified.</p><p>Note: The\n<code>regexFilter</code> must be composed of only ASCII characters. This is\nmatched against a url where the host is encoded in the punycode format (in\ncase of internationalized domains) and any other non-ascii characters are url\nencoded in utf-8.</p>",
            "optional": true,
            "name": "regexFilter"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ResourceType",
              "referenceLink": "#type-ResourceType"
            },
            "comment": "<p>List of resource types which the rule can match. An empty list is not\nallowed.</p><p>Note: this must be specified for <code>allowAllRequests</code>\nrules and may only include the <code>sub_frame</code> and\n<code>main_frame</code> resource types.</p>",
            "optional": true,
            "name": "resourceTypes"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The pattern which is matched against the network request url. Supported\nconstructs:</p><p><b>'*'</b>  : Wildcard: Matches any number of\ncharacters.</p><p><b>'|'</b>  : Left/right anchor: If used at either end of\nthe pattern,               specifies the beginning/end of the url\nrespectively.</p><p><b>'||'</b> : Domain name anchor: If used at the\nbeginning of the pattern,               specifies the start of a (sub-)domain\nof the URL.</p><p><b>'^'</b>  : Separator character: This matches anything\nexcept a letter, a               digit or one of the following: _ - . %. This\ncan also match               the end of the URL.</p><p>Therefore\n<code>urlFilter</code> is composed of the following parts: (optional\nLeft/Domain name anchor) + pattern + (optional Right anchor).</p><p>If\nomitted, all urls are matched. An empty string is not allowed.</p><p>A\npattern beginning with <code>||*</code> is not allowed. Use <code>*</code>\ninstead.</p><p>Note: Only one of <code>urlFilter</code> or\n<code>regexFilter</code> can be specified.</p><p>Note: The\n<code>urlFilter</code> must be composed of only ASCII characters. This is\nmatched against a url where the host is encoded in the punycode format (in\ncase of internationalized domains) and any other non-ascii characters are url\nencoded in utf-8. For example, when the request url is http://abc.рф?q=ф,\nthe <code>urlFilter</code> will be matched against the url\nhttp://abc.xn--p1ai/?q=%D1%84.</p>",
            "optional": true,
            "name": "urlFilter"
          }
        ],
        "name": "RuleCondition"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "MatchedRuleInfo",
              "referenceLink": "#type-MatchedRuleInfo"
            },
            "comment": "<p>Rules matching the given filter.</p>",
            "name": "rulesMatchedInfo"
          }
        ],
        "name": "RulesMatchedDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the ruleset is enabled by default.</p>",
            "name": "enabled"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A non-empty string uniquely identifying the ruleset. IDs beginning with '_'\nare reserved for internal use.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The path of the JSON ruleset relative to the extension directory.</p>",
            "name": "path"
          }
        ],
        "name": "Ruleset"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The amount to increment the tab's action count by. Negative values will\ndecrement the count.</p>",
            "name": "increment"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The tab for which to update the action count.</p>",
            "name": "tabId"
          }
        ],
        "name": "TabActionCountUpdate"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The new fragment for the request. Should be either empty, in which case the\nexisting fragment is cleared; or should begin with '#'.</p>",
            "optional": true,
            "name": "fragment"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The new host for the request.</p>",
            "optional": true,
            "name": "host"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The new password for the request.</p>",
            "optional": true,
            "name": "password"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The new path for the request. If empty, the existing path is cleared.</p>",
            "optional": true,
            "name": "path"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The new port for the request. If empty, the existing port is cleared.</p>",
            "optional": true,
            "name": "port"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The new query for the request. Should be either empty, in which case the\nexisting query is cleared; or should begin with '?'.</p>",
            "optional": true,
            "name": "query"
          },
          {
            "type": "reference",
            "referenceType": "QueryTransform",
            "referenceLink": "#type-QueryTransform",
            "comment": "<p>Add, remove or replace query key-value pairs.</p>",
            "optional": true,
            "name": "queryTransform"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The new scheme for the request. Allowed values are \"http\", \"https\", \"ftp\" and\n\"chrome-extension\".</p>",
            "optional": true,
            "name": "scheme"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The new username for the request.</p>",
            "optional": true,
            "name": "username"
          }
        ],
        "name": "URLTransform"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "Rule",
              "referenceLink": "#type-Rule"
            },
            "comment": "<p>Rules to add.</p>",
            "optional": true,
            "name": "addRules"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "number"
            },
            "comment": "<p>IDs of the rules to remove. Any invalid IDs will be ignored.</p>",
            "optional": true,
            "name": "removeRuleIds"
          }
        ],
        "name": "UpdateRuleOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The set of ids corresponding to a static <a href=\"#type-Ruleset\"><code>Ruleset</code></a> that should be\ndisabled.</p>",
            "optional": true,
            "name": "disableRulesetIds"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The set of ids corresponding to a static <a href=\"#type-Ruleset\"><code>Ruleset</code></a> that should be\nenabled.</p>",
            "optional": true,
            "name": "enableRulesetIds"
          }
        ],
        "name": "UpdateRulesetOptions"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"firstParty\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"thirdParty\""
          }
        ],
        "comment": "<p>This describes whether the request is first or third party to the frame in\nwhich it originated. A request is said to be first party if it has the same\ndomain (eTLD+1) as the frame in which the request originated.</p>",
        "name": "DomainType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"append\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"set\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"remove\""
          }
        ],
        "comment": "<p>This describes the possible operations for a \"modifyHeaders\" rule.</p>",
        "name": "HeaderOperation"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"main_frame\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"sub_frame\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"stylesheet\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"script\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"image\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"font\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"object\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"xmlhttprequest\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ping\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"csp_report\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"media\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"websocket\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"other\""
          }
        ],
        "comment": "<p>This describes the resource type of the network request.</p>",
        "name": "ResourceType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"block\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"redirect\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"allow\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"upgradeScheme\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"modifyHeaders\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"allowAllRequests\""
          }
        ],
        "comment": "<p>Describes the kind of action to take if a given RuleCondition matches.</p>",
        "name": "RuleActionType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"syntaxError\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"memoryLimitExceeded\""
          }
        ],
        "comment": "<p>Describes the reason why a given regular expression isn't supported.</p>",
        "name": "UnsupportedRegexReason"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "string",
        "literalValue": "\"_dynamic\"",
        "comment": "<p>Ruleset ID for the dynamic rules added by the extension.</p>",
        "name": "DYNAMIC_RULESET_ID"
      },
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "10",
        "comment": "<p>Time interval within which <code>MAX_GETMATCHEDRULES_CALLS_PER_INTERVAL\ngetMatchedRules</code> calls can be made, specified in minutes. Additional\ncalls will fail immediately and set <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a>. Note:\n<code>getMatchedRules</code> calls associated with a user gesture are exempt\nfrom the quota.</p>",
        "name": "GETMATCHEDRULES_QUOTA_INTERVAL"
      },
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "30000",
        "comment": "<p>The minimum number of static rules guaranteed to an extension across its\nenabled static rulesets. Any rules above this limit will count towards the <a\nhref=\"#global-rule-limit\">global rule limit</a>.</p>",
        "name": "GUARANTEED_MINIMUM_STATIC_RULES"
      },
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "20",
        "comment": "<p>The number of times <code>getMatchedRules</code> can be called within a\nperiod of <code>GETMATCHEDRULES_QUOTA_INTERVAL</code>.</p>",
        "name": "MAX_GETMATCHEDRULES_CALLS_PER_INTERVAL"
      },
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "5000",
        "comment": "<p>The maximum number of dynamic rules that an extension can add.</p>",
        "name": "MAX_NUMBER_OF_DYNAMIC_RULES"
      },
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "1000",
        "comment": "<p>The maximum number of regular expression rules that an extension can add.\nThis limit is evaluated separately for the set of dynamic rules and those\nspecified in the rule resources file.</p>",
        "name": "MAX_NUMBER_OF_REGEX_RULES"
      },
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "10",
        "comment": "<p>The maximum number of static <code>Rulesets</code> an extension can specify\nas part of the <code>\"rule_resources\"</code> manifest key.</p>",
        "name": "MAX_NUMBER_OF_STATIC_RULESETS"
      }
    ],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "count"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Returns the number of static rules an extension can enable before the <a\nhref=\"#global-rule-limit\">global static rule limit</a> is reached.</p>",
        "name": "getAvailableStaticRuleCount"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Rule",
                  "referenceLink": "#type-Rule"
                },
                "optional": false,
                "name": "rules"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the set of dynamic rules. An error might be raised in case of transient internal errors.</p>"
          }
        ],
        "comment": "<p>Returns the current set of dynamic rules for the extension.</p>",
        "name": "getDynamicRules"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                },
                "optional": false,
                "name": "rulesetIds"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with a list of ids, where each id corresponds to an enabled static <a href=\"#type-Ruleset\"><code>Ruleset</code></a>.</p>"
          }
        ],
        "comment": "<p>Returns the ids for the current set of enabled static rulesets.</p>",
        "name": "getEnabledRulesets"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "MatchedRulesFilter",
            "referenceLink": "#type-MatchedRulesFilter",
            "optional": true,
            "name": "filter",
            "comment": "<p>An object to filter the list of matched rules.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "RulesMatchedDetails",
                "referenceLink": "#type-RulesMatchedDetails",
                "optional": false,
                "name": "details"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called once the list of matched rules has been fetched. In case of an error, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set and no rules will be returned. This can happen for multiple reasons, such as insufficient permissions, or exceeding the quota.</p>"
          }
        ],
        "comment": "<p>Returns all rules matched for the extension. Callers can optionally filter\nthe list of matched rules by specifying a |filter|. This method is only\navailable to extensions with the <code>declarativeNetRequestFeedback</code>\npermission or having the <code>activeTab</code> permission granted for the\n<code>tabId</code> specified in <code>filter</code>. Note: Rules not\nassociated with an active document that were matched more than five minutes\nago will not be returned.</p>",
        "name": "getMatchedRules"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "RegexOptions",
            "referenceLink": "#type-RegexOptions",
            "optional": false,
            "name": "regexOptions",
            "comment": "<p>The regular expression to check.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "IsRegexSupportedResult",
                "referenceLink": "#type-IsRegexSupportedResult",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with details consisting of whether the regular expression is supported and the reason if not.</p>"
          }
        ],
        "comment": "<p>Checks if the given regular expression will be supported as a\n<code>regexFilter</code> rule condition.</p>",
        "name": "isRegexSupported"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ExtensionActionOptions",
            "referenceLink": "#type-ExtensionActionOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Configures if the action count for tabs should be displayed as the extension\naction's badge text and provides a way for that action count to be\nincremented.</p>",
        "name": "setExtensionActionOptions"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "UpdateRuleOptions",
            "referenceLink": "#type-UpdateRuleOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called once the update is complete or has failed. In case of an error, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set and no change will be made to the rule set. This can happen for multiple reasons, such as invalid rule format, duplicate rule ID, rule count limit exceeded, internal errors, and others.</p>"
          }
        ],
        "comment": "<p>Modifies the current set of dynamic rules for the extension. The rules with\nIDs listed in <code>options.removeRuleIds</code> are first removed, and then\nthe rules given in <code>options.addRules</code> are added. Notes: <ul>\n<li>This update happens as a single atomic operation: either all specified\nrules are added and removed, or an error is returned.</li> <li>These rules\nare persisted across browser sessions and across extension updates.</li>\n<li>Static rules specified as part of the extension package can not be\nremoved using this function.</li> <li><a href=\"#property-MAX_NUMBER_OF_DYNAMIC_RULES\"><code>MAX_NUMBER_OF_DYNAMIC_RULES</code></a> is\nthe maximum number of dynamic rules an extension can add.</li> </ul></p>",
        "name": "updateDynamicRules"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "UpdateRulesetOptions",
            "referenceLink": "#type-UpdateRulesetOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called once the update is complete. In case of an error, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set and no change will be made to set of enabled rulesets. This can happen for multiple reasons, such as invalid ruleset IDs, rule count limit exceeded, or internal errors.</p>"
          }
        ],
        "comment": "<p>Updates the set of enabled static rulesets for the extension. The rulesets\nwith IDs listed in <code>options.disableRulesetIds</code> are first removed,\nand then the rulesets listed in <code>options.enableRulesetIds</code> are\nadded.<br/> Note that the set of enabled static rulesets is persisted across\nsessions but not across extension updates, i.e. the\n<code>rule_resources</code> manifest key will determine the set of enabled\nstatic rulesets on each extension update.</p>",
        "name": "updateEnabledRulesets"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "MatchedRuleInfoDebug",
                "referenceLink": "#type-MatchedRuleInfoDebug",
                "optional": false,
                "name": "info",
                "comment": "<p>The rule that has been matched along with information about the associated request.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a rule is matched with a request. Only available for unpacked\nextensions with the <code>declarativeNetRequestFeedback</code> permission\nas this is intended to be used for debugging purposes only.</p>",
        "name": "onRuleMatchedDebug"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "declarativeNetRequest\n"
    ]
  },
  {
    "name": "chrome.declarativeWebRequest",
    "shortName": "declarativeWebRequest",
    "comment": "<p><em><strong>Note:</strong> this API is currently on hold, without concrete\nplans to move to stable.</em> Use the\n<code>chrome.declarativeWebRequest</code> API to intercept, block, or modify\nrequests in-flight. It is significantly faster than the <a\nhref=\"../webRequest/\"><code>chrome.webRequest</code> API</a> because you can\nregister rules that are evaluated in the browser rather than the JavaScript\nengine, which reduces roundtrip latencies and allows higher efficiency.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "RequestCookie",
            "referenceLink": "#type-RequestCookie",
            "comment": "<p>Cookie to be added to the request. No field may be undefined.</p>",
            "name": "cookie"
          }
        ],
        "comment": "<p>Adds a cookie to the request or overrides a cookie, in case another cookie of\nthe same name exists already. Note that it is preferred to use the Cookies\nAPI because this is computationally less expensive.</p>",
        "name": "AddRequestCookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ResponseCookie",
            "referenceLink": "#type-ResponseCookie",
            "comment": "<p>Cookie to be added to the response. The name and value need to be specified.</p>",
            "name": "cookie"
          }
        ],
        "comment": "<p>Adds a cookie to the response or overrides a cookie, in case another cookie\nof the same name exists already. Note that it is preferred to use the Cookies\nAPI because this is computationally less expensive.</p>",
        "name": "AddResponseCookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>HTTP response header name.</p>",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>HTTP response header value.</p>",
            "name": "value"
          }
        ],
        "comment": "<p>Adds the response header to the response of this web request. As multiple\nresponse headers may share the same name, you need to first remove and then\nadd a new response header in order to replace one.</p>",
        "name": "AddResponseHeader"
      },
      {
        "type": "type",
        "properties": [],
        "comment": "<p>Declarative event action that cancels a network request.</p>",
        "name": "CancelRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "RequestCookie",
            "referenceLink": "#type-RequestCookie",
            "comment": "<p>Filter for cookies that will be modified. All empty entries are ignored.</p>",
            "name": "filter"
          },
          {
            "type": "reference",
            "referenceType": "RequestCookie",
            "referenceLink": "#type-RequestCookie",
            "comment": "<p>Attributes that shall be overridden in cookies that machted the filter.\nAttributes that are set to an empty string are removed.</p>",
            "name": "modification"
          }
        ],
        "comment": "<p>Edits one or more cookies of request. Note that it is preferred to use the\nCookies API because this is computationally less expensive.</p>",
        "name": "EditRequestCookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "FilterResponseCookie",
            "referenceLink": "#type-FilterResponseCookie",
            "comment": "<p>Filter for cookies that will be modified. All empty entries are ignored.</p>",
            "name": "filter"
          },
          {
            "type": "reference",
            "referenceType": "ResponseCookie",
            "referenceLink": "#type-ResponseCookie",
            "comment": "<p>Attributes that shall be overridden in cookies that machted the filter.\nAttributes that are set to an empty string are removed.</p>",
            "name": "modification"
          }
        ],
        "comment": "<p>Edits one or more cookies of response. Note that it is preferred to use the\nCookies API because this is computationally less expensive.</p>",
        "name": "EditResponseCookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Inclusive lower bound on the cookie lifetime (specified in seconds after\ncurrent time). Only cookies whose expiration date-time is set to 'now +\nageLowerBound' or later fulfill this criterion. Session cookies do not meet\nthe criterion of this filter. The cookie lifetime is calculated from either\n'max-age' or 'expires' cookie attributes. If both are specified, 'max-age' is\nused to calculate the cookie lifetime.</p>",
            "optional": true,
            "name": "ageLowerBound"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Inclusive upper bound on the cookie lifetime (specified in seconds after\ncurrent time). Only cookies whose expiration date-time is in the interval\n[now, now + ageUpperBound] fulfill this criterion. Session cookies and\ncookies whose expiration date-time is in the past do not meet the criterion\nof this filter. The cookie lifetime is calculated from either 'max-age' or\n'expires' cookie attributes. If both are specified, 'max-age' is used to\ncalculate the cookie lifetime.</p>",
            "optional": true,
            "name": "ageUpperBound"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Value of the Domain cookie attribute.</p>",
            "optional": true,
            "name": "domain"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Value of the Expires cookie attribute.</p>",
            "optional": true,
            "name": "expires"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Existence of the HttpOnly cookie attribute.</p>",
            "optional": true,
            "name": "httpOnly"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Value of the Max-Age cookie attribute</p>",
            "optional": true,
            "name": "maxAge"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Name of a cookie.</p>",
            "optional": true,
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Value of the Path cookie attribute.</p>",
            "optional": true,
            "name": "path"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Existence of the Secure cookie attribute.</p>",
            "optional": true,
            "name": "secure"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Filters session cookies. Session cookies have no lifetime specified in any of\n'max-age' or 'expires' attributes.</p>",
            "optional": true,
            "name": "sessionCookie"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Value of a cookie, may be padded in double-quotes.</p>",
            "optional": true,
            "name": "value"
          }
        ],
        "comment": "<p>A filter of a cookie in HTTP Responses.</p>",
        "name": "FilterResponseCookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "union",
            "isEnum": false,
            "options": [
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                }
              },
              {
                "type": "primitive",
                "primitiveType": "string"
              }
            ],
            "comment": "<p>Matches if the header name contains all of the specified strings.</p>",
            "optional": true,
            "name": "nameContains"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the header name is equal to the specified string.</p>",
            "optional": true,
            "name": "nameEquals"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the header name starts with the specified string.</p>",
            "optional": true,
            "name": "namePrefix"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the header name ends with the specified string.</p>",
            "optional": true,
            "name": "nameSuffix"
          },
          {
            "type": "union",
            "isEnum": false,
            "options": [
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                }
              },
              {
                "type": "primitive",
                "primitiveType": "string"
              }
            ],
            "comment": "<p>Matches if the header value contains all of the specified strings.</p>",
            "optional": true,
            "name": "valueContains"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the header value is equal to the specified string.</p>",
            "optional": true,
            "name": "valueEquals"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the header value starts with the specified string.</p>",
            "optional": true,
            "name": "valuePrefix"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the header value ends with the specified string.</p>",
            "optional": true,
            "name": "valueSuffix"
          }
        ],
        "comment": "<p>Filters request headers for various criteria. Multiple criteria are evaluated\nas a conjunction.</p>",
        "name": "HeaderFilter"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>If set, rules with the specified tag are ignored. This ignoring is not\npersisted, it affects only rules and their actions of the same network\nrequest stage. Note that rules are executed in descending order of their\npriorities. This action affects rules of lower priority than the current\nrule. Rules with the same priority may or may not be ignored.</p>",
            "optional": true,
            "name": "hasTag"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>If set, rules with a lower priority than the specified value are ignored.\nThis boundary is not persisted, it affects only rules and their actions of\nthe same network request stage.</p>",
            "optional": true,
            "name": "lowerPriorityThan"
          }
        ],
        "comment": "<p>Masks all rules that match the specified criteria.</p>",
        "name": "IgnoreRules"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A match pattern that may contain capture groups. Capture groups are\nreferenced in the Perl syntax ($1, $2, ...) instead of the RE2 syntax (\\1,\n\\2, ...) in order to be closer to JavaScript Regular Expressions.</p>",
            "name": "from"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Destination pattern.</p>",
            "name": "to"
          }
        ],
        "comment": "<p>Redirects a request by applying a regular expression on the URL. The regular\nexpressions use the <a\nhref=\"https://github.com/google/re2/blob/master/doc/syntax.txt\">RE2\nsyntax</a>.</p>",
        "name": "RedirectByRegEx"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Destination to where the request is redirected.</p>",
            "name": "redirectUrl"
          }
        ],
        "comment": "<p>Declarative event action that redirects a network request.</p>",
        "name": "RedirectRequest"
      },
      {
        "type": "type",
        "properties": [],
        "comment": "<p>Declarative event action that redirects a network request to an empty\ndocument.</p>",
        "name": "RedirectToEmptyDocument"
      },
      {
        "type": "type",
        "properties": [],
        "comment": "<p>Declarative event action that redirects a network request to a transparent\nimage.</p>",
        "name": "RedirectToTransparentImage"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "RequestCookie",
            "referenceLink": "#type-RequestCookie",
            "comment": "<p>Filter for cookies that will be removed. All empty entries are ignored.</p>",
            "name": "filter"
          }
        ],
        "comment": "<p>Removes one or more cookies of request. Note that it is preferred to use the\nCookies API because this is computationally less expensive.</p>",
        "name": "RemoveRequestCookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>HTTP request header name (case-insensitive).</p>",
            "name": "name"
          }
        ],
        "comment": "<p>Removes the request header of the specified name. Do not use SetRequestHeader\nand RemoveRequestHeader with the same header name on the same request. Each\nrequest header name occurs only once in each request.</p>",
        "name": "RemoveRequestHeader"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "FilterResponseCookie",
            "referenceLink": "#type-FilterResponseCookie",
            "comment": "<p>Filter for cookies that will be removed. All empty entries are ignored.</p>",
            "name": "filter"
          }
        ],
        "comment": "<p>Removes one or more cookies of response. Note that it is preferred to use the\nCookies API because this is computationally less expensive.</p>",
        "name": "RemoveResponseCookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>HTTP request header name (case-insensitive).</p>",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>HTTP request header value (case-insensitive).</p>",
            "optional": true,
            "name": "value"
          }
        ],
        "comment": "<p>Removes all response headers of the specified names and values.</p>",
        "name": "RemoveResponseHeader"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Name of a cookie.</p>",
            "optional": true,
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Value of a cookie, may be padded in double-quotes.</p>",
            "optional": true,
            "name": "value"
          }
        ],
        "comment": "<p>A filter or specification of a cookie in HTTP Requests.</p>",
        "name": "RequestCookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Matches if the MIME media type of a response (from the HTTP Content-Type\nheader) is contained in the list.</p>",
            "optional": true,
            "name": "contentType"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Matches if the MIME media type of a response (from the HTTP Content-Type\nheader) is <em>not</em> contained in the list.</p>",
            "optional": true,
            "name": "excludeContentType"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "HeaderFilter",
              "referenceLink": "#type-HeaderFilter"
            },
            "comment": "<p>Matches if none of the request headers is matched by any of the\nHeaderFilters.</p>",
            "optional": true,
            "name": "excludeRequestHeaders"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "HeaderFilter",
              "referenceLink": "#type-HeaderFilter"
            },
            "comment": "<p>Matches if none of the response headers is matched by any of the\nHeaderFilters.</p>",
            "optional": true,
            "name": "excludeResponseHeaders"
          },
          {
            "type": "reference",
            "referenceType": "events.UrlFilter",
            "referenceLink": "../events/#type-UrlFilter",
            "comment": "<p>Matches if the conditions of the UrlFilter are fulfilled for the 'first\nparty' URL of the request. The 'first party' URL of a request, when present,\ncan be different from the request's target URL, and describes what is\nconsidered 'first party' for the sake of third-party checks for cookies.</p>",
            "deprecated": "Ignored since release 82.\n",
            "optional": true,
            "name": "firstPartyForCookiesUrl"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "HeaderFilter",
              "referenceLink": "#type-HeaderFilter"
            },
            "comment": "<p>Matches if some of the request headers is matched by one of the\nHeaderFilters.</p>",
            "optional": true,
            "name": "requestHeaders"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "webRequest.ResourceType",
              "referenceLink": "../webRequest/#type-ResourceType"
            },
            "comment": "<p>Matches if the request type of a request is contained in the list. Requests\nthat cannot match any of the types will be filtered out.</p>",
            "optional": true,
            "name": "resourceType"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "HeaderFilter",
              "referenceLink": "#type-HeaderFilter"
            },
            "comment": "<p>Matches if some of the response headers is matched by one of the\nHeaderFilters.</p>",
            "optional": true,
            "name": "responseHeaders"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "Stage",
              "referenceLink": "#type-Stage"
            },
            "comment": "<p>Contains a list of strings describing stages. Allowed values are\n'onBeforeRequest', 'onBeforeSendHeaders', 'onHeadersReceived',\n'onAuthRequired'. If this attribute is present, then it limits the applicable\nstages to those listed. Note that the whole condition is only applicable in\nstages compatible with all attributes.</p>",
            "optional": true,
            "name": "stages"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If set to true, matches requests that are subject to third-party cookie\npolicies. If set to false, matches all other requests.</p>",
            "deprecated": "Ignored since release 87.\n",
            "optional": true,
            "name": "thirdPartyForCookies"
          },
          {
            "type": "reference",
            "referenceType": "events.UrlFilter",
            "referenceLink": "../events/#type-UrlFilter",
            "comment": "<p>Matches if the conditions of the UrlFilter are fulfilled for the URL of the\nrequest.</p>",
            "optional": true,
            "name": "url"
          }
        ],
        "comment": "<p>Matches network events by various criteria.</p>",
        "name": "RequestMatcher"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Value of the Domain cookie attribute.</p>",
            "optional": true,
            "name": "domain"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Value of the Expires cookie attribute.</p>",
            "optional": true,
            "name": "expires"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Existence of the HttpOnly cookie attribute.</p>",
            "optional": true,
            "name": "httpOnly"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Value of the Max-Age cookie attribute</p>",
            "optional": true,
            "name": "maxAge"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Name of a cookie.</p>",
            "optional": true,
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Value of the Path cookie attribute.</p>",
            "optional": true,
            "name": "path"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Existence of the Secure cookie attribute.</p>",
            "optional": true,
            "name": "secure"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Value of a cookie, may be padded in double-quotes.</p>",
            "optional": true,
            "name": "value"
          }
        ],
        "comment": "<p>A specification of a cookie in HTTP Responses.</p>",
        "name": "ResponseCookie"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The value that will be passed in the <code>message</code> attribute of the\ndictionary that is passed to the event handler.</p>",
            "name": "message"
          }
        ],
        "comment": "<p>Triggers the <a href=\"#event-onMessage\"><code>onMessage</code></a> event.</p>",
        "name": "SendMessageToExtension"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>HTTP request header name.</p>",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>HTTP request header value.</p>",
            "name": "value"
          }
        ],
        "comment": "<p>Sets the request header of the specified name to the specified value. If a\nheader with the specified name did not exist before, a new one is created.\nHeader name comparison is always case-insensitive. Each request header name\noccurs only once in each request.</p>",
        "name": "SetRequestHeader"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"onBeforeRequest\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"onBeforeSendHeaders\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"onHeadersReceived\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"onAuthRequired\""
          }
        ],
        "name": "Stage"
      }
    ],
    "properties": [],
    "methods": [],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The value 0 indicates that the request happens in the main frame; a positive\nvalue indicates the ID of a subframe in which the request happens. If the\ndocument of a (sub-)frame is loaded (<code>type</code> is\n<code>main_frame</code> or <code>sub_frame</code>), <code>frameId</code>\nindicates the ID of this frame, not the ID of the outer frame. Frame IDs are\nunique within a tab.</p>",
                    "name": "frameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The message sent by the calling script.</p>",
                    "name": "message"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>Standard HTTP method.</p>",
                    "name": "method"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>ID of frame that wraps the frame which sent the request. Set to -1 if no\nparent frame exists.</p>",
                    "name": "parentFrameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The ID of the request. Request IDs are unique within a browser session. As a\nresult, they could be used to relate different events of the same request.</p>",
                    "name": "requestId"
                  },
                  {
                    "type": "reference",
                    "referenceType": "Stage",
                    "referenceLink": "#type-Stage",
                    "comment": "<p>The stage of the network request during which the event was triggered.</p>",
                    "name": "stage"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the request takes place. Set to -1 if the request\nisn't related to a tab.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when this signal is triggered, in milliseconds since the epoch.</p>",
                    "name": "timeStamp"
                  },
                  {
                    "type": "reference",
                    "referenceType": "webRequest.ResourceType",
                    "referenceLink": "../webRequest/#type-ResourceType",
                    "comment": "<p>How the requested resource will be used.</p>",
                    "name": "type"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a message is sent via <a href=\"#type-SendMessageToExtension\"><code>SendMessageToExtension</code></a> from an action of the\ndeclarative web request API.</p>",
        "name": "onMessage"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "name": "onRequest"
      }
    ],
    "channel": "beta",
    "source": "index.d.ts",
    "permissions": [
      "declarativeWebRequest\n"
    ]
  },
  {
    "name": "chrome.desktopCapture",
    "shortName": "desktopCapture",
    "comment": "<p>Desktop Capture API that can be used to capture content of screen, individual\nwindows or tabs.</p>",
    "types": [
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"screen\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"window\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"tab\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"audio\""
          }
        ],
        "comment": "<p>Enum used to define set of desktop media sources used in\nchooseDesktopMedia().</p>",
        "name": "DesktopCaptureSourceType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "desktopMediaRequestId",
            "comment": "<p>Id returned by chooseDesktopMedia()</p>"
          }
        ],
        "comment": "<p>Hides desktop media picker dialog shown by chooseDesktopMedia().</p>",
        "name": "cancelChooseDesktopMedia"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "DesktopCaptureSourceType",
              "referenceLink": "#type-DesktopCaptureSourceType"
            },
            "optional": false,
            "name": "sources",
            "comment": "<p>Set of sources that should be shown to the user. The sources order in the set decides the tab order in the picker.</p>"
          },
          {
            "type": "reference",
            "referenceType": "tabs.Tab",
            "referenceLink": "../tabs/#type-Tab",
            "optional": true,
            "name": "targetTab",
            "comment": "<p>Optional tab for which the stream is created. If not specified then the resulting stream can be used only by the calling extension. The stream can only be used by frames in the given tab whose security origin matches <code>tab.url</code>. The tab's origin must be a secure origin, e.g. HTTPS.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "streamId",
                "comment": "<p>An opaque string that can be passed to <code>getUserMedia()</code> API to generate media stream that corresponds to the source selected by the user. If user didn't select any source (i.e. canceled the prompt) then the callback is called with an empty <code>streamId</code>. The created <code>streamId</code> can be used only once and expires after a few seconds when it is not used.</p>"
              },
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>True if \"audio\" is included in parameter sources, and the end user does not\nuncheck the \"Share audio\" checkbox. Otherwise false, and in this case, one\nshould not ask for audio stream through getUserMedia call.</p>",
                    "name": "canRequestAudioTrack"
                  }
                ],
                "optional": false,
                "name": "options",
                "comment": "<p>Contains properties that describe the stream.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Shows desktop media picker UI with the specified set of sources.</p>",
        "returnType": {
          "type": "primitive",
          "primitiveType": "number",
          "name": "returns",
          "comment": "<p>An id that can be passed to cancelChooseDesktopMedia() in case the prompt need to be canceled.</p>"
        },
        "name": "chooseDesktopMedia"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "desktopCapture",
      "desktopCapturePrivate\n"
    ]
  },
  {
    "name": "chrome.devtools.inspectedWindow",
    "shortName": "devtools.inspectedWindow",
    "comment": "<p>Use the <code>chrome.devtools.inspectedWindow</code> API to interact with the\ninspected window: obtain the tab ID for the inspected page, evaluate the code\nin the context of the inspected window, reload the page, or obtain the list\nof resources within the page.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL of the resource.</p>",
            "name": "url"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "optional": false,
                    "name": "content",
                    "comment": "<p>Content of the resource (potentially encoded).</p>"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "optional": false,
                    "name": "encoding",
                    "comment": "<p>Empty if the content is not encoded, encoding name otherwise. Currently, only base64 is supported.</p>"
                  }
                ],
                "optional": false,
                "name": "callback",
                "comment": "<p>A function that receives resource content when the request completes.</p>"
              }
            ],
            "comment": "<p>Gets the content of the resource.</p>",
            "name": "getContent"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "content",
                "comment": "<p>New content of the resource. Only resources with the text type are currently supported.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "commit",
                "comment": "<p>True if the user has finished editing the resource, and the new content of the resource should be persisted; false if this is a minor change sent in progress of the user editing the resource.</p>"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "object",
                    "properties": [],
                    "optional": false,
                    "name": "error",
                    "comment": "<p>Set to undefined if the resource content was set successfully; describes error otherwise.</p>"
                  }
                ],
                "optional": false,
                "name": "callback",
                "comment": "<p>A function called upon request completion.</p>"
              }
            ],
            "comment": "<p>Sets the content of the resource.</p>",
            "name": "setContent"
          }
        ],
        "comment": "<p>A resource within the inspected page, such as a document, a script, or an\nimage.</p>",
        "name": "Resource"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "number",
        "comment": "<p>The ID of the tab being inspected. This ID may be used with chrome.tabs.*\nAPI.</p>",
        "name": "tabId"
      }
    ],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "expression",
            "comment": "<p>An expression to evaluate.</p>"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>Evaluate the expression in the context of a content script of an extension\nthat matches the specified origin. If given, contextSecurityOrigin overrides\nthe 'true' setting on userContentScriptContext.</p>",
                "optional": true,
                "name": "contextSecurityOrigin"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>If specified, the expression is evaluated on the iframe whose URL matches the\none specified. By default, the expression is evaluated in the top frame of\nthe inspected page.</p>",
                "optional": true,
                "name": "frameURL"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Evaluate the expression in the context of the content script of the calling\nextension, provided that the content script is already injected into the\ninspected page. If not, the expression is not evaluated and the callback is\ninvoked with the exception parameter set to an object that has the\n<code>isError</code> field set to true and the <code>code</code> field set to\n<code>E_NOTFOUND</code>.</p>",
                "optional": true,
                "name": "useContentScriptContext"
              }
            ],
            "optional": false,
            "name": "options",
            "comment": "<p>The options parameter can contain one or more options.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [],
                "optional": false,
                "name": "result",
                "comment": "<p>The result of evaluation.</p>"
              },
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>Set if the error occurred on the DevTools side before the expression is\nevaluated.</p>",
                    "name": "code"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>Set if the error occurred on the DevTools side before the expression is\nevaluated.</p>",
                    "name": "description"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "primitive",
                      "primitiveType": "any"
                    },
                    "comment": "<p>Set if the error occurred on the DevTools side before the expression is\nevaluated, contains the array of the values that may be substituted into the\ndescription string to provide more information about the cause of the error.</p>",
                    "name": "details"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>Set if the error occurred on the DevTools side before the expression is\nevaluated.</p>",
                    "name": "isError"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>Set if the evaluated code produces an unhandled exception.</p>",
                    "name": "isException"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>Set if the evaluated code produces an unhandled exception.</p>",
                    "name": "value"
                  }
                ],
                "optional": false,
                "name": "exceptionInfo",
                "comment": "<p>An object providing details if an exception occurred while evaluating the expression.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>A function called when evaluation completes.</p>"
          }
        ],
        "comment": "<p>Evaluates a JavaScript expression in the context of the main frame of the\ninspected page. The expression must evaluate to a JSON-compliant object,\notherwise an exception is thrown. The eval function can report either a\nDevTools-side error or a JavaScript exception that occurs during evaluation.\nIn either case, the <code>result</code> parameter of the callback is\n<code>undefined</code>. In the case of a DevTools-side error, the\n<code>isException</code> parameter is non-null and has <code>isError</code>\nset to true and <code>code</code> set to an error code. In the case of a\nJavaScript error, <code>isException</code> is set to true and\n<code>value</code> is set to the string value of thrown object.</p>",
        "name": "eval"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Resource",
                  "referenceLink": "#type-Resource"
                },
                "optional": false,
                "name": "resources",
                "comment": "<p>The resources within the page.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>A function that receives the list of resources when the request completes.</p>"
          }
        ],
        "comment": "<p>Retrieves the list of resources from the inspected page.</p>",
        "name": "getResources"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>When true, the loader will bypass the cache for all inspected page resources\nloaded before the <code>load</code> event is fired. The effect is similar to\npressing Ctrl+Shift+R in the inspected window or within the Developer Tools\nwindow.</p>",
                "optional": true,
                "name": "ignoreCache"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>If specified, the script will be injected into every frame of the inspected\npage immediately upon load, before any of the frame's scripts. The script\nwill not be injected after subsequent reloads&mdash;for example, if the user\npresses Ctrl+R.</p>",
                "optional": true,
                "name": "injectedScript"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>If specified, the string will override the value of the\n<code>User-Agent</code> HTTP header that's sent while loading the resources\nof the inspected page. The string will also override the value of the\n<code>navigator.userAgent</code> property that's returned to any scripts that\nare running within the inspected page.</p>",
                "optional": true,
                "name": "userAgent"
              }
            ],
            "optional": false,
            "name": "reloadOptions"
          }
        ],
        "comment": "<p>Reloads the inspected page.</p>",
        "name": "reload"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Resource",
                "referenceLink": "#type-Resource",
                "optional": false,
                "name": "resource"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a new resource is added to the inspected page.</p>",
        "name": "onResourceAdded"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Resource",
                "referenceLink": "#type-Resource",
                "optional": false,
                "name": "resource"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "content",
                "comment": "<p>New content of the resource.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a new revision of the resource is committed (e.g. user saves\nan edited version of the resource in the Developer Tools).</p>",
        "name": "onResourceContentCommitted"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.devtools.network",
    "shortName": "devtools.network",
    "comment": "<p>Use the <code>chrome.devtools.network</code> API to retrieve the information\nabout network requests displayed by the Developer Tools in the Network panel.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "optional": false,
                    "name": "content",
                    "comment": "<p>Content of the response body (potentially encoded).</p>"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "optional": false,
                    "name": "encoding",
                    "comment": "<p>Empty if content is not encoded, encoding name otherwise. Currently, only base64 is supported.</p>"
                  }
                ],
                "optional": false,
                "name": "callback",
                "comment": "<p>A function that receives the response body when the request completes.</p>"
              }
            ],
            "comment": "<p>Returns content of the response body.</p>",
            "name": "getContent"
          }
        ],
        "comment": "<p>Represents a network request for a document resource (script, image and so\non). See HAR Specification for reference.</p>",
        "name": "Request"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [],
                "optional": false,
                "name": "harLog",
                "comment": "<p>A HAR log. See HAR specification for details.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>A function that receives the HAR log when the request completes.</p>"
          }
        ],
        "comment": "<p>Returns HAR log that contains all known network requests.</p>",
        "name": "getHAR"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "url",
                "comment": "<p>URL of the new page.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the inspected window navigates to a new page.</p>",
        "name": "onNavigated"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Request",
                "referenceLink": "#type-Request",
                "optional": false,
                "name": "request",
                "comment": "<p>Description of a network request in the form of a HAR entry. See HAR specification for details.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a network request is finished and all request data are\navailable.</p>",
        "name": "onRequestFinished"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.devtools.panels",
    "shortName": "devtools.panels",
    "comment": "<p>Use the <code>chrome.devtools.panels</code> API to integrate your extension\ninto Developer Tools window UI: create your own panels, access existing\npanels, and add sidebars.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "events.Event",
            "referenceLink": "../events/#type-Event",
            "referenceTemplates": [
              {
                "type": "function",
                "parameters": [],
                "name": "listener"
              }
            ],
            "comment": "<p>Fired when the button is clicked.</p>",
            "name": "onClicked"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "iconPath",
                "comment": "<p>Path to the new icon of the button.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "tooltipText",
                "comment": "<p>Text shown as a tooltip when user hovers the mouse over the button.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "disabled",
                "comment": "<p>Whether the button is disabled.</p>"
              }
            ],
            "comment": "<p>Updates the attributes of the button. If some of the arguments are omitted or\n<code>null</code>, the corresponding attributes are not updated.</p>",
            "name": "update"
          }
        ],
        "comment": "<p>A button created by the extension.</p>",
        "name": "Button"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "events.Event",
            "referenceLink": "../events/#type-Event",
            "referenceTemplates": [
              {
                "type": "function",
                "parameters": [],
                "name": "listener"
              }
            ],
            "comment": "<p>Fired when an object is selected in the panel.</p>",
            "name": "onSelectionChanged"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "title",
                "comment": "<p>Text that is displayed in sidebar caption.</p>"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ExtensionSidebarPane",
                    "referenceLink": "#type-ExtensionSidebarPane",
                    "optional": false,
                    "name": "result",
                    "comment": "<p>An ExtensionSidebarPane object for created sidebar pane.</p>"
                  }
                ],
                "optional": false,
                "name": "callback",
                "comment": "<p>A callback invoked when the sidebar is created.</p>"
              }
            ],
            "comment": "<p>Creates a pane within panel's sidebar.</p>",
            "name": "createSidebarPane"
          }
        ],
        "comment": "<p>Represents the Elements panel.</p>",
        "name": "ElementsPanel"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "events.Event",
            "referenceLink": "../events/#type-Event",
            "referenceTemplates": [
              {
                "type": "function",
                "parameters": [],
                "name": "listener"
              }
            ],
            "comment": "<p>Fired when the user switches away from the panel.</p>",
            "name": "onHidden"
          },
          {
            "type": "reference",
            "referenceType": "events.Event",
            "referenceLink": "../events/#type-Event",
            "referenceTemplates": [
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "optional": false,
                    "name": "action",
                    "comment": "<p>Type of search action being performed.</p>"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "optional": false,
                    "name": "queryString",
                    "comment": "<p>Query string (only for 'performSearch').</p>"
                  }
                ],
                "name": "listener"
              }
            ],
            "comment": "<p>Fired upon a search action (start of a new search, search result\nnavigation, or search being canceled).</p>",
            "name": "onSearch"
          },
          {
            "type": "reference",
            "referenceType": "events.Event",
            "referenceLink": "../events/#type-Event",
            "referenceTemplates": [
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "chrome.global",
                    "optional": false,
                    "name": "window",
                    "comment": "<p>The JavaScript <code>window</code> object of panel's page.</p>"
                  }
                ],
                "name": "listener"
              }
            ],
            "comment": "<p>Fired when the user switches to the panel.</p>",
            "name": "onShown"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "iconPath",
                "comment": "<p>Path to the icon of the button. The file should contain a 64x24-pixel image composed of two 32x24 icons. The left icon is used when the button is inactive; the right icon is displayed when the button is pressed.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "tooltipText",
                "comment": "<p>Text shown as a tooltip when user hovers the mouse over the button.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "disabled",
                "comment": "<p>Whether the button is disabled.</p>"
              }
            ],
            "comment": "<p>Appends a button to the status bar of the panel.</p>",
            "returnType": {
              "type": "reference",
              "referenceType": "Button",
              "referenceLink": "#type-Button",
              "name": "returns"
            },
            "name": "createStatusBarButton"
          }
        ],
        "comment": "<p>Represents a panel created by extension.</p>",
        "name": "ExtensionPanel"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "events.Event",
            "referenceLink": "../events/#type-Event",
            "referenceTemplates": [
              {
                "type": "function",
                "parameters": [],
                "name": "listener"
              }
            ],
            "comment": "<p>Fired when the sidebar pane becomes hidden as a result of the user\nswitching away from the panel that hosts the sidebar pane.</p>",
            "name": "onHidden"
          },
          {
            "type": "reference",
            "referenceType": "events.Event",
            "referenceLink": "../events/#type-Event",
            "referenceTemplates": [
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "chrome.global",
                    "optional": false,
                    "name": "window",
                    "comment": "<p>The JavaScript <code>window</code> object of the sidebar page, if one was set with the <code>setPage()</code> method.</p>"
                  }
                ],
                "name": "listener"
              }
            ],
            "comment": "<p>Fired when the sidebar pane becomes visible as a result of user\nswitching to the panel that hosts it.</p>",
            "name": "onShown"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "expression",
                "comment": "<p>An expression to be evaluated in context of the inspected page. JavaScript objects and DOM nodes are displayed in an expandable tree similar to the console/watch.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "rootTitle",
                "comment": "<p>An optional title for the root of the expression tree.</p>"
              },
              {
                "type": "function",
                "parameters": [],
                "optional": false,
                "name": "callback",
                "comment": "<p>A callback invoked after the sidebar pane is updated with the expression evaluation results.</p>"
              }
            ],
            "comment": "<p>Sets an expression that is evaluated within the inspected page. The result is\ndisplayed in the sidebar pane.</p>",
            "name": "setExpression"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "height",
                "comment": "<p>A CSS-like size specification, such as <code>'100px'</code> or <code>'12ex'</code>.</p>"
              }
            ],
            "comment": "<p>Sets the height of the sidebar.</p>",
            "name": "setHeight"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "jsonObject",
                "comment": "<p>An object to be displayed in context of the inspected page. Evaluated in the context of the caller (API client).</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "rootTitle",
                "comment": "<p>An optional title for the root of the expression tree.</p>"
              },
              {
                "type": "function",
                "parameters": [],
                "optional": false,
                "name": "callback",
                "comment": "<p>A callback invoked after the sidebar is updated with the object.</p>"
              }
            ],
            "comment": "<p>Sets a JSON-compliant object to be displayed in the sidebar pane.</p>",
            "name": "setObject"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "path",
                "comment": "<p>Relative path of an extension page to display within the sidebar.</p>"
              }
            ],
            "comment": "<p>Sets an HTML page to be displayed in the sidebar pane.</p>",
            "name": "setPage"
          }
        ],
        "comment": "<p>A sidebar created by the extension.</p>",
        "name": "ExtensionSidebarPane"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "events.Event",
            "referenceLink": "../events/#type-Event",
            "referenceTemplates": [
              {
                "type": "function",
                "parameters": [],
                "name": "listener"
              }
            ],
            "comment": "<p>Fired when an object is selected in the panel.</p>",
            "name": "onSelectionChanged"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "title",
                "comment": "<p>Text that is displayed in sidebar caption.</p>"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ExtensionSidebarPane",
                    "referenceLink": "#type-ExtensionSidebarPane",
                    "optional": false,
                    "name": "result",
                    "comment": "<p>An ExtensionSidebarPane object for created sidebar pane.</p>"
                  }
                ],
                "optional": false,
                "name": "callback",
                "comment": "<p>A callback invoked when the sidebar is created.</p>"
              }
            ],
            "comment": "<p>Creates a pane within panel's sidebar.</p>",
            "name": "createSidebarPane"
          }
        ],
        "comment": "<p>Represents the Sources panel.</p>",
        "name": "SourcesPanel"
      }
    ],
    "properties": [
      {
        "type": "reference",
        "referenceType": "ElementsPanel",
        "referenceLink": "#type-ElementsPanel",
        "comment": "<p>Elements panel.</p>",
        "name": "elements"
      },
      {
        "type": "reference",
        "referenceType": "SourcesPanel",
        "referenceLink": "#type-SourcesPanel",
        "comment": "<p>Sources panel.</p>",
        "name": "sources"
      },
      {
        "type": "primitive",
        "primitiveType": "string",
        "comment": "<p>The name of the color theme set in user's DevTools settings. Possible values:\n<code>default</code> (the default) and <code>dark</code>.</p>",
        "name": "themeName"
      }
    ],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "title",
            "comment": "<p>Title that is displayed next to the extension icon in the Developer Tools toolbar.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "iconPath",
            "comment": "<p>Path of the panel's icon relative to the extension directory.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "pagePath",
            "comment": "<p>Path of the panel's HTML page relative to the extension directory.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ExtensionPanel",
                "referenceLink": "#type-ExtensionPanel",
                "optional": false,
                "name": "panel",
                "comment": "<p>An ExtensionPanel object representing the created panel.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>A function that is called when the panel is created.</p>"
          }
        ],
        "comment": "<p>Creates an extension panel.</p>",
        "name": "create"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "url",
            "comment": "<p>The URL of the resource to open.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "lineNumber",
            "comment": "<p>Specifies the line number to scroll to when the resource is loaded.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>A function that is called when the resource has been successfully loaded.</p>"
          }
        ],
        "comment": "<p>Requests DevTools to open a URL in a Developer Tools panel.</p>",
        "name": "openResource"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "devtools.inspectedWindow.Resource",
                "referenceLink": "../devtools_inspectedWindow/#type-Resource",
                "optional": false,
                "name": "resource",
                "comment": "<p>A <a href=\"../devtools_inspectedWindow/#type-Resource\"><code>devtools.inspectedWindow.Resource</code></a> object for the resource that was clicked.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>A function that is called when the user clicks on a valid resource link in Developer Tools window. Note that if the user clicks an invalid URL or an XHR, this function is not called.</p>"
          }
        ],
        "comment": "<p>Specifies the function to be called when the user clicks a resource link in\nthe Developer Tools window. To unset the handler, either call the method with\nno parameters or pass null as the parameter.</p>",
        "name": "setOpenResourceHandler"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.diagnostics",
    "shortName": "diagnostics",
    "comment": "<p>Use the <code>chrome.diagnostics</code> API to query various properties of\nthe environment that may be useful for diagnostics.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Target IP address.</p>",
            "name": "ip"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Size of the payload. If omitted, the system default value will be used.</p>",
            "optional": true,
            "name": "size"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Packet timeout in seconds. If omitted, the system default value will be used.</p>",
            "optional": true,
            "name": "timeout"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Packet time to live value. If omitted, the system default value will be used.</p>",
            "optional": true,
            "name": "ttl"
          }
        ],
        "name": "SendPacketOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The IP of the host which we receives the ICMP reply from. The IP may differs\nfrom our target IP if the packet's ttl is used up.</p>",
            "name": "ip"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Latency in millisenconds.</p>",
            "name": "latency"
          }
        ],
        "name": "SendPacketResult"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "SendPacketOptions",
            "referenceLink": "#type-SendPacketOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "SendPacketResult",
                "referenceLink": "#type-SendPacketResult",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Send a packet of the given type with the given parameters.</p>",
        "name": "sendPacket"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "platform_app.d.ts",
    "permissions": [
      "diagnostics\n"
    ]
  },
  {
    "name": "chrome.dns",
    "shortName": "dns",
    "comment": "<p>Use the <code>chrome.dns</code> API for dns resolution.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A string representing the IP address literal. Supplied only if resultCode\nindicates success. Note that we presently return only IPv4 addresses.</p>",
            "optional": true,
            "name": "address"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The result code. Zero indicates success.</p>",
            "name": "resultCode"
          }
        ],
        "name": "ResolveCallbackResolveInfo"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "hostname",
            "comment": "<p>The hostname to resolve.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ResolveCallbackResolveInfo",
                "referenceLink": "#type-ResolveCallbackResolveInfo",
                "optional": false,
                "name": "resolveInfo"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the resolution operation completes.</p>"
          }
        ],
        "comment": "<p>Resolves the given hostname or IP address literal.</p>",
        "name": "resolve"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "dns\n"
    ]
  },
  {
    "name": "chrome.documentScan",
    "shortName": "documentScan",
    "comment": "<p>Use the <code>chrome.documentScan</code> API to discover and retrieve\nimages\nfrom attached paper document scanners.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of scanned images allowed (defaults to 1).</p>",
            "optional": true,
            "name": "maxImages"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The MIME types that are accepted by the caller.</p>",
            "optional": true,
            "name": "mimeTypes"
          }
        ],
        "name": "ScanOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The data image URLs in a form that can be passed as the \"src\" value to an\nimage tag.</p>",
            "name": "dataUrls"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The MIME type of <code>dataUrls</code>.</p>",
            "name": "mimeType"
          }
        ],
        "name": "ScanResults"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ScanOptions",
            "referenceLink": "#type-ScanOptions",
            "optional": false,
            "name": "options",
            "comment": "<p>Object containing scan parameters.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ScanResults",
                "referenceLink": "#type-ScanResults",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the result and data from the scan.</p>"
          }
        ],
        "comment": "<p>Performs a document scan.  On success, the PNG data will be sent to the\ncallback.</p>",
        "name": "scan"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "documentScan\n"
    ],
    "platforms": [
      "chromeos"
    ]
  },
  {
    "name": "chrome.dom",
    "shortName": "dom",
    "comment": "<p>Use the <code>chrome.dom</code> API to access special DOM APIs for Extensions</p>",
    "types": [],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "HTMLElement",
            "optional": false,
            "name": "element"
          }
        ],
        "comment": "<p>Gets the open shadow root or the closed shadow root hosted by the specified\nelement. If the element doesn't attach the shadow root, it will return null.</p>",
        "returnType": {
          "type": "object",
          "properties": [],
          "name": "returns",
          "comment": "<p>See <a href='https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot'>https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot</a></p>"
        },
        "name": "openOrClosedShadowRoot"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.downloads",
    "shortName": "downloads",
    "comment": "<p>Use the <code>chrome.downloads</code> API to programmatically initiate,\nmonitor, manipulate, and search for downloads.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": true,
            "name": "current"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": true,
            "name": "previous"
          }
        ],
        "name": "BooleanDelta"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "current"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "previous"
          }
        ],
        "name": "DoubleDelta"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "BooleanDelta",
            "referenceLink": "#type-BooleanDelta",
            "comment": "<p>The change in <code>canResume</code>, if any.</p>",
            "optional": true,
            "name": "canResume"
          },
          {
            "type": "reference",
            "referenceType": "StringDelta",
            "referenceLink": "#type-StringDelta",
            "comment": "<p>The change in <code>danger</code>, if any.</p>",
            "optional": true,
            "name": "danger"
          },
          {
            "type": "reference",
            "referenceType": "StringDelta",
            "referenceLink": "#type-StringDelta",
            "comment": "<p>The change in <code>endTime</code>, if any.</p>",
            "optional": true,
            "name": "endTime"
          },
          {
            "type": "reference",
            "referenceType": "StringDelta",
            "referenceLink": "#type-StringDelta",
            "comment": "<p>The change in <code>error</code>, if any.</p>",
            "optional": true,
            "name": "error"
          },
          {
            "type": "reference",
            "referenceType": "BooleanDelta",
            "referenceLink": "#type-BooleanDelta",
            "comment": "<p>The change in <code>exists</code>, if any.</p>",
            "optional": true,
            "name": "exists"
          },
          {
            "type": "reference",
            "referenceType": "DoubleDelta",
            "referenceLink": "#type-DoubleDelta",
            "comment": "<p>The change in <code>fileSize</code>, if any.</p>",
            "optional": true,
            "name": "fileSize"
          },
          {
            "type": "reference",
            "referenceType": "StringDelta",
            "referenceLink": "#type-StringDelta",
            "comment": "<p>The change in <code>filename</code>, if any.</p>",
            "optional": true,
            "name": "filename"
          },
          {
            "type": "reference",
            "referenceType": "StringDelta",
            "referenceLink": "#type-StringDelta",
            "comment": "<p>The change in <code>finalUrl</code>, if any.</p>",
            "optional": true,
            "name": "finalUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The <code>id</code> of the <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> that changed.</p>",
            "name": "id"
          },
          {
            "type": "reference",
            "referenceType": "StringDelta",
            "referenceLink": "#type-StringDelta",
            "comment": "<p>The change in <code>mime</code>, if any.</p>",
            "optional": true,
            "name": "mime"
          },
          {
            "type": "reference",
            "referenceType": "BooleanDelta",
            "referenceLink": "#type-BooleanDelta",
            "comment": "<p>The change in <code>paused</code>, if any.</p>",
            "optional": true,
            "name": "paused"
          },
          {
            "type": "reference",
            "referenceType": "StringDelta",
            "referenceLink": "#type-StringDelta",
            "comment": "<p>The change in <code>startTime</code>, if any.</p>",
            "optional": true,
            "name": "startTime"
          },
          {
            "type": "reference",
            "referenceType": "StringDelta",
            "referenceLink": "#type-StringDelta",
            "comment": "<p>The change in <code>state</code>, if any.</p>",
            "optional": true,
            "name": "state"
          },
          {
            "type": "reference",
            "referenceType": "DoubleDelta",
            "referenceLink": "#type-DoubleDelta",
            "comment": "<p>The change in <code>totalBytes</code>, if any.</p>",
            "optional": true,
            "name": "totalBytes"
          },
          {
            "type": "reference",
            "referenceType": "StringDelta",
            "referenceLink": "#type-StringDelta",
            "comment": "<p>The change in <code>url</code>, if any.</p>",
            "optional": true,
            "name": "url"
          }
        ],
        "name": "DownloadDelta"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier for the extension that initiated this download if this\ndownload was initiated by an extension. Does not change once it is set.</p>",
            "optional": true,
            "name": "byExtensionId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The localized name of the extension that initiated this download if this\ndownload was initiated by an extension. May change if the extension changes\nits name or if the user changes their locale.</p>",
            "optional": true,
            "name": "byExtensionName"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Number of bytes received so far from the host, without considering file\ncompression.</p>",
            "name": "bytesReceived"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if the download is in progress and paused, or else if it is interrupted\nand can be resumed starting from where it was interrupted.</p>",
            "name": "canResume"
          },
          {
            "type": "reference",
            "referenceType": "DangerType",
            "referenceLink": "#type-DangerType",
            "comment": "<p>Indication of whether this download is thought to be safe or known to be\nsuspicious.</p>",
            "name": "danger"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The time when the download ended in ISO 8601 format. May be passed directly\nto the Date constructor: <code>chrome.downloads.search({},\nfunction(items){items.forEach(function(item){if (item.endTime)\nconsole.log(new Date(item.endTime))})})</code></p>",
            "optional": true,
            "name": "endTime"
          },
          {
            "type": "reference",
            "referenceType": "InterruptReason",
            "referenceLink": "#type-InterruptReason",
            "comment": "<p>Why the download was interrupted. Several kinds of HTTP errors may be grouped\nunder one of the errors beginning with <code>SERVER_</code>. Errors relating\nto the network begin with <code>NETWORK_</code>, errors relating to the\nprocess of writing the file to the file system begin with <code>FILE_</code>,\nand interruptions initiated by the user begin with <code>USER_</code>.</p>",
            "optional": true,
            "name": "error"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Estimated time when the download will complete in ISO 8601 format. May be\npassed directly to the Date constructor: <code>chrome.downloads.search({},\nfunction(items){items.forEach(function(item){if (item.estimatedEndTime)\nconsole.log(new Date(item.estimatedEndTime))})})</code></p>",
            "optional": true,
            "name": "estimatedEndTime"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the downloaded file still exists. This information may be out of date\nbecause Chrome does not automatically watch for file removal. Call <a href=\"#method-search\"><code>search</code></a>() in order to trigger the check for file existence. When the\nexistence check completes, if the file has been deleted, then an <a href=\"#event-onChanged\"><code>onChanged</code></a> event will fire. Note that <a href=\"#method-search\"><code>search</code></a>() does not wait for the\nexistence check to finish before returning, so results from <a href=\"#method-search\"><code>search</code></a>()\nmay not accurately reflect the file system. Also, <a href=\"#method-search\"><code>search</code></a>() may be\ncalled as often as necessary, but will not check for file existence any more\nfrequently than once every 10 seconds.</p>",
            "name": "exists"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Number of bytes in the whole file post-decompression, or -1 if unknown.</p>",
            "name": "fileSize"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Absolute local path.</p>",
            "name": "filename"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The absolute URL that this download is being made from, after all redirects.</p>",
            "name": "finalUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>An identifier that is persistent across browser sessions.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>False if this download is recorded in the history, true if it is not\nrecorded.</p>",
            "name": "incognito"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The file's MIME type.</p>",
            "name": "mime"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if the download has stopped reading data from the host, but kept the\nconnection open.</p>",
            "name": "paused"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Absolute URL.</p>",
            "name": "referrer"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The time when the download began in ISO 8601 format. May be passed directly\nto the Date constructor: <code>chrome.downloads.search({},\nfunction(items){items.forEach(function(item){console.log(new\nDate(item.startTime))})})</code></p>",
            "name": "startTime"
          },
          {
            "type": "reference",
            "referenceType": "State",
            "referenceLink": "#type-State",
            "comment": "<p>Indicates whether the download is progressing, interrupted, or complete.</p>",
            "name": "state"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Number of bytes in the whole file, without considering file compression, or\n-1 if unknown.</p>",
            "name": "totalBytes"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The absolute URL that this download initiated from, before any redirects.</p>",
            "name": "url"
          }
        ],
        "name": "DownloadItem"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Post body.</p>",
            "optional": true,
            "name": "body"
          },
          {
            "type": "reference",
            "referenceType": "FilenameConflictAction",
            "referenceLink": "#type-FilenameConflictAction",
            "comment": "<p>The action to take if <code>filename</code> already exists.</p>",
            "optional": true,
            "name": "conflictAction"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A file path relative to the Downloads directory to contain the downloaded\nfile, possibly containing subdirectories. Absolute paths, empty paths, and\npaths containing back-references \"..\" will cause an error. <a href=\"#event-onDeterminingFilename\"><code>onDeterminingFilename</code></a> allows suggesting a filename after the file's MIME\ntype and a tentative filename have been determined.</p>",
            "optional": true,
            "name": "filename"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "HeaderNameValuePair",
              "referenceLink": "#type-HeaderNameValuePair"
            },
            "comment": "<p>Extra HTTP headers to send with the request if the URL uses the HTTP[s]\nprotocol. Each header is represented as a dictionary containing the keys\n<code>name</code> and either <code>value</code> or <code>binaryValue</code>,\nrestricted to those allowed by XMLHttpRequest.</p>",
            "optional": true,
            "name": "headers"
          },
          {
            "type": "reference",
            "referenceType": "HttpMethod",
            "referenceLink": "#type-HttpMethod",
            "comment": "<p>The HTTP method to use if the URL uses the HTTP[S] protocol.</p>",
            "optional": true,
            "name": "method"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Use a file-chooser to allow the user to select a filename regardless of\nwhether <code>filename</code> is set or already exists.</p>",
            "optional": true,
            "name": "saveAs"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL to download.</p>",
            "name": "url"
          }
        ],
        "name": "DownloadOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Number of bytes received so far from the host, without considering file\ncompression.</p>",
            "optional": true,
            "name": "bytesReceived"
          },
          {
            "type": "reference",
            "referenceType": "DangerType",
            "referenceLink": "#type-DangerType",
            "comment": "<p>Indication of whether this download is thought to be safe or known to be\nsuspicious.</p>",
            "optional": true,
            "name": "danger"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The time when the download ended in ISO 8601 format.</p>",
            "optional": true,
            "name": "endTime"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Limits results to <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> that ended after the given ms since\nthe epoch.</p>",
            "optional": true,
            "name": "endedAfter"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Limits results to <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> that ended before the given ms since\nthe epoch.</p>",
            "optional": true,
            "name": "endedBefore"
          },
          {
            "type": "reference",
            "referenceType": "InterruptReason",
            "referenceLink": "#type-InterruptReason",
            "comment": "<p>Why a download was interrupted.</p>",
            "optional": true,
            "name": "error"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the downloaded file exists;</p>",
            "optional": true,
            "name": "exists"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Number of bytes in the whole file post-decompression, or -1 if unknown.</p>",
            "optional": true,
            "name": "fileSize"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Absolute local path.</p>",
            "optional": true,
            "name": "filename"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Limits results to <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> whose <code>filename</code> matches\nthe given regular expression.</p>",
            "optional": true,
            "name": "filenameRegex"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The absolute URL that this download is being made from, after all redirects.</p>",
            "optional": true,
            "name": "finalUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Limits results to <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> whose <code>finalUrl</code> matches\nthe given regular expression.</p>",
            "optional": true,
            "name": "finalUrlRegex"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The <code>id</code> of the <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> to query.</p>",
            "optional": true,
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The maximum number of matching <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> returned. Defaults to\n1000. Set to 0 in order to return all matching <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a>. See\n<a href=\"#method-search\"><code>search</code></a> for how to page through results.</p>",
            "optional": true,
            "name": "limit"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The file's MIME type.</p>",
            "optional": true,
            "name": "mime"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Set elements of this array to <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> properties in order to\nsort search results. For example, setting <code>orderBy=['startTime']</code>\nsorts the <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> by their start time in ascending order. To\nspecify descending order, prefix with a hyphen: '-startTime'.</p>",
            "optional": true,
            "name": "orderBy"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if the download has stopped reading data from the host, but kept the\nconnection open.</p>",
            "optional": true,
            "name": "paused"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>This array of search terms limits results to <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> whose\n<code>filename</code> or <code>url</code> or <code>finalUrl</code> contain\nall of the search terms that do not begin with a dash '-' and none of the\nsearch terms that do begin with a dash.</p>",
            "optional": true,
            "name": "query"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The time when the download began in ISO 8601 format.</p>",
            "optional": true,
            "name": "startTime"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Limits results to <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> that started after the given ms since\nthe epoch.</p>",
            "optional": true,
            "name": "startedAfter"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Limits results to <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> that started before the given ms since\nthe epoch.</p>",
            "optional": true,
            "name": "startedBefore"
          },
          {
            "type": "reference",
            "referenceType": "State",
            "referenceLink": "#type-State",
            "comment": "<p>Indicates whether the download is progressing, interrupted, or complete.</p>",
            "optional": true,
            "name": "state"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Number of bytes in the whole file, without considering file compression, or\n-1 if unknown.</p>",
            "optional": true,
            "name": "totalBytes"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Limits results to <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> whose <code>totalBytes</code> is\ngreater than the given integer.</p>",
            "optional": true,
            "name": "totalBytesGreater"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Limits results to <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> whose <code>totalBytes</code> is less\nthan the given integer.</p>",
            "optional": true,
            "name": "totalBytesLess"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The absolute URL that this download initiated from, before any redirects.</p>",
            "optional": true,
            "name": "url"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Limits results to <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> whose <code>url</code> matches the\ngiven regular expression.</p>",
            "optional": true,
            "name": "urlRegex"
          }
        ],
        "name": "DownloadQuery"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "FilenameConflictAction",
            "referenceLink": "#type-FilenameConflictAction",
            "comment": "<p>The action to take if <code>filename</code> already exists.</p>",
            "optional": true,
            "name": "conflictAction"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a>'s new target <a href=\"#type-DownloadItem-filename\"><code>DownloadItem.filename</code></a>, as a\npath relative to the user's default Downloads directory, possibly containing\nsubdirectories. Absolute paths, empty paths, and paths containing\nback-references \"..\" will be ignored. <code>filename</code> is ignored if\nthere are any <a href=\"#event-onDeterminingFilename\"><code>onDeterminingFilename</code></a> listeners registered by any\nextensions.</p>",
            "name": "filename"
          }
        ],
        "name": "FilenameSuggestion"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The size of the returned icon. The icon will be square with dimensions size *\nsize pixels. The default and largest size for the icon is 32x32 pixels. The\nonly supported sizes are 16 and 32. It is an error to specify any other size.</p>",
            "optional": true,
            "name": "size"
          }
        ],
        "name": "GetFileIconOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Name of the HTTP header.</p>",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Value of the HTTP header.</p>",
            "name": "value"
          }
        ],
        "name": "HeaderNameValuePair"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "current"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "previous"
          }
        ],
        "name": "StringDelta"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"file\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"url\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"content\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"uncommon\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"host\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"unwanted\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"safe\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"accepted\""
          }
        ],
        "comment": "<p><dl><dt>file</dt>     <dd>The download's filename is suspicious.</dd>\n<dt>url</dt>     <dd>The download's URL is known to be malicious.</dd>\n<dt>content</dt>     <dd>The downloaded file is known to be malicious.</dd>\n<dt>uncommon</dt>     <dd>The download's URL is not commonly downloaded and\ncould be     dangerous.</dd>     <dt>host</dt>     <dd>The download came from\na host known to distribute malicious     binaries and is likely\ndangerous.</dd>     <dt>unwanted</dt>     <dd>The download is potentially\nunwanted or unsafe. E.g. it could make     changes to browser or computer\nsettings.</dd>     <dt>safe</dt>     <dd>The download presents no known\ndanger to the user's computer.</dd>     <dt>accepted</dt>     <dd>The user\nhas accepted the dangerous download.</dd> </dl></p>",
        "name": "DangerType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"uniquify\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"overwrite\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"prompt\""
          }
        ],
        "comment": "<p><dl><dt>uniquify</dt>     <dd>To avoid duplication, the <code>filename</code>\nis changed to     include a counter before the filename extension.</dd>\n<dt>overwrite</dt>     <dd>The existing file will be overwritten with the new\nfile.</dd>     <dt>prompt</dt>     <dd>The user will be prompted with a file\nchooser dialog.</dd> </dl></p>",
        "name": "FilenameConflictAction"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"GET\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"POST\""
          }
        ],
        "name": "HttpMethod"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"FILE_FAILED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"FILE_ACCESS_DENIED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"FILE_NO_SPACE\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"FILE_NAME_TOO_LONG\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"FILE_TOO_LARGE\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"FILE_VIRUS_INFECTED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"FILE_TRANSIENT_ERROR\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"FILE_BLOCKED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"FILE_SECURITY_CHECK_FAILED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"FILE_TOO_SHORT\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"FILE_HASH_MISMATCH\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"FILE_SAME_AS_SOURCE\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"NETWORK_FAILED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"NETWORK_TIMEOUT\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"NETWORK_DISCONNECTED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"NETWORK_SERVER_DOWN\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"NETWORK_INVALID_REQUEST\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"SERVER_FAILED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"SERVER_NO_RANGE\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"SERVER_BAD_CONTENT\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"SERVER_UNAUTHORIZED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"SERVER_CERT_PROBLEM\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"SERVER_FORBIDDEN\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"SERVER_UNREACHABLE\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"SERVER_CONTENT_LENGTH_MISMATCH\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"SERVER_CROSS_ORIGIN_REDIRECT\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"USER_CANCELED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"USER_SHUTDOWN\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"CRASH\""
          }
        ],
        "name": "InterruptReason"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"in_progress\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"interrupted\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"complete\""
          }
        ],
        "comment": "<p><dl><dt>in_progress</dt>     <dd>The download is currently receiving data\nfrom the server.</dd>     <dt>interrupted</dt>     <dd>An error broke the\nconnection with the file host.</dd>     <dt>complete</dt>     <dd>The\ndownload completed successfully.</dd> </dl></p>",
        "name": "State"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "downloadId",
            "comment": "<p>The identifier for the <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a>.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the danger prompt dialog closes.</p>"
          }
        ],
        "comment": "<p>Prompt the user to accept a dangerous download. Can only be called from a\nvisible context (tab, window, or page/browser action popup). Does not\nautomatically accept dangerous downloads. If the download is accepted, then\nan <a href=\"#event-onChanged\"><code>onChanged</code></a> event will fire, otherwise nothing will happen. When all\nthe data is fetched into a temporary file and either the download is not\ndangerous or the danger has been accepted, then the temporary file is renamed\nto the target filename, the |state| changes to 'complete', and <a href=\"#event-onChanged\"><code>onChanged</code></a> fires.</p>",
        "name": "acceptDanger"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "downloadId",
            "comment": "<p>The id of the download to cancel.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the cancel request is completed.</p>"
          }
        ],
        "comment": "<p>Cancel a download. When <code>callback</code> is run, the download is\ncancelled, completed, interrupted or doesn't exist anymore.</p>",
        "name": "cancel"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "DownloadOptions",
            "referenceLink": "#type-DownloadOptions",
            "optional": false,
            "name": "options",
            "comment": "<p>What to download and how.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "downloadId"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the id of the new <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a>.</p>"
          }
        ],
        "comment": "<p>Download a URL. If the URL uses the HTTP[S] protocol, then the request will\ninclude all cookies currently set for its hostname. If both\n<code>filename</code> and <code>saveAs</code> are specified, then the Save As\ndialog will be displayed, pre-populated with the specified\n<code>filename</code>. If the download started successfully,\n<code>callback</code> will be called with the new <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a>'s\n<code>downloadId</code>. If there was an error starting the download, then\n<code>callback</code> will be called with <code>downloadId=undefined</code>\nand <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will contain a descriptive string. The error\nstrings are not guaranteed to remain backwards compatible between releases.\nExtensions must not parse it.</p>",
        "name": "download"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "DownloadQuery",
            "referenceLink": "#type-DownloadQuery",
            "optional": false,
            "name": "query"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "number"
                },
                "optional": false,
                "name": "erasedIds"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Erase matching <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> from history without deleting the\ndownloaded file. An <a href=\"#event-onErased\"><code>onErased</code></a> event will fire for each <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> that matches <code>query</code>, then <code>callback</code>\nwill be called.</p>",
        "name": "erase"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "downloadId",
            "comment": "<p>The identifier for the download.</p>"
          },
          {
            "type": "reference",
            "referenceType": "GetFileIconOptions",
            "referenceLink": "#type-GetFileIconOptions",
            "optional": true,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "iconURL"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>A URL to an image that represents the download.</p>"
          }
        ],
        "comment": "<p>Retrieve an icon for the specified download. For new downloads, file icons\nare available after the <a href=\"#event-onCreated\"><code>onCreated</code></a> event has been received. The image\nreturned by this function while a download is in progress may be different\nfrom the image returned after the download is complete. Icon retrieval is\ndone by querying the underlying operating system or toolkit depending on the\nplatform. The icon that is returned will therefore depend on a number of\nfactors including state of the download, platform, registered file types and\nvisual theme. If a file icon cannot be determined, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a>\nwill contain an error message.</p>",
        "name": "getFileIcon"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "downloadId",
            "comment": "<p>The identifier for the downloaded file.</p>"
          }
        ],
        "comment": "<p>Open the downloaded file now if the <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> is complete;\notherwise returns an error through <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a>. Requires the\n<code>\"downloads.open\"</code> permission in addition to the\n<code>\"downloads\"</code> permission. An <a href=\"#event-onChanged\"><code>onChanged</code></a> event will fire\nwhen the item is opened for the first time.</p>",
        "name": "open"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "downloadId",
            "comment": "<p>The id of the download to pause.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the pause request is completed.</p>"
          }
        ],
        "comment": "<p>Pause the download. If the request was successful the download is in a paused\nstate. Otherwise <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> contains an error message. The\nrequest will fail if the download is not active.</p>",
        "name": "pause"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "downloadId"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Remove the downloaded file if it exists and the <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> is\ncomplete; otherwise return an error through <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a>.</p>",
        "name": "removeFile"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "downloadId",
            "comment": "<p>The id of the download to resume.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the resume request is completed.</p>"
          }
        ],
        "comment": "<p>Resume a paused download. If the request was successful the download is in\nprogress and unpaused. Otherwise <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> contains an error\nmessage. The request will fail if the download is not active.</p>",
        "name": "resume"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "DownloadQuery",
            "referenceLink": "#type-DownloadQuery",
            "optional": false,
            "name": "query"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "DownloadItem",
                  "referenceLink": "#type-DownloadItem"
                },
                "optional": false,
                "name": "results"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Find <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a>. Set <code>query</code> to the empty object to get\nall <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a>. To get a specific <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a>, set only\nthe <code>id</code> field. To page through a large number of items, set\n<code>orderBy: ['-startTime']</code>, set <code>limit</code> to the number of\nitems per page, and set <code>startedAfter</code> to the\n<code>startTime</code> of the last item from the last page.</p>",
        "name": "search"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "enabled"
          }
        ],
        "comment": "<p>Enable or disable the gray shelf at the bottom of every window associated\nwith the current browser profile. The shelf will be disabled as long as at\nleast one extension has disabled it. Enabling the shelf while at least one\nother extension has disabled it will return an error through <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a>. Requires the <code>\"downloads.shelf\"</code> permission in\naddition to the <code>\"downloads\"</code> permission.</p>",
        "name": "setShelfEnabled"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "downloadId",
            "comment": "<p>The identifier for the downloaded file.</p>"
          }
        ],
        "comment": "<p>Show the downloaded file in its folder in a file manager.</p>",
        "name": "show"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Show the default Downloads folder in a file manager.</p>",
        "name": "showDefaultFolder"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "DownloadDelta",
                "referenceLink": "#type-DownloadDelta",
                "optional": false,
                "name": "downloadDelta"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>When any of a <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a>'s properties except\n<code>bytesReceived</code> and <code>estimatedEndTime</code> changes,\nthis event fires with the <code>downloadId</code> and an object\ncontaining the properties that changed.</p>",
        "name": "onChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "DownloadItem",
                "referenceLink": "#type-DownloadItem",
                "optional": false,
                "name": "downloadItem"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>This event fires with the <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> object when a download\nbegins.</p>",
        "name": "onCreated"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "DownloadItem",
                "referenceLink": "#type-DownloadItem",
                "optional": false,
                "name": "downloadItem"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "FilenameSuggestion",
                    "referenceLink": "#type-FilenameSuggestion",
                    "optional": false,
                    "name": "suggestion"
                  }
                ],
                "optional": false,
                "name": "suggest"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>During the filename determination process, extensions will be given the\nopportunity to override the target <a href=\"#type-DownloadItem-filename\"><code>DownloadItem.filename</code></a>. Each\nextension may not register more than one listener for this event. Each\nlistener must call <code>suggest</code> exactly once, either\nsynchronously or asynchronously. If the listener calls\n<code>suggest</code> asynchronously, then it must return\n<code>true</code>. If the listener neither calls <code>suggest</code>\nsynchronously nor returns <code>true</code>, then <code>suggest</code>\nwill be called automatically. The <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> will not complete\nuntil all listeners have called <code>suggest</code>. Listeners may call\n<code>suggest</code> without any arguments in order to allow the download\nto use <code>downloadItem.filename</code> for its filename, or pass a\n<code>suggestion</code> object to <code>suggest</code> in order to\noverride the target filename. If more than one extension overrides the\nfilename, then the last extension installed whose listener passes a\n<code>suggestion</code> object to <code>suggest</code> wins. In order to\navoid confusion regarding which extension will win, users should not\ninstall extensions that may conflict. If the download is initiated by\n<a href=\"#method-download\"><code>download</code></a> and the target filename is known before the MIME type\nand tentative filename have been determined, pass <code>filename</code>\nto <a href=\"#method-download\"><code>download</code></a> instead.</p>",
        "name": "onDeterminingFilename"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "downloadId",
                "comment": "<p>The <code>id</code> of the <a href=\"#type-DownloadItem\"><code>DownloadItem</code></a> that was erased.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fires with the <code>downloadId</code> when a download is erased from\nhistory.</p>",
        "name": "onErased"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "downloads\n"
    ]
  },
  {
    "name": "chrome.enterprise.deviceAttributes",
    "shortName": "enterprise.deviceAttributes",
    "comment": "<p>Use the <code>chrome.enterprise.deviceAttributes</code> API to read device\nattributes.\nNote: This API is only available to extensions force-installed\nby enterprise policy.</p>",
    "types": [],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "annotatedLocation"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the Annotated Location of the device.</p>"
          }
        ],
        "comment": "<p>Fetches the administrator-annotated Location. If the current user is not\naffiliated or no Annotated Location has been set by the administrator,\nreturns an empty string.</p>",
        "name": "getDeviceAnnotatedLocation"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "assetId"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the Asset ID of the device.</p>"
          }
        ],
        "comment": "<p>Fetches the administrator-annotated Asset Id. If the current user is not\naffiliated or no Asset Id has been set by the administrator, returns an empty\nstring.</p>",
        "name": "getDeviceAssetId"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "hostname"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with hostname of the device.</p>"
          }
        ],
        "comment": "<p>Fetches the device's hostname as set by DeviceHostnameTemplate policy. If the\ncurrent user is not affiliated or no hostname has been set by the the\nenterprise policy, returns an empty string.</p>",
        "name": "getDeviceHostname"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "serialNumber"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the serial number of the device.</p>"
          }
        ],
        "comment": "<p>Fetches the device's serial number. Please note the purpose of this API is to\nadministrate the device (e.g. generating Certificate Sign Requests for\ndevice-wide certificates). This API may not be used for tracking devices\nwithout the consent of the device's administrator. If the current user is not\naffiliated, returns an empty string.</p>",
        "name": "getDeviceSerialNumber"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "deviceId"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the device identifier of the directory API when received.</p>"
          }
        ],
        "comment": "<p>Fetches the value of <a\nhref=\"https://developers.google.com/admin-sdk/directory/v1/guides/manage-chrome-devices\">the device identifier of the directory API</a>, that is generated by the server and identifies the cloud record of the device for querying in the cloud directory API. If the current user is not affiliated, returns an empty string.</p>",
        "name": "getDirectoryDeviceId"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "enterprise.deviceAttributes\n"
    ],
    "platforms": [
      "chromeos",
      "lacros"
    ]
  },
  {
    "name": "chrome.enterprise.hardwarePlatform",
    "shortName": "enterprise.hardwarePlatform",
    "comment": "<p>Use the <code>chrome.enterprise.hardwarePlatform</code> API to get the\nmanufacturer and model of the hardware platform where the browser runs.\nNote: This API is only available to extensions installed by enterprise\npolicy.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "name": "manufacturer"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "name": "model"
          }
        ],
        "name": "HardwarePlatformInfo"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "HardwarePlatformInfo",
                "referenceLink": "#type-HardwarePlatformInfo",
                "optional": false,
                "name": "info"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the hardware platform info.</p>"
          }
        ],
        "comment": "<p>Obtains the manufacturer and model for the hardware platform and, if the\nextension is authorized, returns it via |callback|.</p>",
        "name": "getHardwarePlatformInfo"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "enterprise.hardwarePlatform\n"
    ]
  },
  {
    "name": "chrome.enterprise.networkingAttributes",
    "shortName": "enterprise.networkingAttributes",
    "comment": "<p>Use the <code>chrome.enterprise.networkingAttributes</code> API to read\ninformation about your current network.\nNote: This API is only available to\nextensions force-installed by enterprise\npolicy.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The device's local IPv4 address (undefined if not configured).</p>",
            "optional": true,
            "name": "ipv4"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The device's local IPv6 address (undefined if not configured).</p>",
            "optional": true,
            "name": "ipv6"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The device's MAC address.</p>",
            "name": "macAddress"
          }
        ],
        "name": "NetworkDetails"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "NetworkDetails",
                "referenceLink": "#type-NetworkDetails",
                "optional": false,
                "name": "networkAddresses"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the device's default network's <a href=\"#type-NetworkDetails\"><code>NetworkDetails</code></a>.</p>"
          }
        ],
        "comment": "<p>Retrieves the network details of the device's default network. If the user is\nnot affiliated or the device is not connected to a network, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set with a failure reason.</p>",
        "name": "getNetworkDetails"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "enterprise.networkingAttributes\n"
    ],
    "platforms": [
      "chromeos"
    ]
  },
  {
    "name": "chrome.enterprise.platformKeys",
    "shortName": "enterprise.platformKeys",
    "comment": "<p>Use the <code>chrome.enterprise.platformKeys</code> API to generate\nhardware-backed keys and to install certificates for these keys. The\ncertificates will be managed by the platform and can be used for TLS\nauthentication, network access or by other extension through\n<a href=\"\">chrome.platformKeys</a>.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Uniquely identifies this <code>Token</code>. </p>\n<p>Static IDs are\n<code>\"user\"</code> and <code>\"system\"</code>, referring to the platform's\nuser-specific and the system-wide hardware token, respectively. Any other\ntokens (with other identifiers) might be returned by <a href=\"#method-getTokens\"><code>getTokens</code></a>.</p>",
            "name": "id"
          },
          {
            "type": "reference",
            "referenceType": "SubtleCrypto",
            "comment": "<p>Implements the WebCrypto's <a\nhref=\"http://www.w3.org/TR/WebCryptoAPI/#subtlecrypto-interface\">SubtleCrypto</a> interface. The cryptographic operations, including key generation, are hardware-backed. </p>\n<p>Only non-extractable RSASSA-PKCS1-V1_5 keys with <code>modulusLength</code> up to 2048 and ECDSA with <code>namedCurve</code> P-256 can be generated. Each key can be used for signing data at most once.</p> <p>Keys generated on a specific <code>Token</code> cannot be used with any other Tokens, nor can they be used with <code>window.crypto.subtle</code>. Equally, <code>Key</code> objects created with <code>window.crypto.subtle</code> cannot be used with this interface.</p>",
            "name": "subtleCrypto"
          }
        ],
        "name": "Token"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "challenge",
            "comment": "<p>A challenge as emitted by the Verified Access Web API.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": true,
            "name": "registerKey",
            "comment": "<p>If set, the current Enterprise Machine Key is registered                with the <code>\"system\"</code> token and relinquishes the                Enterprise Machine Key role. The key can then be                associated with a certificate and used like any other                signing key. This key is 2048-bit RSA. Subsequent calls                to this function will then generate a new Enterprise                Machine Key.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ArrayBuffer",
                "optional": false,
                "name": "response",
                "comment": "<p>The challenge response.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called back with the challenge response.</p>"
          }
        ],
        "comment": "<p>Challenges a hardware-backed Enterprise Machine Key and emits the response as\npart of a remote attestation protocol. Only useful on Chrome OS and in\nconjunction with the Verified Access Web API which both issues challenges and\nverifies responses. A successful verification by the Verified Access Web API\nis a strong signal of all of the following: * The current device is a\nlegitimate Chrome OS device. * The current device is managed by the domain\nspecified during   verification. * The current signed-in user is managed by\nthe domain specified during   verification. * The current device state\ncomplies with enterprise device policy. For   example, a policy may specify\nthat the device must not be in developer   mode. * Any device identity\nemitted by the verification is tightly bound to the   hardware of the current\ndevice. This function is highly restricted and will fail if the current\ndevice is not managed, the current user is not managed, or if this operation\nhas not explicitly been enabled for the caller by enterprise device policy.\nThe Enterprise Machine Key does not reside in the <code>\"system\"</code> token\nand is not accessible by any other API.</p>",
        "name": "challengeMachineKey"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "challenge",
            "comment": "<p>A challenge as emitted by the Verified Access Web API.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "registerKey",
            "comment": "<p>If set, the current Enterprise User Key is registered with                the <code>\"user\"</code> token and relinquishes the                Enterprise User Key role. The key can then be associated                with a certificate and used like any other signing key.                This key is 2048-bit RSA. Subsequent calls to this                function will then generate a new Enterprise User Key.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ArrayBuffer",
                "optional": false,
                "name": "response",
                "comment": "<p>The challenge response.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called back with the challenge response.</p>"
          }
        ],
        "comment": "<p>Challenges a hardware-backed Enterprise User Key and emits the response as\npart of a remote attestation protocol. Only useful on Chrome OS and in\nconjunction with the Verified Access Web API which both issues challenges and\nverifies responses. A successful verification by the Verified Access Web API\nis a strong signal of all of the following: * The current device is a\nlegitimate Chrome OS device. * The current device is managed by the domain\nspecified during   verification. * The current signed-in user is managed by\nthe domain specified during   verification. * The current device state\ncomplies with enterprise user policy. For   example, a policy may specify\nthat the device must not be in developer   mode. * The public key emitted by\nthe verification is tightly bound to the   hardware of the current device and\nto the current signed-in user. This function is highly restricted and will\nfail if the current device is not managed, the current user is not managed,\nor if this operation has not explicitly been enabled for the caller by\nenterprise user policy. The Enterprise User Key does not reside in the\n<code>\"user\"</code> token and is not accessible by any other API.</p>",
        "name": "challengeUserKey"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "tokenId",
            "comment": "<p>The id of a Token returned by <code>getTokens</code>.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "ArrayBuffer"
                },
                "optional": false,
                "name": "certificates",
                "comment": "<p>The list of certificates, each in DER encoding of a X.509     certificate.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called back with the list of the available certificates.</p>"
          }
        ],
        "comment": "<p>Returns the list of all client certificates available from the given token.\nCan be used to check for the existence and expiration of client certificates\nthat are usable for a certain authentication.</p>",
        "name": "getCertificates"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Token",
                  "referenceLink": "#type-Token"
                },
                "optional": false,
                "name": "tokens",
                "comment": "<p>The list of available tokens.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Invoked by <code>getTokens</code> with the list of available Tokens.</p>"
          }
        ],
        "comment": "<p>Returns the available Tokens. In a regular user's session the list will\nalways contain the user's token with <code>id</code> <code>\"user\"</code>. If\na system-wide TPM token is available, the returned list will also contain the\nsystem-wide token with <code>id</code> <code>\"system\"</code>. The system-wide\ntoken will be the same for all sessions on this device (device in the sense\nof e.g. a Chromebook).</p>",
        "name": "getTokens"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "tokenId",
            "comment": "<p>The id of a Token returned by <code>getTokens</code>.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "certificate",
            "comment": "<p>The DER encoding of a X.509 certificate.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called back when this operation is finished.</p>"
          }
        ],
        "comment": "<p>Imports <code>certificate</code> to the given token if the certified key is\nalready stored in this token. After a successful certification request, this\nfunction should be used to store the obtained certificate and to make it\navailable to the operating system and browser for authentication.</p>",
        "name": "importCertificate"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "tokenId",
            "comment": "<p>The id of a Token returned by <code>getTokens</code>.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "certificate",
            "comment": "<p>The DER encoding of a X.509 certificate.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called back when this operation is finished.</p>"
          }
        ],
        "comment": "<p>Removes <code>certificate</code> from the given token if present. Should be\nused to remove obsolete certificates so that they are not considered during\nauthentication and do not clutter the certificate choice. Should be used to\nfree storage in the certificate store.</p>",
        "name": "removeCertificate"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "enterprise.platformKeys\n"
    ],
    "platforms": [
      "chromeos",
      "lacros"
    ]
  },
  {
    "name": "chrome.events",
    "shortName": "events",
    "comment": "<p>The <code>chrome.events</code> namespace contains common types used by APIs\ndispatching events to notify you when something interesting happens.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "T",
                "optional": false,
                "name": "callback",
                "comment": "<p>Called when an event occurs. The parameters of this function depend on the type of event.</p>"
              }
            ],
            "comment": "<p>Registers an event listener <em>callback</em> to an event.</p>",
            "name": "addListener"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "eventName",
                "comment": "<p>Name of the event this function affects.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "webViewInstanceId",
                "comment": "<p>If provided, this is an integer that uniquely identfies the <webview> associated with this function call.</p>"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Rule",
                  "referenceLink": "#type-Rule"
                },
                "optional": false,
                "name": "rules",
                "comment": "<p>Rules to be registered. These do not replace previously registered rules.</p>"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "referenceType": "Rule",
                      "referenceLink": "#type-Rule"
                    },
                    "optional": false,
                    "name": "rules",
                    "comment": "<p>Rules that were registered, the optional parameters are filled with values.</p>"
                  }
                ],
                "optional": false,
                "name": "callback",
                "comment": "<p>Called with registered rules.</p>"
              }
            ],
            "comment": "<p>Registers rules to handle events.</p>",
            "name": "addRules"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "eventName",
                "comment": "<p>Name of the event this function affects.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "webViewInstanceId",
                "comment": "<p>If provided, this is an integer that uniquely identfies the <webview> associated with this function call.</p>"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                },
                "optional": true,
                "name": "ruleIdentifiers",
                "comment": "<p>If an array is passed, only rules with identifiers contained in this array are returned.</p>"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "referenceType": "Rule",
                      "referenceLink": "#type-Rule"
                    },
                    "optional": false,
                    "name": "rules",
                    "comment": "<p>Rules that were registered, the optional parameters are filled with values.</p>"
                  }
                ],
                "optional": false,
                "name": "callback",
                "comment": "<p>Called with registered rules.</p>"
              }
            ],
            "comment": "<p>Returns currently registered rules.</p>",
            "name": "getRules"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "T",
                "optional": false,
                "name": "callback",
                "comment": "<p>Listener whose registration status shall be tested.</p>"
              }
            ],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns",
              "comment": "<p>True if <em>callback</em> is registered to the event.</p>"
            },
            "name": "hasListener"
          },
          {
            "type": "function",
            "parameters": [],
            "returnType": {
              "type": "primitive",
              "primitiveType": "boolean",
              "name": "returns",
              "comment": "<p>True if any event listeners are registered to the event.</p>"
            },
            "name": "hasListeners"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "T",
                "optional": false,
                "name": "callback",
                "comment": "<p>Listener that shall be unregistered.</p>"
              }
            ],
            "comment": "<p>Deregisters an event listener <em>callback</em> from an event.</p>",
            "name": "removeListener"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "eventName",
                "comment": "<p>Name of the event this function affects.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "webViewInstanceId",
                "comment": "<p>If provided, this is an integer that uniquely identfies the <webview> associated with this function call.</p>"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                },
                "optional": false,
                "name": "ruleIdentifiers",
                "comment": "<p>If an array is passed, only rules with identifiers contained in this array are unregistered.</p>"
              },
              {
                "type": "function",
                "parameters": [],
                "optional": false,
                "name": "callback",
                "comment": "<p>Called when rules were unregistered.</p>"
              }
            ],
            "comment": "<p>Unregisters currently registered rules.</p>",
            "name": "removeRules"
          }
        ],
        "comment": "<p>An object which allows the addition and removal of listeners for a Chrome\nevent.</p>",
        "templates": [
          "T"
        ],
        "name": "Event"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "any"
            },
            "comment": "<p>List of actions that are triggered if one of the conditions is fulfilled.</p>",
            "name": "actions"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "any"
            },
            "comment": "<p>List of conditions that can trigger the actions.</p>",
            "name": "conditions"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Optional identifier that allows referencing this rule.</p>",
            "optional": true,
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Optional priority of this rule. Defaults to 100.</p>",
            "optional": true,
            "name": "priority"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Tags can be used to annotate rules and perform operations on sets of rules.</p>",
            "optional": true,
            "name": "tags"
          }
        ],
        "comment": "<p>Description of a declarative rule for handling events.</p>",
        "name": "Rule"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the host name of the URL contains a specified string. To test\nwhether a host name component has a prefix 'foo', use hostContains: '.foo'.\nThis matches 'www.foobar.com' and 'foo.com', because an implicit dot is added\nat the beginning of the host name. Similarly, hostContains can be used to\nmatch against component suffix ('foo.') and to exactly match against\ncomponents ('.foo.'). Suffix- and exact-matching for the last components need\nto be done separately using hostSuffix, because no implicit dot is added at\nthe end of the host name.</p>",
            "optional": true,
            "name": "hostContains"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the host name of the URL is equal to a specified string.</p>",
            "optional": true,
            "name": "hostEquals"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the host name of the URL starts with a specified string.</p>",
            "optional": true,
            "name": "hostPrefix"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the host name of the URL ends with a specified string.</p>",
            "optional": true,
            "name": "hostSuffix"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the URL without query segment and fragment identifier matches a\nspecified regular expression. Port numbers are stripped from the URL if they\nmatch the default port number. The regular expressions use the <a\nhref=\"https://github.com/google/re2/blob/master/doc/syntax.txt\">RE2\nsyntax</a>.</p>",
            "optional": true,
            "name": "originAndPathMatches"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the path segment of the URL contains a specified string.</p>",
            "optional": true,
            "name": "pathContains"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the path segment of the URL is equal to a specified string.</p>",
            "optional": true,
            "name": "pathEquals"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the path segment of the URL starts with a specified string.</p>",
            "optional": true,
            "name": "pathPrefix"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the path segment of the URL ends with a specified string.</p>",
            "optional": true,
            "name": "pathSuffix"
          },
          {
            "type": "array",
            "elementType": {
              "type": "union",
              "isEnum": false,
              "options": [
                {
                  "type": "primitive",
                  "primitiveType": "number"
                },
                {
                  "type": "array",
                  "elementType": {
                    "type": "primitive",
                    "primitiveType": "number"
                  }
                }
              ]
            },
            "comment": "<p>Matches if the port of the URL is contained in any of the specified port\nlists. For example <code>[80, 443, [1000, 1200]]</code> matches all requests\non port 80, 443 and in the range 1000-1200.</p>",
            "optional": true,
            "name": "ports"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the query segment of the URL contains a specified string.</p>",
            "optional": true,
            "name": "queryContains"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the query segment of the URL is equal to a specified string.</p>",
            "optional": true,
            "name": "queryEquals"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the query segment of the URL starts with a specified string.</p>",
            "optional": true,
            "name": "queryPrefix"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the query segment of the URL ends with a specified string.</p>",
            "optional": true,
            "name": "querySuffix"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Matches if the scheme of the URL is equal to any of the schemes specified in\nthe array.</p>",
            "optional": true,
            "name": "schemes"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the URL (without fragment identifier) contains a specified string.\nPort numbers are stripped from the URL if they match the default port number.</p>",
            "optional": true,
            "name": "urlContains"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the URL (without fragment identifier) is equal to a specified\nstring. Port numbers are stripped from the URL if they match the default port\nnumber.</p>",
            "optional": true,
            "name": "urlEquals"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the URL (without fragment identifier) matches a specified regular\nexpression. Port numbers are stripped from the URL if they match the default\nport number. The regular expressions use the <a\nhref=\"https://github.com/google/re2/blob/master/doc/syntax.txt\">RE2\nsyntax</a>.</p>",
            "optional": true,
            "name": "urlMatches"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the URL (without fragment identifier) starts with a specified\nstring. Port numbers are stripped from the URL if they match the default port\nnumber.</p>",
            "optional": true,
            "name": "urlPrefix"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Matches if the URL (without fragment identifier) ends with a specified\nstring. Port numbers are stripped from the URL if they match the default port\nnumber.</p>",
            "optional": true,
            "name": "urlSuffix"
          }
        ],
        "comment": "<p>Filters URLs for various criteria. See <a href=\"#filtered\">event\nfiltering</a>. All criteria are case sensitive.</p>",
        "name": "UrlFilter"
      }
    ],
    "properties": [],
    "methods": [],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.extension",
    "shortName": "extension",
    "comment": "<p>The <code>chrome.extension</code> API has utilities that can be used by any\nextension page. It includes support for exchanging messages between an\nextension and its content scripts or between extensions, as described in\ndetail in <a href=\"../../messaging/\">Message Passing</a>.</p>",
    "types": [
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"tab\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"popup\""
          }
        ],
        "comment": "<p>The type of extension view.</p>",
        "name": "ViewType"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "boolean",
        "optional": true,
        "comment": "<p>True for content scripts running inside incognito tabs, and for extension\npages running inside an incognito process. The latter only applies to\nextensions with 'split' incognito_behavior.</p>",
        "name": "inIncognitoContext"
      },
      {
        "type": "object",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Description of the error that has taken place.</p>",
            "name": "message"
          }
        ],
        "optional": true,
        "comment": "<p>Set for the lifetime of a callback if an ansychronous extension api has\nresulted in an error. If no error has occured lastError will be\n<var>undefined</var>.</p>",
        "deprecated": "Please use <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a>.\n",
        "name": "lastError"
      }
    ],
    "methods": [
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Returns the JavaScript 'window' object for the background page running inside\nthe current extension. Returns null if the extension has no background page.</p>",
        "returnType": {
          "type": "reference",
          "referenceType": "Window",
          "name": "returns"
        },
        "name": "getBackgroundPage"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "windowId"
          }
        ],
        "comment": "<p>Returns an array of the JavaScript 'window' objects for each of the tabs\nrunning inside the current extension. If <code>windowId</code> is specified,\nreturns only the 'window' objects of tabs attached to the specified window.</p>",
        "deprecated": "Please use <a href=\"#method-getViews\"><code>getViews</code></a> <code>{type: \"tab\"}</code>.\n",
        "returnType": {
          "type": "array",
          "elementType": {
            "type": "reference",
            "referenceType": "Window"
          },
          "name": "returns",
          "comment": "<p>Array of global window objects</p>"
        },
        "name": "getExtensionTabs"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "path",
            "comment": "<p>A path to a resource within an extension expressed relative to its install directory.</p>"
          }
        ],
        "comment": "<p>Converts a relative path within an extension install directory to a\nfully-qualified URL.</p>",
        "deprecated": "Please use <a href=\"../runtime/#method-getURL\"><code>runtime.getURL</code></a>.\n",
        "returnType": {
          "type": "primitive",
          "primitiveType": "string",
          "name": "returns",
          "comment": "<p>The fully-qualified URL to the resource.</p>"
        },
        "name": "getURL"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Find a view according to a tab id. If this field is omitted, returns all\nviews.</p>",
                "optional": true,
                "name": "tabId"
              },
              {
                "type": "reference",
                "referenceType": "ViewType",
                "referenceLink": "#type-ViewType",
                "comment": "<p>The type of view to get. If omitted, returns all views (including background\npages and tabs). Valid values: 'tab', 'notification', 'popup'.</p>",
                "optional": true,
                "name": "type"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The window to restrict the search to. If omitted, returns all views.</p>",
                "optional": true,
                "name": "windowId"
              }
            ],
            "optional": false,
            "name": "fetchProperties"
          }
        ],
        "comment": "<p>Returns an array of the JavaScript 'window' objects for each of the pages\nrunning inside the current extension.</p>",
        "returnType": {
          "type": "array",
          "elementType": {
            "type": "reference",
            "referenceType": "Window"
          },
          "name": "returns",
          "comment": "<p>Array of global objects</p>"
        },
        "name": "getViews"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "isAllowedAccess",
                "comment": "<p>True if the extension can access the 'file://' scheme, false otherwise.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves the state of the extension's access to the 'file://' scheme (as\ndetermined by the user-controlled 'Allow access to File URLs' checkbox.</p>",
        "name": "isAllowedFileSchemeAccess"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "isAllowedAccess",
                "comment": "<p>True if the extension has access to Incognito mode, false otherwise.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves the state of the extension's access to Incognito-mode (as\ndetermined by the user-controlled 'Allowed in Incognito' checkbox.</p>",
        "name": "isAllowedIncognitoAccess"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "extensionId",
            "comment": "<p>The extension ID of the extension you want to connect to. If omitted, default is your own extension.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "any",
            "optional": false,
            "name": "request"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "any",
                "optional": false,
                "name": "response",
                "comment": "<p>The JSON response object sent by the handler of the request. If an error occurs while connecting to the extension, the callback will be called with no arguments and <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set to the error message.</p>"
              }
            ],
            "optional": false,
            "name": "responseCallback"
          }
        ],
        "comment": "<p>Sends a single request to other listeners within the extension. Similar to\n<a href=\"../runtime/#method-connect\"><code>runtime.connect</code></a>, but only sends a single request with an optional\nresponse. The <a href=\"#event-onRequest\"><code>onRequest</code></a> event is fired in each page of the\nextension.</p>",
        "deprecated": "Please use <a href=\"../runtime/#method-sendMessage\"><code>runtime.sendMessage</code></a>.\n",
        "name": "sendRequest"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "data"
          }
        ],
        "comment": "<p>Sets the value of the ap CGI parameter used in the extension's update URL.\nThis value is ignored for extensions that are hosted in the Chrome Extension\nGallery.</p>",
        "name": "setUpdateUrlData"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "any",
                "optional": false,
                "name": "request",
                "comment": "<p>The request sent by the calling script.</p>"
              },
              {
                "type": "reference",
                "referenceType": "runtime.MessageSender",
                "referenceLink": "../runtime/#type-MessageSender",
                "optional": false,
                "name": "sender"
              },
              {
                "type": "function",
                "parameters": [],
                "optional": false,
                "name": "sendResponse"
              }
            ],
            "deprecated": "Please use <a href=\"../runtime/#event-onMessage\"><code>runtime.onMessage</code></a>.\n",
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a request is sent from either an extension process or a\ncontent script.</p>",
        "name": "onRequest"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "any",
                "optional": false,
                "name": "request",
                "comment": "<p>The request sent by the calling script.</p>"
              },
              {
                "type": "reference",
                "referenceType": "runtime.MessageSender",
                "referenceLink": "../runtime/#type-MessageSender",
                "optional": false,
                "name": "sender"
              },
              {
                "type": "function",
                "parameters": [],
                "optional": false,
                "name": "sendResponse"
              }
            ],
            "deprecated": "Please use <a href=\"../runtime/#event-onMessageExternal\"><code>runtime.onMessageExternal</code></a>.\n",
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a request is sent from another extension.</p>",
        "name": "onRequestExternal"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.extensionsManifestTypes",
    "shortName": "extensionsManifestTypes",
    "comment": "<p>Schemas for structured manifest entries</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The set of URL patterns to match against. If any of the given patterns match\na URL, its contents will be granted the specified capabilities.</p>",
            "name": "matches"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The set of capabilities to grant matched contents. This is currently limited\nto <code>clipboardRead</code>, <code>clipboardWrite</code>, and\n<code>unlimitedStorage</code>.</p>",
            "name": "permissions"
          }
        ],
        "comment": "<p>The <code>content_capabilities</code> manifest entry allows an extension to\ngrant certain additional capabilities to web contents whose locations match a\ngiven set of URL patterns.</p>",
        "name": "ContentCapabilities"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If <code>true</code>, messages sent via <a href=\"../runtime/#method-connect\"><code>runtime.connect</code></a> or <a href=\"../runtime/#method-sendMessage\"><code>runtime.sendMessage</code></a> will set <a href=\"../runtime/#type-MessageSender-tlsChannelId\"><code>runtime.MessageSender.tlsChannelId</code></a> if\nthose methods request it to be. If <code>false</code>, <a href=\"../runtime/#type-MessageSender-tlsChannelId\"><code>runtime.MessageSender.tlsChannelId</code></a> will never be set under any circumstance.</p>",
            "optional": true,
            "name": "accepts_tls_channel_id"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The IDs of extensions or apps that are allowed to connect. If left empty\nor unspecified, no extensions or apps can connect.</p><p>The wildcard\n<code>\"*\"</code> will allow all extensions and apps to connect.</p>",
            "optional": true,
            "name": "ids"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The URL patterns for <em>web pages</em> that are allowed to connect.\n<em>This does not affect content scripts.</em> If left empty or unspecified,\nno web pages can connect.</p><p>Patterns cannot include wildcard domains nor\nsubdomains of <a href=\"http://publicsuffix.org/list/\">(effective) top level\ndomains</a>; <code>*://google.com/*</code> and\n<code>http://*.chromium.org/*</code> are valid, while\n<code>&lt;all_urls&gt;</code>, <code>http://&#x2a;/*</code>,\n<code>*://*.com/*</code>, and even <code>http://*.appspot.com/*</code> are\nnot.</p>",
            "optional": true,
            "name": "matches"
          }
        ],
        "name": "ExternallyConnectable"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If <code>true</code>, a Chrome user agent stylesheet will be applied to your\noptions page. The default value is <code>false</code>. We do not recommend\nyou enable it as it no longer results in a consistent UI with Chrome. This\noption will be removed in Manifest V3.</p>",
            "optional": true,
            "name": "chrome_style"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If <code>true</code>, your extension's options page will be opened in a\nnew tab rather than embedded in <em>chrome://extensions</em>. The default is\n<code>false</code>, and we recommend that you don't change\nit.</p><p><strong>This is only useful to delay the inevitable deprecation of\nthe old options UI!</strong> It will be removed soon, so try not to use it.\nIt will break.</p>",
            "optional": true,
            "name": "open_in_tab"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The path to your options page, relative to your extension's root.</p>",
            "name": "page"
          }
        ],
        "comment": "<p>The <code>options_ui</code> manifest property declares how the options page\nshould be displayed.</p>",
        "name": "OptionsUI"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "object",
              "properties": [
                {
                  "type": "primitive",
                  "primitiveType": "number",
                  "comment": "<p>USB interface class implemented by any interface of a matching device.</p>",
                  "optional": true,
                  "name": "interfaceClass"
                },
                {
                  "type": "primitive",
                  "primitiveType": "number",
                  "comment": "<p>USB interface protocol implemented by the interface matching <a href=\"#property-UsbPrinters-filters.__type.interfaceClass\"><code>UsbPrinters.filters.__type.interfaceClass</code></a> and <a href=\"#property-UsbPrinters-filters.__type.interfaceSubclass\"><code>UsbPrinters.filters.__type.interfaceSubclass</code></a>.</p>",
                  "optional": true,
                  "name": "interfaceProtocol"
                },
                {
                  "type": "primitive",
                  "primitiveType": "number",
                  "comment": "<p>USB interface sub-class implemented by the interface matching <a href=\"#property-UsbPrinters-filters.__type.interfaceClass\"><code>UsbPrinters.filters.__type.interfaceClass</code></a>.</p>",
                  "optional": true,
                  "name": "interfaceSubclass"
                },
                {
                  "type": "primitive",
                  "primitiveType": "number",
                  "comment": "<p>USB product ID of matching devices</p>",
                  "optional": true,
                  "name": "productId"
                },
                {
                  "type": "primitive",
                  "primitiveType": "number",
                  "comment": "<p>USB vendor ID of matching devices</p>",
                  "name": "vendorId"
                }
              ]
            },
            "comment": "<p>A list of <a href=\"../usb/#type-DeviceFilter\">USB device filters</a> matching supported\ndevices. A device only needs to match one of the provided filters. A\n<code>vendorId</code> is required and only one of <code>productId</code> or\n<code>interfaceClass</code> may be provided.</p>",
            "name": "filters"
          }
        ],
        "comment": "<p>The <code>usb_printers</code> manifest property lists the USB printers\nsupported by an app implementing the <a href=\"../printerProvider/\"><code>printerProvider</code></a> API.</p>",
        "name": "UsbPrinters"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If <code>true</code>, gives permission to an app to use the <a href=\"../bluetoothLowEnergy/\"><code>bluetoothLowEnergy</code></a> API</p>",
            "optional": true,
            "name": "low_energy"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If <code>true</code>, gives permission to an app to use the advertisement\nfunctions in the <a href=\"../bluetoothLowEnergy/\"><code>bluetoothLowEnergy</code></a> API</p>",
            "optional": true,
            "name": "peripheral"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If <code>true</code>, gives permission to an app to use the <a href=\"../bluetoothSocket/\"><code>bluetoothSocket</code></a> API</p>",
            "optional": true,
            "name": "socket"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The <code>uuids</code> manifest property declares the list of protocols,\nprofiles and services that an app can communicate using.</p>",
            "optional": true,
            "name": "uuids"
          }
        ],
        "comment": "<p>The <code>bluetooth</code> manifest property give permission to an app to use\nthe <a href=\"#type-bluetooth\"><code>bluetooth</code></a> API. A list of UUIDs can be optionally specified to\nenable communication with devices.</p>",
        "name": "bluetooth"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [
              {
                "type": "reference",
                "referenceType": "SocketHostPatterns",
                "referenceLink": "#type-SocketHostPatterns",
                "comment": "<p>The host:port pattern for <code>connect</code> operations.</p>",
                "optional": true,
                "name": "connect"
              }
            ],
            "comment": "<p>The <code>tcp</code> manifest property declares which sockets.tcp operations\nan app can issue.</p>",
            "optional": true,
            "name": "tcp"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "reference",
                "referenceType": "SocketHostPatterns",
                "referenceLink": "#type-SocketHostPatterns",
                "comment": "<p>The host:port pattern for <code>listen</code> operations.</p>",
                "optional": true,
                "name": "listen"
              }
            ],
            "comment": "<p>The <code>tcpServer</code> manifest property declares which sockets.tcpServer\noperations an app can issue.</p>",
            "optional": true,
            "name": "tcpServer"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "reference",
                "referenceType": "SocketHostPatterns",
                "referenceLink": "#type-SocketHostPatterns",
                "comment": "<p>The host:port pattern for <code>bind</code> operations.</p>",
                "optional": true,
                "name": "bind"
              },
              {
                "type": "reference",
                "referenceType": "SocketHostPatterns",
                "referenceLink": "#type-SocketHostPatterns",
                "comment": "<p>The host:port pattern for <code>joinGroup</code> operations.</p>",
                "optional": true,
                "name": "multicastMembership"
              },
              {
                "type": "reference",
                "referenceType": "SocketHostPatterns",
                "referenceLink": "#type-SocketHostPatterns",
                "comment": "<p>The host:port pattern for <code>send</code> operations.</p>",
                "optional": true,
                "name": "send"
              }
            ],
            "comment": "<p>The <code>udp</code> manifest property declares which sockets.udp operations\nan app can issue.</p>",
            "optional": true,
            "name": "udp"
          }
        ],
        "comment": "<p>The <code>sockets</code> manifest property declares which sockets operations\nan app can issue.</p>",
        "name": "sockets"
      },
      {
        "type": "array",
        "elementType": {
          "type": "object",
          "properties": [
            {
              "type": "primitive",
              "primitiveType": "boolean",
              "comment": "<p>Whether the secondary app should be enabled when kiosk app is launched. If\ntrue, the app will be enabled before the kiosk app launch; if false the app\nwill be disabled before the kiosk app launch; if not set, the app's enabled\nstate will not be changed during the kiosk app launch. The ${ref:management}\nAPI can be used to later change the secondary app state.</p>",
              "optional": true,
              "name": "enabled_on_launch"
            },
            {
              "type": "primitive",
              "primitiveType": "string",
              "comment": "<p>ID of secondary kiosk app</p>",
              "name": "id"
            }
          ]
        },
        "comment": "<p>The <code>kiosk_secondary_apps</code> manifest property lists the secondary\nkiosk apps to be deployed by the primary kiosk app.</p>",
        "name": "KioskSecondaryApps"
      },
      {
        "type": "union",
        "isEnum": false,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            }
          }
        ],
        "comment": "<p>A single string or a list of strings representing host:port patterns.</p>",
        "name": "SocketHostPatterns"
      },
      {
        "type": "union",
        "isEnum": false,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "boolean"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether to request permission to the whole ChromeOS desktop. If granted, this\ngives the extension access to every aspect of the desktop, and every site and\napp. If this permission is requested, all other permissions are implicitly\nincluded and do not need to be requested separately.</p>",
                "optional": true,
                "name": "desktop"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the extension is allowed interactive access (true) or read-only\naccess (false; default) to the automation tree.</p>",
                "optional": true,
                "name": "interact"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                },
                "comment": "<p>A list of URL patterns for which this extension may request an automation\ntree. If not specified, automation permission will be granted for the sites\nfor which the extension has a <a\nhref='https://developer.chrome.com/extensions/declare_permissions#host-permissions'>host permission</a> or <a href='https://developer.chrome.com/extensions/declare_permissions#activeTab'>activeTab permission</a>).</p>",
                "optional": true,
                "name": "matches"
              }
            ]
          }
        ],
        "comment": "<p>This API provides programmatic access to the user interface elements of\nChrome. This includes everything in the web view, and optionally Chrome's\nfull user interface.</p>",
        "name": "automation"
      }
    ],
    "properties": [],
    "methods": [],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.extensionTypes",
    "shortName": "extensionTypes",
    "comment": "<p>The <code>chrome.extensionTypes</code> API contains type declarations for\nChrome extensions.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If allFrames is <code>true</code>, implies that the CSS should be removed\nfrom all frames of current page. By default, it's <code>false</code> and is\nonly removed from the top frame. If <code>true</code> and\n<code>frameId</code> is set, then the code is removed from the selected frame\nand all of its child frames.</p>",
            "optional": true,
            "name": "allFrames"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>CSS code to remove.</p>",
            "optional": true,
            "name": "code"
          },
          {
            "type": "reference",
            "referenceType": "CSSOrigin",
            "referenceLink": "#type-CSSOrigin",
            "comment": "<p>The <a\nhref=\"https://www.w3.org/TR/css3-cascade/#cascading-origins\">origin</a> of\nthe CSS to remove. Defaults to <code>\"author\"</code>.</p>",
            "optional": true,
            "name": "cssOrigin"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>CSS file to remove.</p>",
            "optional": true,
            "name": "file"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The <a href=\"../webNavigation/#frame_ids\">frame</a> from where the CSS should be\nremoved. Defaults to 0 (the top-level frame).</p>",
            "optional": true,
            "name": "frameId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If matchAboutBlank is true, then the code is also removed from about:blank\nand about:srcdoc frames if your extension has access to its parent document.\nBy default it is <code>false</code>.</p>",
            "optional": true,
            "name": "matchAboutBlank"
          }
        ],
        "comment": "<p>Details of the CSS to remove. Either the code or the file property must be\nset, but both may not be set at the same time.</p>",
        "name": "DeleteInjectionDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ImageFormat",
            "referenceLink": "#type-ImageFormat",
            "comment": "<p>The format of the resulting image.  Default is <code>\"jpeg\"</code>.</p>",
            "optional": true,
            "name": "format"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>When format is <code>\"jpeg\"</code>, controls the quality of the resulting\nimage.  This value is ignored for PNG images.  As quality is decreased, the\nresulting image will have more visual artifacts, and the number of bytes\nneeded to store it will decrease.</p>",
            "optional": true,
            "name": "quality"
          }
        ],
        "comment": "<p>Details about the format and quality of an image.</p>",
        "name": "ImageDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If allFrames is <code>true</code>, implies that the JavaScript or CSS should\nbe injected into all frames of current page. By default, it's\n<code>false</code> and is only injected into the top frame. If\n<code>true</code> and <code>frameId</code> is set, then the code is inserted\nin the selected frame and all of its child frames.</p>",
            "optional": true,
            "name": "allFrames"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>JavaScript or CSS code to inject.<br><br><b>Warning:</b><br>Be careful using\nthe <code>code</code> parameter. Incorrect use of it may open your extension\nto <a href=\"https://en.wikipedia.org/wiki/Cross-site_scripting\">cross site\nscripting</a> attacks.</p>",
            "optional": true,
            "name": "code"
          },
          {
            "type": "reference",
            "referenceType": "CSSOrigin",
            "referenceLink": "#type-CSSOrigin",
            "comment": "<p>The <a\nhref=\"https://www.w3.org/TR/css3-cascade/#cascading-origins\">origin</a> of\nthe CSS to inject. This may only be specified for CSS, not JavaScript.\nDefaults to <code>\"author\"</code>.</p>",
            "optional": true,
            "name": "cssOrigin"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>JavaScript or CSS file to inject.</p>",
            "optional": true,
            "name": "file"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The <a href=\"../webNavigation/#frame_ids\">frame</a> where the script or CSS\nshould be injected. Defaults to 0 (the top-level frame).</p>",
            "optional": true,
            "name": "frameId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If matchAboutBlank is true, then the code is also injected in about:blank and\nabout:srcdoc frames if your extension has access to its parent document. Code\ncannot be inserted in top-level about:-frames. By default it is\n<code>false</code>.</p>",
            "optional": true,
            "name": "matchAboutBlank"
          },
          {
            "type": "reference",
            "referenceType": "RunAt",
            "referenceLink": "#type-RunAt",
            "comment": "<p>The soonest that the JavaScript or CSS will be injected into the tab.\nDefaults to \"document_idle\".</p>",
            "optional": true,
            "name": "runAt"
          }
        ],
        "comment": "<p>Details of the script or CSS to inject. Either the code or the file property\nmust be set, but both may not be set at the same time.</p>",
        "name": "InjectDetails"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"author\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"user\""
          }
        ],
        "comment": "<p>The <a\nhref=\"https://www.w3.org/TR/css3-cascade/#cascading-origins\">origin</a> of\ninjected CSS.</p>",
        "name": "CSSOrigin"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"jpeg\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"png\""
          }
        ],
        "comment": "<p>The format of an image.</p>",
        "name": "ImageFormat"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"document_start\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"document_end\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"document_idle\""
          }
        ],
        "comment": "<p>The soonest that the JavaScript or CSS will be injected into the tab.</p>",
        "name": "RunAt"
      }
    ],
    "properties": [],
    "methods": [],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.fileBrowserHandler",
    "shortName": "fileBrowserHandler",
    "comment": "<p>Use the <code>chrome.fileBrowserHandler</code> API to extend the Chrome OS\nfile browser. For example, you can use this API to enable users to upload\nfiles to your website.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "any"
            },
            "comment": "<p>Array of Entry instances representing files that are targets of this action\n(selected in ChromeOS file browser).</p>",
            "name": "entries"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID of the tab that raised this event. Tab IDs are unique within a browser\nsession.</p>",
            "optional": true,
            "name": "tab_id"
          }
        ],
        "comment": "<p>Event details payload for fileBrowserHandler.onExecute event.</p>",
        "name": "FileHandlerExecuteEventDetails"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                },
                "comment": "<p>List of file extensions that the selected file can have. The list is also\nused to specify what files to be shown in the select file dialog. Files with\nthe listed extensions are only shown in the dialog. Extensions should not\ninclude the leading '.'. Example: ['jpg', 'png']</p>",
                "optional": true,
                "name": "allowedFileExtensions"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>Suggested name for the file.</p>",
                "name": "suggestedName"
              }
            ],
            "optional": false,
            "name": "selectionParams",
            "comment": "<p>Parameters that will be used while selecting the file.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "object",
                    "properties": [],
                    "comment": "<p>Selected file entry. It will be null if a file hasn't been selected.</p>",
                    "optional": true,
                    "name": "entry"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>Whether the file has been selected.</p>",
                    "name": "success"
                  }
                ],
                "optional": false,
                "name": "result",
                "comment": "<p>Result of the method.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Function called upon completion.</p>"
          }
        ],
        "comment": "<p>Prompts user to select file path under which file should be saved. When the\nfile is selected, file access permission required to use the file (read,\nwrite and create) are granted to the caller. The file will not actually get\ncreated during the function call, so function caller must ensure its\nexistence before using it. The function has to be invoked with a user\ngesture.</p>",
        "name": "selectFile"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "id",
                "comment": "<p>File browser action id as specified in the listener component's manifest.</p>"
              },
              {
                "type": "reference",
                "referenceType": "FileHandlerExecuteEventDetails",
                "referenceLink": "#type-FileHandlerExecuteEventDetails",
                "optional": false,
                "name": "details",
                "comment": "<p>File handler execute event details.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when file system action is executed from ChromeOS file browser.</p>",
        "name": "onExecute"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "fileBrowserHandler\n"
    ],
    "platforms": [
      "chromeos"
    ]
  },
  {
    "name": "chrome.fileSystem",
    "shortName": "fileSystem",
    "comment": "<p>Use the <code>chrome.fileSystem</code> API to create, read, navigate,\nand\nwrite to the user's local file system. With this API, Chrome Apps can\nread\nand write to a user-selected location. For example, a text editor app\ncan\nuse the API to read and write local documents. All failures are notified\nvia\nchrome.runtime.lastError.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>This is the optional text description for this option. If not present, a\ndescription will be automatically generated; typically containing an expanded\nlist of valid extensions (e.g. \"text/html\" may expand to \"*.html, *.htm\").</p>",
            "optional": true,
            "name": "description"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Extensions to accept, e.g. \"jpg\", \"gif\", \"crx\".</p>",
            "optional": true,
            "name": "extensions"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Mime-types to accept, e.g. \"image/jpeg\" or \"audio/*\". One of mimeTypes or\nextensions must contain at least one valid element.</p>",
            "optional": true,
            "name": "mimeTypes"
          }
        ],
        "name": "AcceptOption"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "AcceptOption",
              "referenceLink": "#type-AcceptOption"
            },
            "comment": "<p>The optional list of accept options for this file opener. Each option will be\npresented as a unique group to the end-user.</p>",
            "optional": true,
            "name": "accepts"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether to accept all file types, in addition to the options specified in the\naccepts argument. The default is true. If the accepts field is unset or\ncontains no valid entries, this will always be reset to true.</p>",
            "optional": true,
            "name": "acceptsAllTypes"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether to accept multiple files. This is only supported for openFile and\nopenWritableFile. The callback to chooseEntry will be called with a list of\nentries if this is set to true. Otherwise it will be called with a single\nEntry.</p>",
            "optional": true,
            "name": "acceptsMultiple"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The suggested file name that will be presented to the user as the default\nname to read or write. This is optional.</p>",
            "optional": true,
            "name": "suggestedName"
          },
          {
            "type": "reference",
            "referenceType": "ChooseEntryType",
            "referenceLink": "#type-ChooseEntryType",
            "comment": "<p>Type of the prompt to show. The default is 'openFile'.</p>",
            "optional": true,
            "name": "type"
          }
        ],
        "name": "ChooseEntryOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The ID of the requested volume.</p>",
            "name": "volumeId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the requested file system should be writable. The default is\nread-only.</p>",
            "optional": true,
            "name": "writable"
          }
        ],
        "name": "RequestFileSystemOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "name": "volumeId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "name": "writable"
          }
        ],
        "name": "Volume"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "Volume",
              "referenceLink": "#type-Volume"
            },
            "name": "volumes"
          }
        ],
        "name": "VolumeListChangedEvent"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"openFile\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"openWritableFile\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"saveFile\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"openDirectory\""
          }
        ],
        "name": "ChooseEntryType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ChooseEntryOptions",
            "referenceLink": "#type-ChooseEntryOptions",
            "optional": true,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Entry",
                "optional": false,
                "name": "entry"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "FileEntry"
                },
                "optional": false,
                "name": "fileEntries"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Ask the user to choose a file or directory.</p>",
        "name": "chooseEntry"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Entry",
            "optional": false,
            "name": "entry"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "displayPath"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Get the display path of an Entry object. The display path is based on the\nfull path of the file or directory on the local file system, but may be made\nmore readable for display purposes.</p>",
        "name": "getDisplayPath"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Volume",
                  "referenceLink": "#type-Volume"
                },
                "optional": false,
                "name": "volumes"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Returns a list of volumes available for <code>requestFileSystem()</code>. The\n<code>\"fileSystem\": {\"requestFileSystem\"}</code> manifest permission is\nrequired. Available to kiosk apps running in the kiosk session only. In case\nof an error, <code>volumes</code> will be undefined, and <code>\nchrome.runtime.lastError</code> will be set.</p>",
        "name": "getVolumeList"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Entry",
            "optional": false,
            "name": "entry"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Entry",
                "optional": false,
                "name": "entry"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Get a writable Entry from another Entry. This call will fail with a runtime\nerror if the application does not have the 'write' permission under\n'fileSystem'. If entry is a DirectoryEntry, this call will fail if the\napplication does not have the 'directory' permission under 'fileSystem'.</p>",
        "name": "getWritableEntry"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "isRestorable"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Returns whether the app has permission to restore the entry with the given\nid.</p>",
        "name": "isRestorable"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Entry",
            "optional": false,
            "name": "entry"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "isWritable"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets whether this Entry is writable or not.</p>",
        "name": "isWritableEntry"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "RequestFileSystemOptions",
            "referenceLink": "#type-RequestFileSystemOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "FileSystem",
                "optional": false,
                "name": "fileSystem"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Requests access to a file system for a volume represented by <code>\noptions.volumeId</code>. If <code>options.writable</code> is set to true,\nthen the file system will be writable. Otherwise, it will be read-only. The\n<code>writable</code> option requires the <code> \"fileSystem\":\n{\"write\"}</code> permission in the manifest. Available to kiosk apps running\nin kiosk session only. For manual-launch kiosk mode, a confirmation dialog\nwill be shown on top of the active app window. In case of an error,\n<code>fileSystem</code> will be undefined, and\n<code>chrome.runtime.lastError</code> will be set.</p>",
        "name": "requestFileSystem"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Entry",
                "optional": false,
                "name": "entry"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Returns the file entry with the given id if it can be restored. This call\nwill fail with a runtime error otherwise.</p>",
        "name": "restoreEntry"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Entry",
            "optional": false,
            "name": "entry"
          }
        ],
        "comment": "<p>Returns an id that can be passed to restoreEntry to regain access to a given\nfile entry. Only the 500 most recently used entries are retained, where calls\nto retainEntry and restoreEntry count as use. If the app has the\n'retainEntries' permission under 'fileSystem', entries are retained\nindefinitely. Otherwise, entries are retained only while the app is running\nand across restarts.</p>",
        "returnType": {
          "type": "primitive",
          "primitiveType": "string",
          "name": "returns"
        },
        "name": "retainEntry"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "VolumeListChangedEvent",
                "referenceLink": "#type-VolumeListChangedEvent",
                "optional": false,
                "name": "event"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Called when a list of available volumes is changed.</p>",
        "name": "onVolumeListChanged"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "fileSystem\n"
    ]
  },
  {
    "name": "chrome.fileSystemProvider",
    "shortName": "fileSystemProvider",
    "comment": "<p>Use the <code>chrome.fileSystemProvider</code> API to create file systems,\nthat can be accessible from the file manager on Chrome OS.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system related to this operation.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>An ID of the request to be aborted.</p>",
            "name": "operationRequestId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique identifier of this request.</p>",
            "name": "requestId"
          }
        ],
        "name": "AbortRequestedOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the action. Any string or <a href=\"#type-CommonActionId\"><code>CommonActionId</code></a> for common\nactions.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The title of the action. It may be ignored for common actions.</p>",
            "optional": true,
            "name": "title"
          }
        ],
        "name": "Action"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The path of the entry to be observed.</p>",
            "name": "entryPath"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system related to this operation.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether observing should include all child entries recursively. It can be\ntrue for directories only.</p>",
            "name": "recursive"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique identifier of this request.</p>",
            "name": "requestId"
          }
        ],
        "name": "AddWatcherRequestedOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ChangeType",
            "referenceLink": "#type-ChangeType",
            "comment": "<p>The type of the change which happened to the entry.</p>",
            "name": "changeType"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The path of the changed entry.</p>",
            "name": "entryPath"
          }
        ],
        "name": "Change"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system related to this operation.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>A request ID used to open the file.</p>",
            "name": "openRequestId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique identifier of this request.</p>",
            "name": "requestId"
          }
        ],
        "name": "CloseFileRequestedOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system to be configured.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique identifier of this request.</p>",
            "name": "requestId"
          }
        ],
        "name": "ConfigureRequestedOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system related to this operation.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique identifier of this request.</p>",
            "name": "requestId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The source path of the entry to be copied.</p>",
            "name": "sourcePath"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The destination path for the copy operation.</p>",
            "name": "targetPath"
          }
        ],
        "name": "CopyEntryRequestedOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The path of the directory to be created.</p>",
            "name": "directoryPath"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system related to this operation.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the operation is recursive (for directories only).</p>",
            "name": "recursive"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique identifier of this request.</p>",
            "name": "requestId"
          }
        ],
        "name": "CreateDirectoryRequestedOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The path of the file to be created.</p>",
            "name": "filePath"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system related to this operation.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique identifier of this request.</p>",
            "name": "requestId"
          }
        ],
        "name": "CreateFileRequestedOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The path of the entry to be deleted.</p>",
            "name": "entryPath"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system related to this operation.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the operation is recursive (for directories only).</p>",
            "name": "recursive"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique identifier of this request.</p>",
            "name": "requestId"
          }
        ],
        "name": "DeleteEntryRequestedOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if it is a directory. Must be provided if requested in\n<code>options</code>.</p>",
            "optional": true,
            "name": "isDirectory"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Mime type for the entry. Always optional, but should be provided if requested\nin <code>options</code>.</p>",
            "optional": true,
            "name": "mimeType"
          },
          {
            "type": "reference",
            "referenceType": "Date",
            "comment": "<p>The last modified time of this entry. Must be provided if requested in\n<code>options</code>.</p>",
            "optional": true,
            "name": "modificationTime"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Name of this entry (not full path name). Must not contain '/'. For root it\nmust be empty. Must be provided if requested in <code>options</code>.</p>",
            "optional": true,
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>File size in bytes. Must be provided if requested in <code>options</code>.</p>",
            "optional": true,
            "name": "size"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Thumbnail image as a data URI in either PNG, JPEG or WEBP format, at most 32\nKB in size. Optional, but can be provided only when explicitly requested by\nthe <a href=\"#event-onGetMetadataRequested\"><code>onGetMetadataRequested</code></a> event.</p>",
            "optional": true,
            "name": "thumbnail"
          }
        ],
        "name": "EntryMetadata"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the action to be executed.</p>",
            "name": "actionId"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The set of paths of the entries to be used for the action.</p>",
            "name": "entryPaths"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system related to this operation.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique identifier of this request.</p>",
            "name": "requestId"
          }
        ],
        "name": "ExecuteActionRequestedOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A human-readable name for the file system.</p>",
            "name": "displayName"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "OpenedFile",
              "referenceLink": "#type-OpenedFile"
            },
            "comment": "<p>List of currently opened files.</p>",
            "name": "openedFiles"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The maximum number of files that can be opened at once. If 0, then not\nlimited.</p>",
            "name": "openedFilesLimit"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the file system supports the <code>tag</code> field for observing\ndirectories.</p>",
            "optional": true,
            "name": "supportsNotifyTag"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "Watcher",
              "referenceLink": "#type-Watcher"
            },
            "comment": "<p>List of watchers.</p>",
            "name": "watchers"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the file system supports operations which may change contents of the\nfile system (such as creating, deleting or writing to files).</p>",
            "name": "writable"
          }
        ],
        "name": "FileSystemInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>List of paths of entries for the list of actions.</p>",
            "name": "entryPaths"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system related to this operation.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique identifier of this request.</p>",
            "name": "requestId"
          }
        ],
        "name": "GetActionsRequestedOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The path of the entry to fetch metadata about.</p>",
            "name": "entryPath"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system related to this operation.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Set to <code>true</code> if <code>is_directory</code> value is requested.</p>",
            "name": "isDirectory"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Set to <code>true</code> if <code>mimeType</code> value is requested.</p>",
            "name": "mimeType"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Set to <code>true</code> if <code>modificationTime</code> value is requested.</p>",
            "name": "modificationTime"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Set to <code>true</code> if <code>name</code> value is requested.</p>",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique identifier of this request.</p>",
            "name": "requestId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Set to <code>true</code> if <code>size</code> value is requested.</p>",
            "name": "size"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Set to <code>true</code> if the thumbnail is requested.</p>",
            "name": "thumbnail"
          }
        ],
        "name": "GetMetadataRequestedOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A human-readable name for the file system.</p>",
            "name": "displayName"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The string indentifier of the file system. Must be unique per each extension.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The maximum number of files that can be opened at once. If not specified, or\n0, then not limited.</p>",
            "optional": true,
            "name": "openedFilesLimit"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the framework should resume the file system at the next sign-in\nsession. True by default.</p>",
            "optional": true,
            "name": "persistent"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the file system supports the <code>tag</code> field for observed\ndirectories.</p>",
            "optional": true,
            "name": "supportsNotifyTag"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the file system supports operations which may change contents of the\nfile system (such as creating, deleting or writing to files).</p>",
            "optional": true,
            "name": "writable"
          }
        ],
        "name": "MountOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system related to this operation.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique identifier of this request.</p>",
            "name": "requestId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The source path of the entry to be moved into a new place.</p>",
            "name": "sourcePath"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The destination path for the copy operation.</p>",
            "name": "targetPath"
          }
        ],
        "name": "MoveEntryRequestedOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ChangeType",
            "referenceLink": "#type-ChangeType",
            "comment": "<p>The type of the change which happened to the observed entry. If it is\nDELETED, then the observed entry will be automatically removed from the list\nof observed entries.</p>",
            "name": "changeType"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "Change",
              "referenceLink": "#type-Change"
            },
            "comment": "<p>List of changes to entries within the observed directory (including the entry\nitself)</p>",
            "optional": true,
            "name": "changes"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system related to this change.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The path of the observed entry.</p>",
            "name": "observedPath"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Mode of the observed entry.</p>",
            "name": "recursive"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Tag for the notification. Required if the file system was mounted with the\n<code>supportsNotifyTag</code> option. Note, that this flag is necessary to\nprovide notifications about changes which changed even when the system was\nshutdown.</p>",
            "optional": true,
            "name": "tag"
          }
        ],
        "name": "NotifyOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The path of the file to be opened.</p>",
            "name": "filePath"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system related to this operation.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "reference",
            "referenceType": "OpenFileMode",
            "referenceLink": "#type-OpenFileMode",
            "comment": "<p>Whether the file will be used for reading or writing.</p>",
            "name": "mode"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>A request ID which will be used by consecutive read/write and close requests.</p>",
            "name": "requestId"
          }
        ],
        "name": "OpenFileRequestedOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The path of the opened file.</p>",
            "name": "filePath"
          },
          {
            "type": "reference",
            "referenceType": "OpenFileMode",
            "referenceLink": "#type-OpenFileMode",
            "comment": "<p>Whether the file was opened for reading or writing.</p>",
            "name": "mode"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>A request ID to be be used by consecutive read/write and close requests.</p>",
            "name": "openRequestId"
          }
        ],
        "name": "OpenedFile"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The path of the directory which contents are requested.</p>",
            "name": "directoryPath"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system related to this operation.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Set to <code>true</code> if <code>is_directory</code> value is requested.</p>",
            "name": "isDirectory"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Set to <code>true</code> if <code>mimeType</code> value is requested.</p>",
            "name": "mimeType"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Set to <code>true</code> if <code>modificationTime</code> value is requested.</p>",
            "name": "modificationTime"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Set to <code>true</code> if <code>name</code> value is requested.</p>",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique identifier of this request.</p>",
            "name": "requestId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Set to <code>true</code> if <code>size</code> value is requested.</p>",
            "name": "size"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Set to <code>true</code> if the thumbnail is requested.</p>",
            "name": "thumbnail"
          }
        ],
        "name": "ReadDirectoryRequestedOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system related to this operation.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Number of bytes to be returned.</p>",
            "name": "length"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Position in the file (in bytes) to start reading from.</p>",
            "name": "offset"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>A request ID used to open the file.</p>",
            "name": "openRequestId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique identifier of this request.</p>",
            "name": "requestId"
          }
        ],
        "name": "ReadFileRequestedOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The path of the watched entry.</p>",
            "name": "entryPath"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system related to this operation.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Mode of the watcher.</p>",
            "name": "recursive"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique identifier of this request.</p>",
            "name": "requestId"
          }
        ],
        "name": "RemoveWatcherRequestedOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The path of the file to be truncated.</p>",
            "name": "filePath"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system related to this operation.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Number of bytes to be retained after the operation completes.</p>",
            "name": "length"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique identifier of this request.</p>",
            "name": "requestId"
          }
        ],
        "name": "TruncateRequestedOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system to be unmounted.</p>",
            "name": "fileSystemId"
          }
        ],
        "name": "UnmountOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system to be unmounted.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique identifier of this request.</p>",
            "name": "requestId"
          }
        ],
        "name": "UnmountRequestedOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The path of the entry being observed.</p>",
            "name": "entryPath"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Tag used by the last notification for the watcher.</p>",
            "optional": true,
            "name": "lastTag"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether watching should include all child entries recursively. It can be true\nfor directories only.</p>",
            "name": "recursive"
          }
        ],
        "name": "Watcher"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>Buffer of bytes to be written to the file.</p>",
            "name": "data"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The identifier of the file system related to this operation.</p>",
            "name": "fileSystemId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Position in the file (in bytes) to start writing the bytes from.</p>",
            "name": "offset"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>A request ID used to open the file.</p>",
            "name": "openRequestId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The unique identifier of this request.</p>",
            "name": "requestId"
          }
        ],
        "name": "WriteFileRequestedOptions"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"CHANGED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"DELETED\""
          }
        ],
        "comment": "<p>Type of a change detected on the observed directory.</p>",
        "name": "ChangeType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"SAVE_FOR_OFFLINE\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"OFFLINE_NOT_NECESSARY\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"SHARE\""
          }
        ],
        "comment": "<p>List of common actions. <code>\"SHARE\"</code> is for sharing files with\nothers. <code>\"SAVE_FOR_OFFLINE\"</code> for pinning (saving for offline\naccess). <code>\"OFFLINE_NOT_NECESSARY\"</code> for notifying that the file\ndoesn't need to be stored for offline access anymore. Used by <a href=\"#event-onGetActionsRequested\"><code>onGetActionsRequested</code></a> and <a href=\"#event-onExecuteActionRequested\"><code>onExecuteActionRequested</code></a>.</p>",
        "name": "CommonActionId"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"READ\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"WRITE\""
          }
        ],
        "comment": "<p>Mode of opening a file. Used by <a href=\"#event-onOpenFileRequested\"><code>onOpenFileRequested</code></a>.</p>",
        "name": "OpenFileMode"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"OK\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"FAILED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"IN_USE\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"EXISTS\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"NOT_FOUND\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ACCESS_DENIED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"TOO_MANY_OPENED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"NO_MEMORY\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"NO_SPACE\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"NOT_A_DIRECTORY\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"INVALID_OPERATION\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"SECURITY\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ABORT\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"NOT_A_FILE\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"NOT_EMPTY\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"INVALID_URL\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"IO\""
          }
        ],
        "comment": "<p>Error codes used by providing extensions in response to requests as well as\nin case of errors when calling methods of the API. For success,\n<code>\"OK\"</code> must be used.</p>",
        "name": "ProviderError"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "fileSystemId"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "FileSystemInfo",
                "referenceLink": "#type-FileSystemInfo",
                "optional": false,
                "name": "fileSystem"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback to receive the result of <a href=\"#type-get-get\"><code>get.get</code></a> function.</p>"
          }
        ],
        "comment": "<p>Returns information about a file system with the passed\n<code>fileSystemId</code>.</p>",
        "name": "get"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "FileSystemInfo",
                  "referenceLink": "#type-FileSystemInfo"
                },
                "optional": false,
                "name": "fileSystems"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback to receive the result of <a href=\"#type-getAll-getAll\"><code>getAll.getAll</code></a> function.</p>"
          }
        ],
        "comment": "<p>Returns all file systems mounted by the extension.</p>",
        "name": "getAll"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "MountOptions",
            "referenceLink": "#type-MountOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>A generic result callback to indicate success or failure.</p>"
          }
        ],
        "comment": "<p>Mounts a file system with the given <code>fileSystemId</code> and\n<code>displayName</code>. <code>displayName</code> will be shown in the left\npanel of the Files app. <code>displayName</code> can contain any characters\nincluding '/', but cannot be an empty string. <code>displayName</code> must\nbe descriptive but doesn't have to be unique. The <code>fileSystemId</code>\nmust not be an empty string.</p><p>Depending on the type of the file system\nbeing mounted, the <code>source</code> option must be set\nappropriately.</p><p>In case of an error, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be\nset with a corresponding error code.</p>",
        "name": "mount"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "NotifyOptions",
            "referenceLink": "#type-NotifyOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>A generic result callback to indicate success or failure.</p>"
          }
        ],
        "comment": "<p>Notifies about changes in the watched directory at\n<code>observedPath</code> in <code>recursive</code> mode. If the file system\nis mounted with <code>supportsNofityTag</code>, then <code>tag</code> must be\nprovided, and all changes since the last notification always reported, even\nif the system was shutdown. The last tag can be obtained with <a href=\"#method-getAll\"><code>getAll</code></a>.</p><p>To use, the <code>file_system_provider.notify</code> manifest\noption must be set to true.</p><p>Value of <code>tag</code> can be any string\nwhich is unique per call, so it's possible to identify the last registered\nnotification. Eg. if the providing extension starts after a reboot, and the\nlast registered notification's tag is equal to \"123\", then it should call\n<a href=\"#type-notify-notify\"><code>notify.notify</code></a> for all changes which happened since the change tagged as\n\"123\". It cannot be an empty string.</p><p>Not all providers are able to\nprovide a tag, but if the file system has a changelog, then the tag can be\neg. a change number, or a revision number.</p><p>Note that if a parent\ndirectory is removed, then all descendant entries are also removed, and if\nthey are watched, then the API must be notified about the fact. Also, if a\ndirectory is renamed, then all descendant entries are in fact removed, as\nthere is no entry under their original paths anymore.</p><p>In case of an\nerror, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set will a corresponding error\ncode.</p>",
        "name": "notify"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "UnmountOptions",
            "referenceLink": "#type-UnmountOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>A generic result callback to indicate success or failure.</p>"
          }
        ],
        "comment": "<p>Unmounts a file system with the given <code>fileSystemId</code>. It must\nbe called after <a href=\"#event-onUnmountRequested\"><code>onUnmountRequested</code></a> is invoked. Also, the providing\nextension can decide to perform unmounting if not requested (eg. in case of\nlost connection, or a file error).</p><p>In case of an error, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set with a corresponding error code.</p>",
        "name": "unmount"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "AbortRequestedOptions",
                "referenceLink": "#type-AbortRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [],
                "comment": "<p>Callback to be called by the providing extension in case of a success.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when aborting an operation with <code>operationRequestId</code> is\nrequested. The operation executed with <code>operationRequestId</code>\nmust be immediately stopped and <code>successCallback</code> of this\nabort request executed. If aborting fails, then\n<code>errorCallback</code> must be called. Note, that callbacks of the\naborted operation must not be called, as they will be ignored. Despite\ncalling <code>errorCallback</code>, the request may be forcibly aborted.</p>",
        "name": "onAbortRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "AddWatcherRequestedOptions",
                "referenceLink": "#type-AddWatcherRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [],
                "comment": "<p>Callback to be called by the providing extension in case of a success.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when setting a new directory watcher is requested. If an error\noccurs, then <code>errorCallback</code> must be called.</p>",
        "name": "onAddWatcherRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "CloseFileRequestedOptions",
                "referenceLink": "#type-CloseFileRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [],
                "comment": "<p>Callback to be called by the providing extension in case of a success.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when opening a file previously opened with\n<code>openRequestId</code> is requested to be closed.</p>",
        "name": "onCloseFileRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ConfigureRequestedOptions",
                "referenceLink": "#type-ConfigureRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [],
                "comment": "<p>Callback to be called by the providing extension in case of a success.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when showing a configuration dialog for <code>fileSystemId</code>\nis requested. If it's handled, the\n<code>file_system_provider.configurable</code> manfiest option must be\nset to true.</p>",
        "name": "onConfigureRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "CopyEntryRequestedOptions",
                "referenceLink": "#type-CopyEntryRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [],
                "comment": "<p>Callback to be called by the providing extension in case of a success.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when copying an entry (recursively if a directory) is requested.\nIf an error occurs, then <code>errorCallback</code> must be called.</p>",
        "name": "onCopyEntryRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "CreateDirectoryRequestedOptions",
                "referenceLink": "#type-CreateDirectoryRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [],
                "comment": "<p>Callback to be called by the providing extension in case of a success.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when creating a directory is requested. The operation must fail\nwith the EXISTS error if the target directory already exists. If\n<code>recursive</code> is true, then all of the missing directories on\nthe directory path must be created.</p>",
        "name": "onCreateDirectoryRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "CreateFileRequestedOptions",
                "referenceLink": "#type-CreateFileRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [],
                "comment": "<p>Callback to be called by the providing extension in case of a success.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when creating a file is requested. If the file already exists,\nthen <code>errorCallback</code> must be called with the\n<code>\"EXISTS\"</code> error code.</p>",
        "name": "onCreateFileRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "DeleteEntryRequestedOptions",
                "referenceLink": "#type-DeleteEntryRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [],
                "comment": "<p>Callback to be called by the providing extension in case of a success.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when deleting an entry is requested. If <code>recursive</code> is\ntrue, and the entry is a directory, then all of the entries inside must\nbe recursively deleted as well.</p>",
        "name": "onDeleteEntryRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ExecuteActionRequestedOptions",
                "referenceLink": "#type-ExecuteActionRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [],
                "comment": "<p>Callback to be called by the providing extension in case of a success.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when executing an action for a set of files or directories is\\\nrequested. After the action is completed, <code>successCallback</code>\nmust be called. On error, <code>errorCallback</code> must be called.</p>",
        "name": "onExecuteActionRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "GetActionsRequestedOptions",
                "referenceLink": "#type-GetActionsRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "referenceType": "Action",
                      "referenceLink": "#type-Action"
                    },
                    "optional": false,
                    "name": "actions"
                  }
                ],
                "comment": "<p>Success callback for the <a href=\"#event-onGetActionsRequested\"><code>onGetActionsRequested</code></a> event.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when a list of actions for a set of files or directories at\n<code>entryPaths</code> is requested. All of the returned actions must be\napplicable to each entry. If there are no such actions, an empty array\nshould be returned. The actions must be returned with the\n<code>successCallback</code> call. In case of an error,\n<code>errorCallback</code> must be called.</p>",
        "name": "onGetActionsRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "GetMetadataRequestedOptions",
                "referenceLink": "#type-GetMetadataRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "EntryMetadata",
                    "referenceLink": "#type-EntryMetadata",
                    "optional": false,
                    "name": "metadata"
                  }
                ],
                "comment": "<p>Success callback for the <a href=\"#event-onGetMetadataRequested\"><code>onGetMetadataRequested</code></a> event.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when metadata of a file or a directory at <code>entryPath</code>\nis requested. The metadata must be returned with the\n<code>successCallback</code> call. In case of an error,\n<code>errorCallback</code> must be called.</p>",
        "name": "onGetMetadataRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "function",
                "parameters": [],
                "comment": "<p>Callback to be called by the providing extension in case of a success.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when showing a dialog for mounting a new file system is requested.\nIf the extension/app is a file handler, then this event shouldn't be\nhandled. Instead <code>app.runtime.onLaunched</code> should be handled in\norder to mount new file systems when a file is opened. For multiple\nmounts, the <code>file_system_provider.multiple_mounts</code> manifest\noption must be set to true.</p>",
        "name": "onMountRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "MoveEntryRequestedOptions",
                "referenceLink": "#type-MoveEntryRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [],
                "comment": "<p>Callback to be called by the providing extension in case of a success.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when moving an entry (recursively if a directory) is requested. If\nan error occurs, then <code>errorCallback</code> must be called.</p>",
        "name": "onMoveEntryRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "OpenFileRequestedOptions",
                "referenceLink": "#type-OpenFileRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [],
                "comment": "<p>Callback to be called by the providing extension in case of a success.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when opening a file at <code>filePath</code> is requested. If the\nfile does not exist, then the operation must fail. Maximum number of\nfiles opened at once can be specified with <code>MountOptions</code>.</p>",
        "name": "onOpenFileRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ReadDirectoryRequestedOptions",
                "referenceLink": "#type-ReadDirectoryRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "referenceType": "EntryMetadata",
                      "referenceLink": "#type-EntryMetadata"
                    },
                    "optional": false,
                    "name": "entries"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "optional": false,
                    "name": "hasMore"
                  }
                ],
                "comment": "<p>Success callback for the <a href=\"#event-onReadDirectoryRequested\"><code>onReadDirectoryRequested</code></a> event. If more entries will be returned, then <code>hasMore</code> must be true, and it has to be called again with additional entries. If no more entries are available, then <code>hasMore</code> must be set to false.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when contents of a directory at <code>directoryPath</code> are\nrequested. The results must be returned in chunks by calling the\n<code>successCallback</code> several times. In case of an error,\n<code>errorCallback</code> must be called.</p>",
        "name": "onReadDirectoryRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ReadFileRequestedOptions",
                "referenceLink": "#type-ReadFileRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ArrayBuffer",
                    "optional": false,
                    "name": "data"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "optional": false,
                    "name": "hasMore"
                  }
                ],
                "comment": "<p>Success callback for the <a href=\"#event-onReadFileRequested\"><code>onReadFileRequested</code></a> event. If more data will be returned, then <code>hasMore</code> must be true, and it has to be called again with additional entries. If no more data is available, then <code>hasMore</code> must be set to false.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when reading contents of a file opened previously with\n<code>openRequestId</code> is requested. The results must be returned in\nchunks by calling <code>successCallback</code> several times. In case of\nan error, <code>errorCallback</code> must be called.</p>",
        "name": "onReadFileRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "RemoveWatcherRequestedOptions",
                "referenceLink": "#type-RemoveWatcherRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [],
                "comment": "<p>Callback to be called by the providing extension in case of a success.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when the watcher should be removed. If an error occurs, then\n<code>errorCallback</code> must be called.</p>",
        "name": "onRemoveWatcherRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "TruncateRequestedOptions",
                "referenceLink": "#type-TruncateRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [],
                "comment": "<p>Callback to be called by the providing extension in case of a success.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when truncating a file to a desired length is requested. If an\nerror occurs, then <code>errorCallback</code> must be called.</p>",
        "name": "onTruncateRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "UnmountRequestedOptions",
                "referenceLink": "#type-UnmountRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [],
                "comment": "<p>Callback to be called by the providing extension in case of a success.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when unmounting for the file system with the\n<code>fileSystemId</code> identifier is requested. In the response, the\n<a href=\"#method-unmount\"><code>unmount</code></a> API method must be called together with\n<code>successCallback</code>. If unmounting is not possible (eg. due to a\npending operation), then <code>errorCallback</code> must be called.</p>",
        "name": "onUnmountRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "WriteFileRequestedOptions",
                "referenceLink": "#type-WriteFileRequestedOptions",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [],
                "comment": "<p>Callback to be called by the providing extension in case of a success.</p>",
                "optional": false,
                "name": "successCallback"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "ProviderError",
                    "referenceLink": "#type-ProviderError",
                    "optional": false,
                    "name": "error"
                  }
                ],
                "optional": false,
                "name": "errorCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Raised when writing contents to a file opened previously with\n<code>openRequestId</code> is requested.</p>",
        "name": "onWriteFileRequested"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "fileSystemProvider\n"
    ],
    "platforms": [
      "chromeos"
    ]
  },
  {
    "name": "chrome.fontSettings",
    "shortName": "fontSettings",
    "comment": "<p>Use the <code>chrome.fontSettings</code> API to manage Chrome's font\nsettings.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The display name of the font.</p>",
            "name": "displayName"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The font ID.</p>",
            "name": "fontId"
          }
        ],
        "comment": "<p>Represents a font name.</p>",
        "name": "FontName"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"standard\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"sansserif\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"serif\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"fixed\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"cursive\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"fantasy\""
          }
        ],
        "comment": "<p>A CSS generic font family.</p>",
        "name": "GenericFamily"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"not_controllable\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"controlled_by_other_extensions\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"controllable_by_this_extension\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"controlled_by_this_extension\""
          }
        ],
        "comment": "<p>One of<br><var>not_controllable</var>: cannot be controlled by any\nextension<br><var>controlled_by_other_extensions</var>: controlled by\nextensions with higher\nprecedence<br><var>controllable_by_this_extension</var>: can be controlled by\nthis extension<br><var>controlled_by_this_extension</var>: controlled by this\nextension</p>",
        "name": "LevelOfControl"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Afak\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Arab\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Armi\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Armn\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Avst\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Bali\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Bamu\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Bass\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Batk\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Beng\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Blis\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Bopo\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Brah\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Brai\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Bugi\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Buhd\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Cakm\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Cans\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Cari\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Cham\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Cher\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Cirt\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Copt\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Cprt\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Cyrl\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Cyrs\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Deva\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Dsrt\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Dupl\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Egyd\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Egyh\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Egyp\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Elba\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Ethi\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Geor\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Geok\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Glag\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Goth\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Gran\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Grek\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Gujr\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Guru\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Hang\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Hani\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Hano\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Hans\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Hant\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Hebr\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Hluw\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Hmng\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Hung\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Inds\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Ital\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Java\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Jpan\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Jurc\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Kali\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Khar\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Khmr\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Khoj\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Knda\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Kpel\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Kthi\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Lana\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Laoo\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Latf\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Latg\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Latn\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Lepc\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Limb\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Lina\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Linb\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Lisu\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Loma\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Lyci\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Lydi\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Mand\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Mani\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Maya\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Mend\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Merc\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Mero\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Mlym\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Moon\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Mong\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Mroo\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Mtei\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Mymr\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Narb\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Nbat\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Nkgb\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Nkoo\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Nshu\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Ogam\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Olck\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Orkh\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Orya\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Osma\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Palm\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Perm\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Phag\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Phli\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Phlp\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Phlv\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Phnx\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Plrd\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Prti\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Rjng\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Roro\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Runr\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Samr\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Sara\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Sarb\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Saur\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Sgnw\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Shaw\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Shrd\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Sind\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Sinh\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Sora\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Sund\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Sylo\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Syrc\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Syre\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Syrj\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Syrn\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Tagb\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Takr\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Tale\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Talu\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Taml\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Tang\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Tavt\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Telu\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Teng\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Tfng\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Tglg\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Thaa\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Thai\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Tibt\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Tirh\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Ugar\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Vaii\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Visp\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Wara\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Wole\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Xpeo\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Xsux\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Yiii\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Zmth\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Zsym\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Zyyy\""
          }
        ],
        "comment": "<p>An ISO 15924 script code. The default, or global, script is represented by\nscript code \"Zyyy\".</p>",
        "name": "ScriptCode"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "object",
            "optional": false,
            "name": "details",
            "comment": "<p>This parameter is currently unused.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Clears the default fixed font size set by this extension, if any.</p>",
        "name": "clearDefaultFixedFontSize"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "object",
            "optional": false,
            "name": "details",
            "comment": "<p>This parameter is currently unused.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Clears the default font size set by this extension, if any.</p>",
        "name": "clearDefaultFontSize"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "reference",
                "referenceType": "GenericFamily",
                "referenceLink": "#type-GenericFamily",
                "comment": "<p>The generic font family for which the font should be cleared.</p>",
                "name": "genericFamily"
              },
              {
                "type": "reference",
                "referenceType": "ScriptCode",
                "referenceLink": "#type-ScriptCode",
                "comment": "<p>The script for which the font should be cleared. If omitted, the global\nscript font setting is cleared.</p>",
                "optional": true,
                "name": "script"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Clears the font set by this extension, if any.</p>",
        "name": "clearFont"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "object",
            "optional": false,
            "name": "details",
            "comment": "<p>This parameter is currently unused.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Clears the minimum font size set by this extension, if any.</p>",
        "name": "clearMinimumFontSize"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "object",
            "optional": false,
            "name": "details",
            "comment": "<p>This parameter is currently unused.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "reference",
                    "referenceType": "LevelOfControl",
                    "referenceLink": "#type-LevelOfControl",
                    "comment": "<p>The level of control this extension has over the setting.</p>",
                    "name": "levelOfControl"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The font size in pixels.</p>",
                    "name": "pixelSize"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the default size for fixed width fonts.</p>",
        "name": "getDefaultFixedFontSize"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "object",
            "optional": false,
            "name": "details",
            "comment": "<p>This parameter is currently unused.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "reference",
                    "referenceType": "LevelOfControl",
                    "referenceLink": "#type-LevelOfControl",
                    "comment": "<p>The level of control this extension has over the setting.</p>",
                    "name": "levelOfControl"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The font size in pixels.</p>",
                    "name": "pixelSize"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the default font size.</p>",
        "name": "getDefaultFontSize"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "reference",
                "referenceType": "GenericFamily",
                "referenceLink": "#type-GenericFamily",
                "comment": "<p>The generic font family for which the font should be retrieved.</p>",
                "name": "genericFamily"
              },
              {
                "type": "reference",
                "referenceType": "ScriptCode",
                "referenceLink": "#type-ScriptCode",
                "comment": "<p>The script for which the font should be retrieved. If omitted, the font\nsetting for the global script (script code \"Zyyy\") is retrieved.</p>",
                "optional": true,
                "name": "script"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The font ID. Rather than the literal font ID preference value, this may be\nthe ID of the font that the system resolves the preference value to. So,\n<var>fontId</var> can differ from the font passed to <code>setFont</code>,\nif, for example, the font is not available on the system. The empty string\nsignifies fallback to the global script font setting.</p>",
                    "name": "fontId"
                  },
                  {
                    "type": "reference",
                    "referenceType": "LevelOfControl",
                    "referenceLink": "#type-LevelOfControl",
                    "comment": "<p>The level of control this extension has over the setting.</p>",
                    "name": "levelOfControl"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the font for a given script and generic font family.</p>",
        "name": "getFont"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "FontName",
                  "referenceLink": "#type-FontName"
                },
                "optional": false,
                "name": "results"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets a list of fonts on the system.</p>",
        "name": "getFontList"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "object",
            "optional": false,
            "name": "details",
            "comment": "<p>This parameter is currently unused.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "reference",
                    "referenceType": "LevelOfControl",
                    "referenceLink": "#type-LevelOfControl",
                    "comment": "<p>The level of control this extension has over the setting.</p>",
                    "name": "levelOfControl"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The font size in pixels.</p>",
                    "name": "pixelSize"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the minimum font size.</p>",
        "name": "getMinimumFontSize"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The font size in pixels.</p>",
                "name": "pixelSize"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets the default size for fixed width fonts.</p>",
        "name": "setDefaultFixedFontSize"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The font size in pixels.</p>",
                "name": "pixelSize"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets the default font size.</p>",
        "name": "setDefaultFontSize"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The font ID. The empty string means to fallback to the global script font\nsetting.</p>",
                "name": "fontId"
              },
              {
                "type": "reference",
                "referenceType": "GenericFamily",
                "referenceLink": "#type-GenericFamily",
                "comment": "<p>The generic font family for which the font should be set.</p>",
                "name": "genericFamily"
              },
              {
                "type": "reference",
                "referenceType": "ScriptCode",
                "referenceLink": "#type-ScriptCode",
                "comment": "<p>The script code which the font should be set. If omitted, the font setting\nfor the global script (script code \"Zyyy\") is set.</p>",
                "optional": true,
                "name": "script"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets the font for a given script and generic font family.</p>",
        "name": "setFont"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The font size in pixels.</p>",
                "name": "pixelSize"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets the minimum font size.</p>",
        "name": "setMinimumFontSize"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "reference",
                    "referenceType": "LevelOfControl",
                    "referenceLink": "#type-LevelOfControl",
                    "comment": "<p>The level of control this extension has over the setting.</p>",
                    "name": "levelOfControl"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The font size in pixels.</p>",
                    "name": "pixelSize"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the default fixed font size setting changes.</p>",
        "name": "onDefaultFixedFontSizeChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "reference",
                    "referenceType": "LevelOfControl",
                    "referenceLink": "#type-LevelOfControl",
                    "comment": "<p>The level of control this extension has over the setting.</p>",
                    "name": "levelOfControl"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The font size in pixels.</p>",
                    "name": "pixelSize"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the default font size setting changes.</p>",
        "name": "onDefaultFontSizeChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The font ID. See the description in <code>getFont</code>.</p>",
                    "name": "fontId"
                  },
                  {
                    "type": "reference",
                    "referenceType": "GenericFamily",
                    "referenceLink": "#type-GenericFamily",
                    "comment": "<p>The generic font family for which the font setting has changed.</p>",
                    "name": "genericFamily"
                  },
                  {
                    "type": "reference",
                    "referenceType": "LevelOfControl",
                    "referenceLink": "#type-LevelOfControl",
                    "comment": "<p>The level of control this extension has over the setting.</p>",
                    "name": "levelOfControl"
                  },
                  {
                    "type": "reference",
                    "referenceType": "ScriptCode",
                    "referenceLink": "#type-ScriptCode",
                    "comment": "<p>The script code for which the font setting has changed.</p>",
                    "optional": true,
                    "name": "script"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a font setting changes.</p>",
        "name": "onFontChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "reference",
                    "referenceType": "LevelOfControl",
                    "referenceLink": "#type-LevelOfControl",
                    "comment": "<p>The level of control this extension has over the setting.</p>",
                    "name": "levelOfControl"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The font size in pixels.</p>",
                    "name": "pixelSize"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the minimum font size setting changes.</p>",
        "name": "onMinimumFontSizeChanged"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "fontSettings\n"
    ]
  },
  {
    "name": "chrome.gcm",
    "shortName": "gcm",
    "comment": "<p>Use <code>chrome.gcm</code> to enable apps and extensions to send and receive\nmessages through the <a\nhref='http://developer.android.com/google/gcm/'>Google Cloud Messaging\nService</a>.</p>",
    "types": [],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "4096",
        "comment": "<p>The maximum size (in bytes) of all key/value pairs in a message.</p>",
        "name": "MAX_MESSAGE_SIZE"
      }
    ],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "minLength": 1,
            "optional": false,
            "name": "senderIds",
            "comment": "<p>A list of server IDs that are allowed to send messages to the application. It should contain at least one and no more than 100 sender IDs.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "registrationId",
                "comment": "<p>A registration ID assigned to the application by the GCM.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Function called when registration completes. It should check <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> for error when <code>registrationId</code> is empty.</p>"
          }
        ],
        "comment": "<p>Registers the application with GCM. The registration ID will be returned by\nthe <code>callback</code>. If <code>register</code> is called again with the\nsame list of <code>senderIds</code>, the same registration ID will be\nreturned.</p>",
        "name": "register"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "object",
                "properties": [],
                "comment": "<p>Message data to send to the server. Case-insensitive <code>goog.</code> and\n<code>google</code>, as well as case-sensitive <code>collapse_key</code> are\ndisallowed as key prefixes. Sum of all key/value pairs should not exceed\n<a href=\"#property-MAX_MESSAGE_SIZE\"><code>MAX_MESSAGE_SIZE</code></a>.</p>",
                "name": "data"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The ID of the server to send the message to as assigned by <a\nhref='https://code.google.com/apis/console'>Google API Console</a>.</p>",
                "name": "destinationId"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The ID of the message. It must be unique for each message in scope of the\napplications. See the <a href=\"../../cloudMessaging/#send_messages\">Cloud Messaging\ndocumentation</a> for advice for picking and handling an ID.</p>",
                "name": "messageId"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Time-to-live of the message in seconds. If it is not possible to send the\nmessage within that time, an onSendError event will be raised. A time-to-live\nof 0 indicates that the message should be sent immediately or fail if it's\nnot possible. The maximum and a default value of time-to-live is 86400\nseconds (1 day).</p>",
                "optional": true,
                "name": "timeToLive"
              }
            ],
            "optional": false,
            "name": "message",
            "comment": "<p>A message to send to the other party via GCM.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "messageId",
                "comment": "<p>The ID of the message that the callback was issued for.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>A function called after the message is successfully queued for sending. <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> should be checked, to ensure a message was sent without problems.</p>"
          }
        ],
        "comment": "<p>Sends a message according to its contents.</p>",
        "name": "send"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>A function called after the unregistration completes. Unregistration was successful if <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> is not set.</p>"
          }
        ],
        "comment": "<p>Unregisters the application from GCM.</p>",
        "name": "unregister"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The collapse key of a message. See <a\nhref=\"../../cloudMessaging/#collapsible_messages\">Collapsible Messages</a> section\nof Cloud Messaging documentation for details.</p>",
                    "optional": true,
                    "name": "collapseKey"
                  },
                  {
                    "type": "object",
                    "properties": [],
                    "comment": "<p>The message data.</p>",
                    "name": "data"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The sender who issued the message.</p>",
                    "optional": true,
                    "name": "from"
                  }
                ],
                "comment": "<p>A message received from another party via GCM.</p>",
                "optional": false,
                "name": "message"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a message is received through GCM.</p>",
        "name": "onMessage"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a GCM server had to delete messages sent by an app server to\nthe application. See <a\nhref=\"../../cloudMessaging/#messages_deleted_event\">Messages deleted event</a>\nsection of Cloud Messaging documentation for details on handling this\nevent.</p>",
        "name": "onMessagesDeleted"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "object",
                    "properties": [],
                    "comment": "<p>Additional details related to the error, when available.</p>",
                    "name": "details"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The error message describing the problem.</p>",
                    "name": "errorMessage"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The ID of the message with this error, if error is related to a specific\nmessage.</p>",
                    "optional": true,
                    "name": "messageId"
                  }
                ],
                "comment": "<p>An error that occured while trying to send the message either in Chrome or on the GCM server. Application can retry sending the message with a reasonable backoff and possibly longer time-to-live.</p>",
                "optional": false,
                "name": "error"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when it was not possible to send a message to the GCM server.</p>",
        "name": "onSendError"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "gcm\n"
    ]
  },
  {
    "name": "chrome.hid",
    "shortName": "hid",
    "comment": "<p>Use the <code>chrome.hid</code> API to interact with connected HID devices.\nThis API provides access to HID operations from within the context of an\napp.\nUsing this API, apps can function as drivers for hardware devices.\nErrors generated by this API are reported by setting\n<a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> and executing the function's regular callback. The\ncallback's regular parameters will be undefined in this case.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Device product ID, only checked only if the vendor ID matches.</p>",
            "optional": true,
            "name": "productId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>HID usage identifier, checked only if the HID usage page matches.</p>",
            "optional": true,
            "name": "usage"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>HID usage page identifier.</p>",
            "optional": true,
            "name": "usagePage"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Device vendor ID.</p>",
            "optional": true,
            "name": "vendorId"
          }
        ],
        "name": "DeviceFilter"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "DeviceFilter",
              "referenceLink": "#type-DeviceFilter"
            },
            "comment": "<p>Filter the list of devices presented to the user. If multiple filters are\nprovided devices matching any filter will be displayed.</p>",
            "optional": true,
            "name": "filters"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Allow the user to select multiple devices.</p>",
            "optional": true,
            "name": "multiple"
          }
        ],
        "name": "DevicePromptOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "DeviceFilter",
              "referenceLink": "#type-DeviceFilter"
            },
            "comment": "<p>A device matching any given filter will be returned. An empty filter list\nwill return all devices the app has permission for.</p>",
            "optional": true,
            "name": "filters"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "deprecated": "Equivalent to setting <a href=\"#type-DeviceFilter-productId\"><code>DeviceFilter.productId</code></a>.\n",
            "optional": true,
            "name": "productId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "deprecated": "Equivalent to setting <a href=\"#type-DeviceFilter-vendorId\"><code>DeviceFilter.vendorId</code></a>.\n",
            "optional": true,
            "name": "vendorId"
          }
        ],
        "name": "GetDevicesOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "number"
            },
            "comment": "<p>Report IDs which belong to the collection and to its children.</p>",
            "name": "reportIds"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Page-defined usage identifier.</p>",
            "name": "usage"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>HID usage page identifier.</p>",
            "name": "usagePage"
          }
        ],
        "name": "HidCollectionInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The opaque ID used to identify this connection in all other functions.</p>",
            "name": "connectionId"
          }
        ],
        "name": "HidConnectInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "HidCollectionInfo",
              "referenceLink": "#type-HidCollectionInfo"
            },
            "comment": "<p>Top-level collections from this device's report descriptors.</p>",
            "name": "collections"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Opaque device ID.</p>",
            "name": "deviceId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Top-level collection's maximum feature report size.</p>",
            "name": "maxFeatureReportSize"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Top-level collection's maximum input report size.</p>",
            "name": "maxInputReportSize"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Top-level collection's maximum output report size.</p>",
            "name": "maxOutputReportSize"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Product ID.</p>",
            "name": "productId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The product name read from the device, if available.</p>",
            "name": "productName"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>Raw device report descriptor (not available on Windows).</p>",
            "name": "reportDescriptor"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The serial number read from the device, if available.</p>",
            "name": "serialNumber"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Vendor ID.</p>",
            "name": "vendorId"
          }
        ],
        "name": "HidDeviceInfo"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "deviceId",
            "comment": "<p>The <a href=\"#type-HidDeviceInfo-deviceId\"><code>HidDeviceInfo.deviceId</code></a> of the device to open.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "HidConnectInfo",
                "referenceLink": "#type-HidConnectInfo",
                "optional": false,
                "name": "connection"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Open a connection to an HID device for communication.</p>",
        "name": "connect"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "connectionId",
            "comment": "<p>The <code>connectionId</code> returned by <a href=\"#method-connect\"><code>connect</code></a>.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Disconnect from a device. Invoking operations on a device after calling this\nis safe but has no effect.</p>",
        "name": "disconnect"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "GetDevicesOptions",
            "referenceLink": "#type-GetDevicesOptions",
            "optional": false,
            "name": "options",
            "comment": "<p>The properties to search for on target devices.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "HidDeviceInfo",
                  "referenceLink": "#type-HidDeviceInfo"
                },
                "optional": false,
                "name": "devices"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Enumerate connected HID devices.</p>",
        "name": "getDevices"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "DevicePromptOptions",
            "referenceLink": "#type-DevicePromptOptions",
            "optional": true,
            "name": "options",
            "comment": "<p>Configuration of the device picker dialog box.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "HidDeviceInfo",
                  "referenceLink": "#type-HidDeviceInfo"
                },
                "optional": false,
                "name": "devices"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Invoked with a list of chosen <code>Device</code>s.</p>"
          }
        ],
        "comment": "<p>Presents a device picker to the user and returns <a href=\"#type-HidDeviceInfo\"><code>HidDeviceInfo</code></a>\nobjects for the devices selected. If the user cancels the picker devices will\nbe empty. A user gesture is required for the dialog to display. Without a\nuser gesture, the callback will run as though the user cancelled. If multiple\nfilters are provided devices matching any filter will be displayed.</p>",
        "name": "getUserSelectedDevices"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "connectionId",
            "comment": "<p>The <code>connectionId</code> returned by <a href=\"#method-connect\"><code>connect</code></a>.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "reportId",
                "comment": "<p>The report ID or <code>0</code> if none.</p>"
              },
              {
                "type": "reference",
                "referenceType": "ArrayBuffer",
                "optional": false,
                "name": "data",
                "comment": "<p>The report data, the report ID prefix (if present) is removed.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Receive the next input report from the device.</p>",
        "name": "receive"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "connectionId",
            "comment": "<p>The <code>connectionId</code> returned by <a href=\"#method-connect\"><code>connect</code></a>.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "reportId",
            "comment": "<p>The report ID, or <code>0</code> if none.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ArrayBuffer",
                "optional": false,
                "name": "data",
                "comment": "<p>The report data, including a report ID prefix if one is sent by the device.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Request a feature report from the device.</p>",
        "name": "receiveFeatureReport"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "connectionId",
            "comment": "<p>The <code>connectionId</code> returned by <a href=\"#method-connect\"><code>connect</code></a>.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "reportId",
            "comment": "<p>The report ID to use, or <code>0</code> if none.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "data",
            "comment": "<p>The report data.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Send an output report to the device.</p><p><em>Note:</em> Do not include a\nreport ID prefix in <code>data</code>. It will be added if necessary.</p>",
        "name": "send"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "connectionId",
            "comment": "<p>The <code>connectionId</code> returned by <a href=\"#method-connect\"><code>connect</code></a>.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "reportId",
            "comment": "<p>The report ID to use, or <code>0</code> if none.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "data",
            "comment": "<p>The report data.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Send a feature report to the device.</p><p><em>Note:</em> Do not include a\nreport ID prefix in <code>data</code>. It will be added if necessary.</p>",
        "name": "sendFeatureReport"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "HidDeviceInfo",
                "referenceLink": "#type-HidDeviceInfo",
                "optional": false,
                "name": "device"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event generated when a device is added to the system. Events are only\nbroadcast to apps and extensions that have permission to access the\ndevice. Permission may have been granted at install time or when the user\naccepted an optional permission (see <a href=\"../permissions/#method-request\"><code>permissions.request</code></a>).</p>",
        "name": "onDeviceAdded"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "deviceId",
                "comment": "<p>The <code>deviceId</code> property of the device passed to <a href=\"#event-onDeviceAdded\"><code>onDeviceAdded</code></a>.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event generated when a device is removed from the system. See <a href=\"#event-onDeviceAdded\"><code>onDeviceAdded</code></a> for which events are delivered.</p>",
        "name": "onDeviceRemoved"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "hid\n"
    ]
  },
  {
    "name": "chrome.history",
    "shortName": "history",
    "comment": "<p>Use the <code>chrome.history</code> API to interact with the browser's record\nof visited pages. You can add, remove, and query for URLs in the browser's\nhistory. To override the history page with your own version, see <a\nhref=\"../../override/\">Override Pages</a>.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The unique identifier for the item.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>When this page was last loaded, represented in milliseconds since the epoch.</p>",
            "optional": true,
            "name": "lastVisitTime"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The title of the page when it was last loaded.</p>",
            "optional": true,
            "name": "title"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of times the user has navigated to this page by typing in the\naddress.</p>",
            "optional": true,
            "name": "typedCount"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL navigated to by a user.</p>",
            "optional": true,
            "name": "url"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of times the user has navigated to this page.</p>",
            "optional": true,
            "name": "visitCount"
          }
        ],
        "comment": "<p>An object encapsulating one result of a history query.</p>",
        "name": "HistoryItem"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL for the operation. It must be in the format as returned from a call\nto history.search.</p>",
            "name": "url"
          }
        ],
        "name": "UrlDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The unique identifier for the item.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The visit ID of the referrer.</p>",
            "name": "referringVisitId"
          },
          {
            "type": "reference",
            "referenceType": "TransitionType",
            "referenceLink": "#type-TransitionType",
            "comment": "<p>The <a href='#transition_types'>transition type</a> for this visit from its\nreferrer.</p>",
            "name": "transition"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The unique identifier for this visit.</p>",
            "name": "visitId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>When this visit occurred, represented in milliseconds since the epoch.</p>",
            "optional": true,
            "name": "visitTime"
          }
        ],
        "comment": "<p>An object encapsulating one visit to a URL.</p>",
        "name": "VisitItem"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"link\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"typed\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"auto_bookmark\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"auto_subframe\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"manual_subframe\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"generated\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"auto_toplevel\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"form_submit\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"reload\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"keyword\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"keyword_generated\""
          }
        ],
        "comment": "<p>The <a href='#transition_types'>transition type</a> for this visit from its\nreferrer.</p>",
        "name": "TransitionType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "UrlDetails",
            "referenceLink": "#type-UrlDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Adds a URL to the history at the current time with a <a\nhref='#transition_types'>transition type</a> of \"link\".</p>",
        "name": "addUrl"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Deletes all items from the history.</p>",
        "name": "deleteAll"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Items added to history before this date, represented in milliseconds since\nthe epoch.</p>",
                "name": "endTime"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Items added to history after this date, represented in milliseconds since the\nepoch.</p>",
                "name": "startTime"
              }
            ],
            "optional": false,
            "name": "range"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Removes all items within the specified date range from the history.  Pages\nwill not be removed from the history unless all visits fall within the range.</p>",
        "name": "deleteRange"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "UrlDetails",
            "referenceLink": "#type-UrlDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Removes all occurrences of the given URL from the history.</p>",
        "name": "deleteUrl"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "UrlDetails",
            "referenceLink": "#type-UrlDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "VisitItem",
                  "referenceLink": "#type-VisitItem"
                },
                "optional": false,
                "name": "results"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves information about visits to a URL.</p>",
        "name": "getVisits"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Limit results to those visited before this date, represented in milliseconds\nsince the epoch.</p>",
                "optional": true,
                "name": "endTime"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The maximum number of results to retrieve.  Defaults to 100.</p>",
                "optional": true,
                "name": "maxResults"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Limit results to those visited after this date, represented in milliseconds\nsince the epoch. If not specified, this defaults to 24 hours in the past.</p>",
                "optional": true,
                "name": "startTime"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>A free-text query to the history service.  Leave empty to retrieve all pages.</p>",
                "name": "text"
              }
            ],
            "optional": false,
            "name": "query"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "HistoryItem",
                  "referenceLink": "#type-HistoryItem"
                },
                "optional": false,
                "name": "results"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Searches the history for the last visit time of each page matching the query.</p>",
        "name": "search"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>True if all history was removed.  If true, then urls will be empty.</p>",
                    "name": "allHistory"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "primitive",
                      "primitiveType": "string"
                    },
                    "optional": true,
                    "name": "urls"
                  }
                ],
                "optional": false,
                "name": "removed"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when one or more URLs are removed from the history service.  When\nall visits have been removed the URL is purged from history.</p>",
        "name": "onVisitRemoved"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "HistoryItem",
                "referenceLink": "#type-HistoryItem",
                "optional": false,
                "name": "result"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a URL is visited, providing the HistoryItem data for that URL.\nThis event fires before the page has loaded.</p>",
        "name": "onVisited"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "history\n"
    ]
  },
  {
    "name": "chrome.i18n",
    "shortName": "i18n",
    "comment": "<p>Use the <code>chrome.i18n</code> infrastructure to implement\ninternationalization across your whole app or extension.</p>",
    "types": [
      {
        "type": "primitive",
        "primitiveType": "string",
        "comment": "<p>An ISO language code such as <code>en</code> or <code>fr</code>. For a\ncomplete list of languages supported by this method, see <a\nhref='http://src.chromium.org/viewvc/chrome/trunk/src/third_party/cld/languages/internal/languages.cc'>kLanguageInfoTable</a>. For an unknown language, <code>und</code> will be returned, which means that [percentage] of the text is unknown to CLD</p>",
        "name": "LanguageCode"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "text",
            "comment": "<p>User input string to be translated.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>CLD detected language reliability</p>",
                    "name": "isReliable"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "object",
                      "properties": [
                        {
                          "type": "reference",
                          "referenceType": "LanguageCode",
                          "referenceLink": "#type-LanguageCode",
                          "name": "language"
                        },
                        {
                          "type": "primitive",
                          "primitiveType": "number",
                          "comment": "<p>The percentage of the detected language</p>",
                          "name": "percentage"
                        }
                      ]
                    },
                    "comment": "<p>array of detectedLanguage</p>",
                    "name": "languages"
                  }
                ],
                "optional": false,
                "name": "result",
                "comment": "<p>LanguageDetectionResult object that holds detected langugae reliability and array of DetectedLanguage</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Detects the language of the provided text using CLD.</p>",
        "name": "detectLanguage"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "LanguageCode",
                  "referenceLink": "#type-LanguageCode"
                },
                "optional": false,
                "name": "languages",
                "comment": "<p>Array of LanguageCode</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the accept-languages of the browser. This is different from the locale\nused by the browser; to get the locale, use <a href=\"#method-getUILanguage\"><code>getUILanguage</code></a>.</p>",
        "name": "getAcceptLanguages"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "messageName",
            "comment": "<p>The name of the message, as specified in the <a href='i18n-messages'><code>messages.json</code></a> file.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "any",
            "optional": false,
            "name": "substitutions",
            "comment": "<p>Up to 9 substitution strings, if the message requires any.</p>"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Escape <code>&lt;</code> in translation to <code>&amp;lt;</code>. This\napplies only to the message itself, not to the placeholders. Developers might\nwant to use this if the translation is used in an HTML context. Closure\nTemplates used with Closure Compiler generate this automatically.</p>",
                "optional": true,
                "name": "escapeLt"
              }
            ],
            "optional": false,
            "name": "options"
          }
        ],
        "comment": "<p>Gets the localized string for the specified message. If the message is\nmissing, this method returns an empty string (''). If the format of the\n<code>getMessage()</code> call is wrong &mdash; for example,\n<em>messageName</em> is not a string or the <em>substitutions</em> array has\nmore than 9 elements &mdash; this method returns <code>undefined</code>.</p>",
        "returnType": {
          "type": "primitive",
          "primitiveType": "string",
          "name": "returns",
          "comment": "<p>Message localized for current locale.</p>"
        },
        "name": "getMessage"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Gets the browser UI language of the browser. This is different from <a href=\"#method-getAcceptLanguages\"><code>getAcceptLanguages</code></a> which returns the preferred user languages.</p>",
        "returnType": {
          "type": "primitive",
          "primitiveType": "string",
          "name": "returns",
          "comment": "<p>The browser UI language code such as en-US or fr-FR.</p>"
        },
        "name": "getUILanguage"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.identity",
    "shortName": "identity",
    "comment": "<p>Use the <code>chrome.identity</code> API to get OAuth2 access tokens.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A unique identifier for the account. This ID will not change for the lifetime\nof the account.</p>",
            "name": "id"
          }
        ],
        "name": "AccountInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The specific token that should be removed from the cache.</p>",
            "name": "token"
          }
        ],
        "name": "InvalidTokenDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "AccountStatus",
            "referenceLink": "#type-AccountStatus",
            "comment": "<p>A status of the primary account signed into a profile whose\n<code>ProfileUserInfo</code> should be returned. Defaults to\n<code>SYNC</code> account status.</p>",
            "optional": true,
            "name": "accountStatus"
          }
        ],
        "name": "ProfileDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>An email address for the user account signed into the current profile. Empty\nif the user is not signed in or the <code>identity.email</code> manifest\npermission is not specified.</p>",
            "name": "email"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A unique identifier for the account. This ID will not change for the lifetime\nof the account. Empty if the user is not signed in or (in M41+) the\n<code>identity.email</code> manifest permission is not specified.</p>",
            "name": "id"
          }
        ],
        "name": "ProfileUserInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "AccountInfo",
            "referenceLink": "#type-AccountInfo",
            "comment": "<p>The account ID whose token should be returned. If not specified, the function\nwill use an account from the Chrome profile: the Sync account if there is\none, or otherwise the first Google web account.</p>",
            "optional": true,
            "name": "account"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The <code>enableGranularPermissions</code> flag allows extensions to opt-in\nearly to the granular permissions consent screen, in which requested\npermissions are granted or denied individually.</p>",
            "optional": true,
            "name": "enableGranularPermissions"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Fetching a token may require the user to sign-in to Chrome, or approve the\napplication's requested scopes. If the interactive flag is <code>true</code>,\n<code>getAuthToken</code> will prompt the user as necessary. When the flag is\n<code>false</code> or omitted, <code>getAuthToken</code> will return failure\nany time a prompt would be required.</p>",
            "optional": true,
            "name": "interactive"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>A list of OAuth2 scopes to request.</p><p>When the <code>scopes</code>\nfield is present, it overrides the list of scopes specified in\nmanifest.json.</p>",
            "optional": true,
            "name": "scopes"
          }
        ],
        "name": "TokenDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether to launch auth flow in interactive mode.</p><p>Since some auth\nflows may immediately redirect to a result URL,\n<code>launchWebAuthFlow</code> hides its web view until the first navigation\neither redirects to the final URL, or finishes loading a page meant to be\ndisplayed.</p><p>If the interactive flag is <code>true</code>, the window\nwill be displayed when a page load completes. If the flag is\n<code>false</code> or omitted, <code>launchWebAuthFlow</code> will return\nwith an error if the initial navigation does not complete the flow.</p>",
            "optional": true,
            "name": "interactive"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL that initiates the auth flow.</p>",
            "name": "url"
          }
        ],
        "name": "WebAuthFlowDetails"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"SYNC\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ANY\""
          }
        ],
        "name": "AccountStatus"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the state has been cleared.</p>"
          }
        ],
        "comment": "<p>Resets the state of the Identity API: <ul>   <li>Removes all OAuth2 access\ntokens from the token cache</li>   <li>Removes user's account\npreferences</li>   <li>De-authorizes the user from all auth flows</li> </ul></p>",
        "name": "clearAllCachedAuthTokens"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "AccountInfo",
                  "referenceLink": "#type-AccountInfo"
                },
                "optional": false,
                "name": "accounts"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves a list of AccountInfo objects describing the accounts present on\nthe profile.</p><p><code>getAccounts</code> is only supported on dev\nchannel.</p>",
        "name": "getAccounts"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "TokenDetails",
            "referenceLink": "#type-TokenDetails",
            "optional": false,
            "name": "details",
            "comment": "<p>Token options.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "token"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                },
                "optional": false,
                "name": "grantedScopes"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with an OAuth2 access token as specified by the manifest, or undefined if there was an error. The <code>grantedScopes</code> parameter is populated since Chrome 87. When available, this parameter contains the list of granted scopes corresponding with the returned token.</p>"
          }
        ],
        "comment": "<p>Gets an OAuth2 access token using the client ID and scopes specified in\nthe <a href=\"app_identity.html#update_manifest\"><code>oauth2</code> section\nof manifest.json</a>.</p><p>The Identity API caches access tokens in memory,\nso it's ok to call <code>getAuthToken</code> non-interactively any time a\ntoken is required. The token cache automatically handles\nexpiration.</p><p>For a good user experience it is important interactive\ntoken requests are initiated by UI in your app explaining what the\nauthorization is for. Failing to do this will cause your users to get\nauthorization requests, or Chrome sign in screens if they are not signed in,\nwith with no context. In particular, do not use <code>getAuthToken</code>\ninteractively when your app is first launched.</p>",
        "name": "getAuthToken"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ProfileDetails",
            "referenceLink": "#type-ProfileDetails",
            "optional": true,
            "name": "details",
            "comment": "<p>Profile options.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ProfileUserInfo",
                "referenceLink": "#type-ProfileUserInfo",
                "optional": false,
                "name": "userInfo"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the <code>ProfileUserInfo</code> of the primary Chrome account, of an empty <code>ProfileUserInfo</code> if the account with given <code>details</code> doesn't exist.</p>"
          }
        ],
        "comment": "<p>Retrieves email address and obfuscated gaia id of the user signed into a\nprofile.</p><p>Requires the <code>identity.email</code> manifest permission.\nOtherwise, returns an empty result.</p><p>This API is different from\nidentity.getAccounts in two ways. The information returned is available\noffline, and it only applies to the primary account for the profile.</p>",
        "name": "getProfileUserInfo"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "path",
            "comment": "<p>The path appended to the end of the generated URL.</p>"
          }
        ],
        "comment": "<p>Generates a redirect URL to be used in |launchWebAuthFlow|.</p><p>The\ngenerated URLs match the pattern\n<code>https://&lt;app-id&gt;.chromiumapp.org/*</code>.</p>",
        "returnType": {
          "type": "primitive",
          "primitiveType": "string",
          "name": "returns"
        },
        "name": "getRedirectURL"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "WebAuthFlowDetails",
            "referenceLink": "#type-WebAuthFlowDetails",
            "optional": false,
            "name": "details",
            "comment": "<p>WebAuth flow options.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "responseUrl"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the URL redirected back to your application.</p>"
          }
        ],
        "comment": "<p>Starts an auth flow at the specified URL.</p><p>This method enables auth\nflows with non-Google identity providers by launching a web view and\nnavigating it to the first URL in the provider's auth flow. When the provider\nredirects to a URL matching the pattern\n<code>https://&lt;app-id&gt;.chromiumapp.org/*</code>, the window will close,\nand the final redirect URL will be passed to the <var>callback</var>\nfunction.</p><p>For a good user experience it is important interactive auth\nflows are initiated by UI in your app explaining what the authorization is\nfor. Failing to do this will cause your users to get authorization requests\nwith no context. In particular, do not launch an interactive auth flow when\nyour app is first launched.</p>",
        "name": "launchWebAuthFlow"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "InvalidTokenDetails",
            "referenceLink": "#type-InvalidTokenDetails",
            "optional": false,
            "name": "details",
            "comment": "<p>Token information.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the token has been removed from the cache.</p>"
          }
        ],
        "comment": "<p>Removes an OAuth2 access token from the Identity API's token\ncache.</p><p>If an access token is discovered to be invalid, it should be\npassed to removeCachedAuthToken to remove it from the cache. The app may then\nretrieve a fresh token with <code>getAuthToken</code>.</p>",
        "name": "removeCachedAuthToken"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "AccountInfo",
                "referenceLink": "#type-AccountInfo",
                "optional": false,
                "name": "account"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "signedIn"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when signin state changes for an account on the user's profile.</p>",
        "name": "onSignInChanged"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "identity\n"
    ]
  },
  {
    "name": "chrome.idle",
    "shortName": "idle",
    "comment": "<p>Use the <code>chrome.idle</code> API to detect when the machine's idle state\nchanges.</p>",
    "types": [
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"active\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"idle\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"locked\""
          }
        ],
        "name": "IdleState"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "delay",
                "comment": "<p>Time, in seconds, until the screen is locked automatically while idle. This is zero if the screen never locks automatically.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the time, in seconds, it takes until the screen is locked automatically\nwhile idle. Returns a zero duration if the screen is never locked\nautomatically. Currently supported on Chrome OS only.</p>",
        "name": "getAutoLockDelay"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "detectionIntervalInSeconds",
            "comment": "<p>The system is considered idle if detectionIntervalInSeconds seconds have elapsed since the last user input detected.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "IdleState",
                "referenceLink": "#type-IdleState",
                "optional": false,
                "name": "newState"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Returns \"locked\" if the system is locked, \"idle\" if the user has not\ngenerated any input for a specified number of seconds, or \"active\" otherwise.</p>",
        "name": "queryState"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "intervalInSeconds",
            "comment": "<p>Threshold, in seconds, used to determine when the system is in an idle state.</p>"
          }
        ],
        "comment": "<p>Sets the interval, in seconds, used to determine when the system is in an\nidle state for onStateChanged events. The default interval is 60 seconds.</p>",
        "name": "setDetectionInterval"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "IdleState",
                "referenceLink": "#type-IdleState",
                "optional": false,
                "name": "newState"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the system changes to an active, idle or locked state. The\nevent fires with \"locked\" if the screen is locked or the screensaver\nactivates, \"idle\" if the system is unlocked and the user has not\ngenerated any input for a specified number of seconds, and \"active\" when\nthe user generates input on an idle system.</p>",
        "name": "onStateChanged"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "idle\n"
    ]
  },
  {
    "name": "chrome.incognito",
    "shortName": "incognito",
    "comment": "<p>Dummy namepsace for the incognito manifest key.</p>",
    "types": [
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"split\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"spanning\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"not_allowed\""
          }
        ],
        "name": "IncognitoMode"
      }
    ],
    "properties": [],
    "methods": [],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.input.ime",
    "shortName": "input.ime",
    "comment": "<p>Use the <code>chrome.input.ime</code> API to implement a custom IME for\nChrome OS. This allows your extension to handle keystrokes, set the\ncomposition, and manage the candidate window.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Strings for ChromeVox to announce.</p>",
            "optional": true,
            "name": "announceString"
          },
          {
            "type": "reference",
            "referenceType": "AssistiveWindowType",
            "referenceLink": "#type-AssistiveWindowType",
            "name": "type"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Sets true to show AssistiveWindow, sets false to hide.</p>",
            "name": "visible"
          }
        ],
        "comment": "<p>Properties of the assistive window.</p>",
        "name": "AssistiveWindowProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "AutoCapitalizeType",
            "referenceLink": "#type-AutoCapitalizeType",
            "comment": "<p>The auto-capitalize type of the text field.</p>",
            "name": "autoCapitalize"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the text field wants auto-complete.</p>",
            "name": "autoComplete"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the text field wants auto-correct.</p>",
            "name": "autoCorrect"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>This is used to specify targets of text field operations.  This ID becomes\ninvalid as soon as onBlur is called.</p>",
            "name": "contextID"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether text entered into the text field should be used to improve typing\nsuggestions for the user.</p>",
            "name": "shouldDoLearning"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the text field wants spell-check.</p>",
            "name": "spellCheck"
          },
          {
            "type": "reference",
            "referenceType": "InputContextType",
            "referenceLink": "#type-InputContextType",
            "comment": "<p>Type of value this text field edits, (Text, Number, URL, etc)</p>",
            "name": "type"
          }
        ],
        "comment": "<p>Describes an input Context</p>",
        "name": "InputContext"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether or not the ALT key is pressed.</p>",
            "optional": true,
            "name": "altKey"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether or not the ALTGR key is pressed.</p>",
            "optional": true,
            "name": "altgrKey"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether or not the CAPS_LOCK is enabled.</p>",
            "optional": true,
            "name": "capsLock"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Value of the physical key being pressed. The value is not affected by current\nkeyboard layout or modifier state.</p>",
            "name": "code"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether or not the CTRL key is pressed.</p>",
            "optional": true,
            "name": "ctrlKey"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The extension ID of the sender of this keyevent.</p>",
            "optional": true,
            "name": "extensionId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Value of the key being pressed</p>",
            "name": "key"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The deprecated HTML keyCode, which is system- and implementation-dependent\nnumerical code signifying the unmodified identifier associated with the key\npressed.</p>",
            "optional": true,
            "name": "keyCode"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>(Deprecated) The ID of the request. Use the <code>requestId</code> param from\nthe <code>onKeyEvent</code> event instead.</p>",
            "optional": true,
            "name": "requestId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether or not the SHIFT key is pressed.</p>",
            "optional": true,
            "name": "shiftKey"
          },
          {
            "type": "reference",
            "referenceType": "KeyboardEventType",
            "referenceLink": "#type-KeyboardEventType",
            "comment": "<p>One of keyup or keydown.</p>",
            "name": "type"
          }
        ],
        "comment": "<p>See http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent</p>",
        "name": "KeyboardEvent"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates this item should be drawn with a check.</p>",
            "optional": true,
            "name": "checked"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates this item is enabled.</p>",
            "optional": true,
            "name": "enabled"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>String that will be passed to callbacks referencing this MenuItem.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Text displayed in the menu for this item.</p>",
            "optional": true,
            "name": "label"
          },
          {
            "type": "reference",
            "referenceType": "MenuItemStyle",
            "referenceLink": "#type-MenuItemStyle",
            "comment": "<p>The type of menu item.</p>",
            "optional": true,
            "name": "style"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates this item is visible.</p>",
            "optional": true,
            "name": "visible"
          }
        ],
        "comment": "<p>A menu item used by an input method to interact with the user from the\nlanguage menu.</p>",
        "name": "MenuItem"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>ID of the engine to use.</p>",
            "name": "engineID"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "MenuItem",
              "referenceLink": "#type-MenuItem"
            },
            "comment": "<p>MenuItems to add or update. They will be added in the order they exist in the\narray.</p>",
            "name": "items"
          }
        ],
        "name": "MenuParameters"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"undo\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"addToDictionary\""
          }
        ],
        "comment": "<p>ID of buttons in assistive window.</p>",
        "name": "AssistiveWindowButton"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"undo\""
          }
        ],
        "comment": "<p>Type of assistive window.</p>",
        "name": "AssistiveWindowType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"characters\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"words\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"sentences\""
          }
        ],
        "comment": "<p>The auto-capitalize type of the text field.</p>",
        "name": "AutoCapitalizeType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"text\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"search\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"tel\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"url\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"email\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"number\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"password\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"null\""
          }
        ],
        "comment": "<p>Type of value this text field edits, (Text, Number, URL, etc)</p>",
        "name": "InputContextType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"keyup\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"keydown\""
          }
        ],
        "name": "KeyboardEventType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"check\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"radio\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"separator\""
          }
        ],
        "comment": "<p>The type of menu item. Radio buttons between separators are considered\ngrouped.</p>",
        "name": "MenuItemStyle"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"left\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"middle\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"right\""
          }
        ],
        "comment": "<p>Which mouse buttons was clicked.</p>",
        "name": "MouseButton"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"normal\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"login\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"lock\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"secondary-login\""
          }
        ],
        "comment": "<p>The screen type under which the IME is activated.</p>",
        "name": "ScreenType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"underline\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"doubleUnderline\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"noUnderline\""
          }
        ],
        "comment": "<p>The type of the underline to modify this segment.</p>",
        "name": "UnderlineStyle"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"cursor\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"composition\""
          }
        ],
        "comment": "<p>Where to display the candidate window. If set to 'cursor', the window follows\nthe cursor. If set to 'composition', the window is locked to the beginning of\nthe composition.</p>",
        "name": "WindowPosition"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>ID of the context where the composition will be cleared</p>",
                "name": "contextID"
              }
            ],
            "optional": false,
            "name": "parameters"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "success"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the operation completes with a boolean indicating if the text was accepted or not. On failure, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> is set.</p>"
          }
        ],
        "comment": "<p>Clear the current composition. If this extension does not own the active IME,\nthis fails.</p>",
        "name": "clearComposition"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>ID of the context where the text will be committed</p>",
                "name": "contextID"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The text to commit</p>",
                "name": "text"
              }
            ],
            "optional": false,
            "name": "parameters"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "success"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the operation completes with a boolean indicating if the text was accepted or not. On failure, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> is set.</p>"
          }
        ],
        "comment": "<p>Commits the provided text to the current input.</p>",
        "name": "commitText"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>ID of the context where the surrounding text will be deleted.</p>",
                "name": "contextID"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>ID of the engine receiving the event.</p>",
                "name": "engineID"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The number of characters to be deleted</p>",
                "name": "length"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The offset from the caret position where deletion will start. This value can\nbe negative.</p>",
                "name": "offset"
              }
            ],
            "optional": false,
            "name": "parameters"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the operation completes.</p>"
          }
        ],
        "comment": "<p>Deletes the text around the caret.</p>",
        "name": "deleteSurroundingText"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Hides the input view window, which is popped up automatically by system. If\nthe input view window is already hidden, this function will do nothing.</p>",
        "name": "hideInputView"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "requestId",
            "comment": "<p>Request id of the event that was handled.  This should come from keyEvent.requestId</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "response",
            "comment": "<p>True if the keystroke was handled, false if not</p>"
          }
        ],
        "comment": "<p>Indicates that the key event received by onKeyEvent is handled.  This should\nonly be called if the onKeyEvent listener is asynchronous.</p>",
        "name": "keyEventHandled"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>ID of the context where the key events will be sent, or zero to send key\nevents to non-input field.</p>",
                "name": "contextID"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "KeyboardEvent",
                  "referenceLink": "#type-KeyboardEvent"
                },
                "comment": "<p>Data on the key event.</p>",
                "name": "keyData"
              }
            ],
            "optional": false,
            "name": "parameters"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the operation completes.</p>"
          }
        ],
        "comment": "<p>Sends the key events.  This function is expected to be used by virtual\nkeyboards.  When key(s) on a virtual keyboard is pressed by a user, this\nfunction is used to propagate that event to the system.</p>",
        "name": "sendKeyEvents"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The text for the screenreader to announce.</p>",
                "optional": true,
                "name": "announceString"
              },
              {
                "type": "reference",
                "referenceType": "AssistiveWindowButton",
                "referenceLink": "#type-AssistiveWindowButton",
                "comment": "<p>The ID of the button</p>",
                "name": "buttonID"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>ID of the context owning the assistive window.</p>",
                "name": "contextID"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the button should be highlighted.</p>",
                "name": "highlighted"
              },
              {
                "type": "reference",
                "referenceType": "AssistiveWindowType",
                "referenceLink": "#type-AssistiveWindowType",
                "comment": "<p>The window type the button belongs to.</p>",
                "name": "windowType"
              }
            ],
            "optional": false,
            "name": "parameters"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the operation completes. On failure, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> is set.</p>"
          }
        ],
        "comment": "<p>Highlights/Unhighlights a button in an assistive window.</p>",
        "name": "setAssistiveWindowButtonHighlighted"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>ID of the context owning the assistive window.</p>",
                "name": "contextID"
              },
              {
                "type": "reference",
                "referenceType": "AssistiveWindowProperties",
                "referenceLink": "#type-AssistiveWindowProperties",
                "comment": "<p>Properties of the assistive window.</p>",
                "name": "properties"
              }
            ],
            "optional": false,
            "name": "parameters"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "success"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the operation completes.</p>"
          }
        ],
        "comment": "<p>Shows/Hides an assistive window with the given properties.</p>",
        "name": "setAssistiveWindowProperties"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>ID of the engine to set properties on.</p>",
                "name": "engineID"
              },
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>Text that is shown at the bottom of the candidate window.</p>",
                    "optional": true,
                    "name": "auxiliaryText"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>True to display the auxiliary text, false to hide it.</p>",
                    "optional": true,
                    "name": "auxiliaryTextVisible"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The index of the current chosen candidate out of total candidates.</p>",
                    "optional": true,
                    "name": "currentCandidateIndex"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>True to show the cursor, false to hide it.</p>",
                    "optional": true,
                    "name": "cursorVisible"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The number of candidates to display per page.</p>",
                    "optional": true,
                    "name": "pageSize"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The total number of candidates for the candidate window.</p>",
                    "optional": true,
                    "name": "totalCandidates"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>True if the candidate window should be rendered vertical, false to make it\nhorizontal.</p>",
                    "optional": true,
                    "name": "vertical"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>True to show the Candidate window, false to hide it.</p>",
                    "optional": true,
                    "name": "visible"
                  },
                  {
                    "type": "reference",
                    "referenceType": "WindowPosition",
                    "referenceLink": "#type-WindowPosition",
                    "comment": "<p>Where to display the candidate window.</p>",
                    "optional": true,
                    "name": "windowPosition"
                  }
                ],
                "name": "properties"
              }
            ],
            "optional": false,
            "name": "parameters"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "success"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the operation completes.</p>"
          }
        ],
        "comment": "<p>Sets the properties of the candidate window. This fails if the extension\ndoesn't own the active IME</p>",
        "name": "setCandidateWindowProperties"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "array",
                "elementType": {
                  "type": "object",
                  "properties": [
                    {
                      "type": "primitive",
                      "primitiveType": "string",
                      "comment": "<p>Additional text describing the candidate</p>",
                      "optional": true,
                      "name": "annotation"
                    },
                    {
                      "type": "primitive",
                      "primitiveType": "string",
                      "comment": "<p>The candidate</p>",
                      "name": "candidate"
                    },
                    {
                      "type": "primitive",
                      "primitiveType": "number",
                      "comment": "<p>The candidate's id</p>",
                      "name": "id"
                    },
                    {
                      "type": "primitive",
                      "primitiveType": "string",
                      "comment": "<p>Short string displayed to next to the candidate, often the shortcut key or\nindex</p>",
                      "optional": true,
                      "name": "label"
                    },
                    {
                      "type": "primitive",
                      "primitiveType": "number",
                      "comment": "<p>The id to add these candidates under</p>",
                      "optional": true,
                      "name": "parentId"
                    },
                    {
                      "type": "object",
                      "properties": [
                        {
                          "type": "primitive",
                          "primitiveType": "string",
                          "comment": "<p>The body string of detail description.</p>",
                          "name": "body"
                        },
                        {
                          "type": "primitive",
                          "primitiveType": "string",
                          "comment": "<p>The title string of details description.</p>",
                          "name": "title"
                        }
                      ],
                      "comment": "<p>The usage or detail description of word.</p>",
                      "optional": true,
                      "name": "usage"
                    }
                  ]
                },
                "comment": "<p>List of candidates to show in the candidate window</p>",
                "name": "candidates"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>ID of the context that owns the candidate window.</p>",
                "name": "contextID"
              }
            ],
            "optional": false,
            "name": "parameters"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "success"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the operation completes.</p>"
          }
        ],
        "comment": "<p>Sets the current candidate list. This fails if this extension doesn't own the\nactive IME</p>",
        "name": "setCandidates"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>ID of the context where the composition text will be set</p>",
                "name": "contextID"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Position in the text of the cursor.</p>",
                "name": "cursor"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "object",
                  "properties": [
                    {
                      "type": "primitive",
                      "primitiveType": "number",
                      "comment": "<p>Index of the character to end this segment after.</p>",
                      "name": "end"
                    },
                    {
                      "type": "primitive",
                      "primitiveType": "number",
                      "comment": "<p>Index of the character to start this segment at</p>",
                      "name": "start"
                    },
                    {
                      "type": "reference",
                      "referenceType": "UnderlineStyle",
                      "referenceLink": "#type-UnderlineStyle",
                      "comment": "<p>The type of the underline to modify this segment.</p>",
                      "name": "style"
                    }
                  ]
                },
                "comment": "<p>List of segments and their associated types.</p>",
                "optional": true,
                "name": "segments"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Position in the text that the selection ends at.</p>",
                "optional": true,
                "name": "selectionEnd"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Position in the text that the selection starts at.</p>",
                "optional": true,
                "name": "selectionStart"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>Text to set</p>",
                "name": "text"
              }
            ],
            "optional": false,
            "name": "parameters"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "success"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the operation completes with a boolean indicating if the text was accepted or not. On failure, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> is set.</p>"
          }
        ],
        "comment": "<p>Set the current composition. If this extension does not own the active IME,\nthis fails.</p>",
        "name": "setComposition"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>ID of the candidate to select.</p>",
                "name": "candidateID"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>ID of the context that owns the candidate window.</p>",
                "name": "contextID"
              }
            ],
            "optional": false,
            "name": "parameters"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "success"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the operation completes</p>"
          }
        ],
        "comment": "<p>Set the position of the cursor in the candidate window. This is a no-op if\nthis extension does not own the active IME.</p>",
        "name": "setCursorPosition"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "MenuParameters",
            "referenceLink": "#type-MenuParameters",
            "optional": false,
            "name": "parameters"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Adds the provided menu items to the language menu when this IME is active.</p>",
        "name": "setMenuItems"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "MenuParameters",
            "referenceLink": "#type-MenuParameters",
            "optional": false,
            "name": "parameters"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the operation completes</p>"
          }
        ],
        "comment": "<p>Updates the state of the MenuItems specified</p>",
        "name": "updateMenuItems"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "engineID",
                "comment": "<p>ID of the engine receiving the event</p>"
              },
              {
                "type": "reference",
                "referenceType": "ScreenType",
                "referenceLink": "#type-ScreenType",
                "optional": false,
                "name": "screen",
                "comment": "<p>The screen type under which the IME is activated.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>This event is sent when an IME is activated. It signals that the IME will\nbe receiving onKeyPress events.</p>",
        "name": "onActivate"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "reference",
                    "referenceType": "AssistiveWindowButton",
                    "referenceLink": "#type-AssistiveWindowButton",
                    "comment": "<p>The ID of the button clicked.</p>",
                    "name": "buttonID"
                  },
                  {
                    "type": "reference",
                    "referenceType": "AssistiveWindowType",
                    "referenceLink": "#type-AssistiveWindowType",
                    "comment": "<p>The type of the assistive window.</p>",
                    "name": "windowType"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>This event is sent when a button in an assistive window is clicked.</p>",
        "name": "onAssistiveWindowButtonClicked"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "contextID",
                "comment": "<p>The ID of the text field that has lost focus. The ID is invalid after this call</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>This event is sent when focus leaves a text box. It is sent to all\nextensions that are listening to this event, and enabled by the user.</p>",
        "name": "onBlur"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "engineID",
                "comment": "<p>ID of the engine receiving the event</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "candidateID",
                "comment": "<p>ID of the candidate that was clicked.</p>"
              },
              {
                "type": "reference",
                "referenceType": "MouseButton",
                "referenceLink": "#type-MouseButton",
                "optional": false,
                "name": "button",
                "comment": "<p>Which mouse buttons was clicked.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>This event is sent if this extension owns the active IME.</p>",
        "name": "onCandidateClicked"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "engineID",
                "comment": "<p>ID of the engine receiving the event</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>This event is sent when an IME is deactivated. It signals that the IME\nwill no longer be receiving onKeyPress events.</p>",
        "name": "onDeactivated"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "InputContext",
                "referenceLink": "#type-InputContext",
                "optional": false,
                "name": "context",
                "comment": "<p>Describes the text field that has acquired focus.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>This event is sent when focus enters a text box. It is sent to all\nextensions that are listening to this event, and enabled by the user.</p>",
        "name": "onFocus"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "InputContext",
                "referenceLink": "#type-InputContext",
                "optional": false,
                "name": "context",
                "comment": "<p>An InputContext object describing the text field that has changed.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>This event is sent when the properties of the current InputContext\nchange, such as the the type. It is sent to all extensions that are\nlistening to this event, and enabled by the user.</p>",
        "name": "onInputContextUpdate"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "engineID",
                "comment": "<p>ID of the engine receiving the event</p>"
              },
              {
                "type": "reference",
                "referenceType": "KeyboardEvent",
                "referenceLink": "#type-KeyboardEvent",
                "optional": false,
                "name": "keyData",
                "comment": "<p>Data on the key event</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "requestId",
                "comment": "<p>ID of the request. If the event listener returns undefined, then <code>keyEventHandled</code> must be called later with this <code>requestId</code>.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a key event is sent from the operating system. The event will\nbe sent to the extension if this extension owns the active IME. The\nlistener function should return true if the event was handled false if it\nwas not.  If the event will be evaluated asynchronously, this function\nmust return undefined and the IME must later call keyEventHandled() with\nthe result.</p>",
        "name": "onKeyEvent"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "engineID",
                "comment": "<p>ID of the engine receiving the event</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "name",
                "comment": "<p>Name of the MenuItem which was activated</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Called when the user selects a menu item</p>",
        "name": "onMenuItemActivated"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "engineID",
                "comment": "<p>ID of the engine receiving the event</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>This event is sent when chrome terminates ongoing text input session.</p>",
        "name": "onReset"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "engineID",
                "comment": "<p>ID of the engine receiving the event</p>"
              },
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The beginning position of the selection. This value indicates caret position\nif there is no selection.</p>",
                    "name": "anchor"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ending position of the selection. This value indicates caret position if\nthere is no selection.</p>",
                    "name": "focus"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The offset position of <code>text</code>. Since <code>text</code> only\nincludes a subset of text around the cursor, offset indicates the absolute\nposition of the first character of <code>text</code>.</p>",
                    "name": "offset"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The text around the cursor. This is only a subset of all text in the input\nfield.</p>",
                    "name": "text"
                  }
                ],
                "comment": "<p>The surrounding information.</p>",
                "optional": false,
                "name": "surroundingInfo"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Called when the editable string around caret is changed or when the caret\nposition is moved. The text length is limited to 100 characters for each\nback and forth direction.</p>",
        "name": "onSurroundingTextChanged"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "input\n"
    ],
    "platforms": [
      "chromeos",
      "win",
      "linux"
    ]
  },
  {
    "name": "chrome.instanceID",
    "shortName": "instanceID",
    "comment": "<p>Use <code>chrome.instanceID</code> to access the Instance ID service.</p>",
    "types": [],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Function called when the deletion completes. The instance identifier was revoked successfully if <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> is not set.</p>"
          }
        ],
        "comment": "<p>Resets the app instance identifier and revokes all tokens associated with it.</p>",
        "name": "deleteID"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The authorized entity that is used to obtain the token.</p>",
                "name": "authorizedEntity"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The scope that is used to obtain the token.</p>",
                "name": "scope"
              }
            ],
            "optional": false,
            "name": "deleteTokenParams",
            "comment": "<p>Parameters for deleteToken.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Function called when the token deletion completes. The token was revoked successfully if <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> is not set.</p>"
          }
        ],
        "comment": "<p>Revokes a granted token.</p>",
        "name": "deleteToken"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "creationTime",
                "comment": "<p>The time when the Instance ID has been generated, represented in milliseconds since the epoch.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Function called when the retrieval completes. It should check <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> for error when creationTime is zero.</p>"
          }
        ],
        "comment": "<p>Retrieves the time when the InstanceID has been generated. The creation time\nwill be returned by the <code>callback</code>.</p>",
        "name": "getCreationTime"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "instanceID",
                "comment": "<p>An Instance ID assigned to the app instance.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Function called when the retrieval completes. It should check <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> for error when instanceID is empty.</p>"
          }
        ],
        "comment": "<p>Retrieves an identifier for the app instance. The instance ID will be\nreturned by the <code>callback</code>. The same ID will be returned as long\nas the application identity has not been revoked or expired.</p>",
        "name": "getID"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>Identifies the entity that is authorized to access resources associated with\nthis Instance ID. It can be a project ID from <a\nhref='https://code.google.com/apis/console'>Google developer console</a>.</p>",
                "name": "authorizedEntity"
              },
              {
                "type": "object",
                "properties": [],
                "comment": "<p>Allows including a small number of string key/value pairs that will be\nassociated with the token and may be used in processing the request.</p>",
                "deprecated": "options are deprecated and will be ignored.\n",
                "optional": true,
                "name": "options"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>Identifies authorized actions that the authorized entity can take. E.g. for\nsending GCM messages, <code>GCM</code> scope should be used.</p>",
                "name": "scope"
              }
            ],
            "optional": false,
            "name": "getTokenParams",
            "comment": "<p>Parameters for getToken.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "token",
                "comment": "<p>A token assigned by the requested service.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Function called when the retrieval completes. It should check <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> for error when token is empty.</p>"
          }
        ],
        "comment": "<p>Return a token that allows the authorized entity to access the service\ndefined by scope.</p>",
        "name": "getToken"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when all the granted tokens need to be refreshed.</p>",
        "name": "onTokenRefresh"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "gcm\n"
    ]
  },
  {
    "name": "chrome.lockScreen.data",
    "shortName": "lockScreen.data",
    "comment": "<p>\nThe API that can be used by an app to create and manage data on the\nChrome OS lock screen.\n</p>\n<p>\nThe API usability will depend on the\nuser session state:\n<ul>\n<li>\nWhen the user session is locked,\nthe API usage will only be allowed\nfrom the lock screen context.\n</li>\n<li>\nWhen the user session is not locked, the API usage\nwill only be\nallowed outside the lock screen context - i.e. from the\nregular app\ncontext.\n</li>\n</ul>\n</p>\n<p>\nNote that apps\nhave reduced access to Chrome apps APIs from the lock screen\ncontext.\n</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The data item ID that can later be used to retrieve and update the associated\nlock screen data.</p>",
            "name": "id"
          }
        ],
        "name": "DataItemInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the event was dispatched as a result of the user session\ngetting unlocked.    </p> <p>For example:   <ul>     <li>If the app creates\nnew data items while shown on         the lock screen, when the user unlocks\nthe screen,         <a href=\"#event-onDataItemsAvailable\"><code>onDataItemsAvailable</code></a> event will be dispatched\nwith this         property set to <code>true</code>.         </li>\n<li>When the user logs in, if not previously reported lock screen\ndata items are found, which could happen if the user session had         been\nclosed while it was locked, <a href=\"#event-onDataItemsAvailable\"><code>onDataItemsAvailable</code></a> will         be\ndispatched with this property set to <code>false</code>.         </li>\n</ul> </p>",
            "name": "wasLocked"
          }
        ],
        "name": "DataItemsAvailableEvent"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Deletes a data item. The data item will not be available through this API\nanymore. |id| - Identifies the data item to delete.</p>",
        "name": "delete"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "DataItemInfo",
                "referenceLink": "#type-DataItemInfo",
                "optional": false,
                "name": "item"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Creates a new data item reference - available only in lock screen contexts.</p>",
        "name": "create"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "DataItemInfo",
                  "referenceLink": "#type-DataItemInfo"
                },
                "optional": false,
                "name": "items"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets references to all data items available to the app.</p>",
        "name": "getAll"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ArrayBuffer",
                "optional": false,
                "name": "data"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves content of the data item identified by |id|.</p>",
        "name": "getContent"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "data"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets contents of a data item. |id| - Identifies the target data item. |data|\n- The data item contents to set.</p>",
        "name": "setContent"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "DataItemsAvailableEvent",
                "referenceLink": "#type-DataItemsAvailableEvent",
                "optional": false,
                "name": "event"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Dispatched when new data items become available to main, non-lock screen\napp context - this event is not expected to be dispatched to the app in\nthe lock screen context.</p>",
        "name": "onDataItemsAvailable"
      }
    ],
    "channel": "stable",
    "source": "platform_app.d.ts",
    "permissions": [
      "lockScreen\n"
    ],
    "platforms": [
      "chromeos"
    ]
  },
  {
    "name": "chrome.login",
    "shortName": "login",
    "comment": "<p>Use the <code>chrome.login</code> API to launch and exit user sessions.</p>",
    "types": [],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "dataForNextLoginAttempt",
            "comment": "<p>If set, stores data which can be read by <code>fetchDataForNextLoginAttempt()</code> from the login screen. If unset, any currently stored data will be cleared.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Exits the current session.</p>",
        "name": "exitCurrentSession"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the stored data, or an empty string if there was no previously stored data.</p>"
          }
        ],
        "comment": "<p>Reads the <code>dataForNextLoginAttempt</code> set by\n<code>exitCurrentSession()</code>. Clears the previously stored data after\nreading so it can only be read once.</p>",
        "name": "fetchDataForNextLoginAttempt"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "password",
            "comment": "<p>If provided, the launched managed guest session will be lockable, and can only be unlocked by calling <code>unlockManagedGuestSession()</code> with the same password.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Note: If the function succeeds, the callback is not guaranteed to be called as the extension will be disabled when the session starts. Use this callback only to handle the failure case by checking <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a>.</p>"
          }
        ],
        "comment": "<p>Launches a managed guest session if one is set up via the admin console. If\nthere are several managed guest sessions set up, it will launch the first\navailable one.</p>",
        "name": "launchManagedGuestSession"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Locks the current managed guest session. The session has to have been\nlaunched by <code>launchManagedGuestSession()</code> with a password.</p>",
        "name": "lockManagedGuestSession"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "password",
            "comment": "<p>The password which will be used to unlock the session.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Note: If the function succeeds, the callback is not guaranteed to be called as the extension will be disabled when the session starts. Use this callback only to handle the failure case by checking <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a>.</p>"
          }
        ],
        "comment": "<p>Unlocks a managed guest session which was launched by\n<code>launchManagedGuestSession()</code> with a password. The session will\nunlock if the provided password matches the one provided earlier.</p>",
        "name": "unlockManagedGuestSession"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "login\n"
    ],
    "platforms": [
      "chromeos"
    ]
  },
  {
    "name": "chrome.loginScreenStorage",
    "shortName": "loginScreenStorage",
    "comment": "<p>Use the <code>chrome.loginScreenStorage</code> API to store persistent data\nfrom the login screen or inject data into the session.</p>",
    "types": [],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "data"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves credentials that were previosly stored using <a href=\"#method-storeCredentials\"><code>storeCredentials</code></a>. The caller's extension ID should be the same as the\nextension id passed to the <a href=\"#method-storeCredentials\"><code>storeCredentials</code></a>.</p>",
        "name": "retrieveCredentials"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "ownerId",
            "comment": "<p>ID of the extension that saved the data that the caller is trying to retrieve.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "data"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves persistent data that was previously stored using <a href=\"#method-storePersistentData\"><code>storePersistentData</code></a> for the caller's extension ID.</p>",
        "name": "retrievePersistentData"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "extensionId",
            "comment": "<p>ID of the in-session extension that should have access to these credentials. Credentials stored using this method are deleted on session exit.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "credentials",
            "comment": "<p>The credentials to store.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Stores credentials for later access from the user session. This method will\nfail if called while a user session is active.</p>",
        "name": "storeCredentials"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "optional": false,
            "name": "extensionIds",
            "comment": "<p>IDs of the extensions that should have access to the stored data.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "data",
            "comment": "<p>The data to store.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Stores persistent data from the login screen. This data can be accessed later\nusing <a href=\"#method-retrievePersistentData\"><code>retrievePersistentData</code></a> by any extension from the specified\nextension ids. This method will fail if called while a user session is\nactive.</p>",
        "name": "storePersistentData"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "loginScreenStorage\n"
    ]
  },
  {
    "name": "chrome.loginState",
    "shortName": "loginState",
    "comment": "<p>Use the <code>chrome.loginState</code> API to read and monitor the login\nstate.</p>",
    "types": [
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"SIGNIN_PROFILE\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"USER_PROFILE\""
          }
        ],
        "name": "ProfileType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"UNKNOWN\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"IN_OOBE_SCREEN\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"IN_LOGIN_SCREEN\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"IN_SESSION\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"IN_LOCK_SCREEN\""
          }
        ],
        "name": "SessionState"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ProfileType",
                "referenceLink": "#type-ProfileType",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the type of the profile the extension is in.</p>",
        "name": "getProfileType"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "SessionState",
                "referenceLink": "#type-SessionState",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the current session state.</p>",
        "name": "getSessionState"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "SessionState",
                "referenceLink": "#type-SessionState",
                "optional": false,
                "name": "sessionState"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Dispatched when the session state changes. <code>sessionState</code> is\nthe new session state.</p>",
        "name": "onSessionStateChanged"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "loginState\n"
    ],
    "platforms": [
      "chromeos"
    ]
  },
  {
    "name": "chrome.management",
    "shortName": "management",
    "comment": "<p>The <code>chrome.management</code> API provides ways to manage the list of\nextensions/apps that are installed and running. It is particularly useful for\nextensions that <a href=\"../../override/\">override</a> the built-in New Tab page.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The launch url (only present for apps).</p>",
            "optional": true,
            "name": "appLaunchUrl"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "LaunchType",
              "referenceLink": "#type-LaunchType"
            },
            "comment": "<p>The currently available launch types (only present for apps).</p>",
            "optional": true,
            "name": "availableLaunchTypes"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The description of this extension, app, or theme.</p>",
            "name": "description"
          },
          {
            "type": "reference",
            "referenceType": "ExtensionDisabledReason",
            "referenceLink": "#type-ExtensionDisabledReason",
            "comment": "<p>A reason the item is disabled.</p>",
            "optional": true,
            "name": "disabledReason"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether it is currently enabled or disabled.</p>",
            "name": "enabled"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL of the homepage of this extension, app, or theme.</p>",
            "optional": true,
            "name": "homepageUrl"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Returns a list of host based permissions.</p>",
            "name": "hostPermissions"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "IconInfo",
              "referenceLink": "#type-IconInfo"
            },
            "comment": "<p>A list of icon information. Note that this just reflects what was declared in\nthe manifest, and the actual image at that url may be larger or smaller than\nwhat was declared, so you might consider using explicit width and height\nattributes on img tags referencing these images. See the <a\nhref='manifest/icons'>manifest documentation on icons</a> for more details.</p>",
            "optional": true,
            "name": "icons"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The extension's unique identifier.</p>",
            "name": "id"
          },
          {
            "type": "reference",
            "referenceType": "ExtensionInstallType",
            "referenceLink": "#type-ExtensionInstallType",
            "comment": "<p>How the extension was installed.</p>",
            "name": "installType"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if this is an app.</p>",
            "deprecated": "Please use <a href=\"#type-ExtensionInfo-type\"><code>ExtensionInfo.type</code></a>.\n",
            "name": "isApp"
          },
          {
            "type": "reference",
            "referenceType": "LaunchType",
            "referenceLink": "#type-LaunchType",
            "comment": "<p>The app launch type (only present for apps).</p>",
            "optional": true,
            "name": "launchType"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether this extension can be disabled or uninstalled by the user.</p>",
            "name": "mayDisable"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether this extension can be enabled by the user. This is only returned for\nextensions which are not enabled.</p>",
            "optional": true,
            "name": "mayEnable"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The name of this extension, app, or theme.</p>",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the extension, app, or theme declares that it supports offline.</p>",
            "name": "offlineEnabled"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The url for the item's options page, if it has one.</p>",
            "name": "optionsUrl"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Returns a list of API based permissions.</p>",
            "name": "permissions"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A short version of the name of this extension, app, or theme.</p>",
            "name": "shortName"
          },
          {
            "type": "reference",
            "referenceType": "ExtensionType",
            "referenceLink": "#type-ExtensionType",
            "comment": "<p>The type of this extension, app, or theme.</p>",
            "name": "type"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The update URL of this extension, app, or theme.</p>",
            "optional": true,
            "name": "updateUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The <a href='manifest/version'>version</a> of this extension, app, or theme.</p>",
            "name": "version"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The <a href='manifest/version#version_name'>version name</a> of this\nextension, app, or theme if the manifest specified one.</p>",
            "optional": true,
            "name": "versionName"
          }
        ],
        "comment": "<p>Information about an installed extension, app, or theme.</p>",
        "name": "ExtensionInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>A number representing the width and height of the icon. Likely values include\n(but are not limited to) 128, 48, 24, and 16.</p>",
            "name": "size"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL for this icon image. To display a grayscale version of the icon (to\nindicate that an extension is disabled, for example), append\n<code>?grayscale=true</code> to the URL.</p>",
            "name": "url"
          }
        ],
        "comment": "<p>Information about an icon belonging to an extension, app, or theme.</p>",
        "name": "IconInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether or not a confirm-uninstall dialog should prompt the user. Defaults to\nfalse for self uninstalls. If an extension uninstalls another extension, this\nparameter is ignored and the dialog is always shown.</p>",
            "optional": true,
            "name": "showConfirmDialog"
          }
        ],
        "comment": "<p>Information about an icon belonging to an extension, app, or theme.</p>",
        "name": "UninstallOptions"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"unknown\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"permissions_increase\""
          }
        ],
        "comment": "<p>A reason the item is disabled.</p>",
        "name": "ExtensionDisabledReason"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"admin\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"development\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"normal\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"sideload\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"other\""
          }
        ],
        "comment": "<p>How the extension was installed. One of<br><var>admin</var>: The extension\nwas installed because of an administrative policy,<br><var>development</var>:\nThe extension was loaded unpacked in developer mode,<br><var>normal</var>:\nThe extension was installed normally via a .crx file,<br><var>sideload</var>:\nThe extension was installed by other software on the\nmachine,<br><var>other</var>: The extension was installed by other means.</p>",
        "name": "ExtensionInstallType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"extension\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"hosted_app\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"packaged_app\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"legacy_packaged_app\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"theme\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"login_screen_extension\""
          }
        ],
        "comment": "<p>The type of this extension, app, or theme.</p>",
        "name": "ExtensionType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"OPEN_AS_REGULAR_TAB\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"OPEN_AS_PINNED_TAB\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"OPEN_AS_WINDOW\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"OPEN_FULL_SCREEN\""
          }
        ],
        "comment": "<p>These are all possible app launch types.</p>",
        "name": "LaunchType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Checks if the replacement android app can be installed. Errors generated by\nthis API are reported by setting <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> and executing the\nfunction's regular callback.</p>",
        "name": "canInstallReplacementAndroidApp"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id",
            "comment": "<p>This should be the id from an app item of <a href=\"#type-ExtensionInfo\"><code>ExtensionInfo</code></a>.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Display options to create shortcuts for an app. On Mac, only packaged app\nshortcuts can be created.</p>",
        "name": "createAppShortcut"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "url",
            "comment": "<p>The URL of a web page. The scheme of the URL can only be \"http\" or \"https\".</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "title",
            "comment": "<p>The title of the generated app.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ExtensionInfo",
                "referenceLink": "#type-ExtensionInfo",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Generate an app for a URL. Returns the generated bookmark app.</p>",
        "name": "generateAppForLink"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id",
            "comment": "<p>The ID from an item of <a href=\"#type-ExtensionInfo\"><code>ExtensionInfo</code></a>.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ExtensionInfo",
                "referenceLink": "#type-ExtensionInfo",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Returns information about the installed extension, app, or theme that has the\ngiven ID.</p>",
        "name": "get"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "ExtensionInfo",
                  "referenceLink": "#type-ExtensionInfo"
                },
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Returns a list of information about installed extensions and apps.</p>",
        "name": "getAll"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id",
            "comment": "<p>The ID of an already installed extension.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                },
                "optional": false,
                "name": "permissionWarnings"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Returns a list of <a href=\"../../permission_warnings/\">permission warnings</a> for\nthe given extension id.</p>",
        "name": "getPermissionWarningsById"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "manifestStr",
            "comment": "<p>Extension manifest JSON string.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                },
                "optional": false,
                "name": "permissionWarnings"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Returns a list of <a href=\"../../permission_warnings/\">permission warnings</a> for\nthe given extension manifest string. Note: This function can be used without\nrequesting the 'management' permission in the manifest.</p>",
        "name": "getPermissionWarningsByManifest"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ExtensionInfo",
                "referenceLink": "#type-ExtensionInfo",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Returns information about the calling extension, app, or theme. Note: This\nfunction can be used without requesting the 'management' permission in the\nmanifest.</p>",
        "name": "getSelf"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Prompts the user to install the replacement Android app from the manifest.\nErrors generated by this API are reported by setting <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> and executing the function's regular callback.</p>",
        "name": "installReplacementAndroidApp"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Launches the replacement_web_app specified in the manifest. Prompts the user\nto install if not already installed.</p>",
        "name": "installReplacementWebApp"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id",
            "comment": "<p>The extension id of the application.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Launches an application.</p>",
        "name": "launchApp"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id",
            "comment": "<p>This should be the id from an item of <a href=\"#type-ExtensionInfo\"><code>ExtensionInfo</code></a>.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "enabled",
            "comment": "<p>Whether this item should be enabled or disabled.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Enables or disables an app or extension. In most cases this function must be\ncalled in the context of a user gesture (e.g. an onclick handler for a\nbutton), and may present the user with a native confirmation UI as a way of\npreventing abuse.</p>",
        "name": "setEnabled"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id",
            "comment": "<p>This should be the id from an app item of <a href=\"#type-ExtensionInfo\"><code>ExtensionInfo</code></a>.</p>"
          },
          {
            "type": "reference",
            "referenceType": "LaunchType",
            "referenceLink": "#type-LaunchType",
            "optional": false,
            "name": "launchType",
            "comment": "<p>The target launch type. Always check and make sure this launch type is in <a href=\"#type-ExtensionInfo-availableLaunchTypes\"><code>ExtensionInfo.availableLaunchTypes</code></a>, because the available launch types vary on different platforms and configurations.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Set the launch type of an app.</p>",
        "name": "setLaunchType"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id",
            "comment": "<p>This should be the id from an item of <a href=\"#type-ExtensionInfo\"><code>ExtensionInfo</code></a>.</p>"
          },
          {
            "type": "reference",
            "referenceType": "UninstallOptions",
            "referenceLink": "#type-UninstallOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Uninstalls a currently installed app or extension.</p>",
        "name": "uninstall"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "UninstallOptions",
            "referenceLink": "#type-UninstallOptions",
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Uninstalls the calling extension. Note: This function can be used without\nrequesting the 'management' permission in the manifest.</p>",
        "name": "uninstallSelf"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ExtensionInfo",
                "referenceLink": "#type-ExtensionInfo",
                "optional": false,
                "name": "info"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when an app or extension has been disabled.</p>",
        "name": "onDisabled"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ExtensionInfo",
                "referenceLink": "#type-ExtensionInfo",
                "optional": false,
                "name": "info"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when an app or extension has been enabled.</p>",
        "name": "onEnabled"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ExtensionInfo",
                "referenceLink": "#type-ExtensionInfo",
                "optional": false,
                "name": "info"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when an app or extension has been installed.</p>",
        "name": "onInstalled"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "id",
                "comment": "<p>The id of the extension, app, or theme that was uninstalled.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when an app or extension has been uninstalled.</p>",
        "name": "onUninstalled"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "management\n"
    ]
  },
  {
    "name": "chrome.manifestTypes",
    "shortName": "manifestTypes",
    "comment": "<p>Schemas for structured manifest entries</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>New value for the homepage.</p>",
            "optional": true,
            "name": "homepage"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                },
                "comment": "<p>A list of URL patterns that can be used, in addition to |search_url|.</p>",
                "optional": true,
                "name": "alternate_urls"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>Encoding of the search term. This may only be omitted if\n<em>prepopulated_id</em> is set.</p>",
                "optional": true,
                "name": "encoding"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>An icon URL for the search engine. This may only be omitted if\n<em>prepopulated_id</em> is set.</p>",
                "optional": true,
                "name": "favicon_url"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>If omitted, this engine does not support image search.</p>",
                "optional": true,
                "name": "image_url"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The string of post parameters to image_url</p>",
                "optional": true,
                "name": "image_url_post_params"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Specifies if the search provider should be default.</p>",
                "name": "is_default"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>Omnibox keyword for the search engine. This may only be omitted if\n<em>prepopulated_id</em> is set.</p>",
                "optional": true,
                "name": "keyword"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>Name of the search engine displayed to user. This may only be omitted if\n<em>prepopulated_id</em> is set.</p>",
                "optional": true,
                "name": "name"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>An ID of the built-in search engine in Chrome.</p>",
                "optional": true,
                "name": "prepopulated_id"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>An search URL used by the search engine.</p>",
                "name": "search_url"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The string of post parameters to search_url</p>",
                "optional": true,
                "name": "search_url_post_params"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>If omitted, this engine does not support suggestions.</p>",
                "optional": true,
                "name": "suggest_url"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The string of post parameters to suggest_url</p>",
                "optional": true,
                "name": "suggest_url_post_params"
              }
            ],
            "comment": "<p>A search engine</p>",
            "optional": true,
            "name": "search_provider"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>An array of length one containing a URL to be used as the startup page.</p>",
            "optional": true,
            "name": "startup_pages"
          }
        ],
        "comment": "<p>Chrome settings which can be overriden by an extension.</p>",
        "name": "ChromeSettingsOverrides"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether configuring via <code>onConfigureRequested</code> is supported. By\ndefault: <code>false</code>.</p>",
            "optional": true,
            "name": "configurable"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether multiple (more than one) mounted file systems are supported. By\ndefault: <code>false</code>.</p>",
            "optional": true,
            "name": "multiple_mounts"
          },
          {
            "type": "reference",
            "referenceType": "FileSystemProviderSource",
            "referenceLink": "#type-FileSystemProviderSource",
            "comment": "<p>Source of data for mounted file systems.</p>",
            "name": "source"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether setting watchers and notifying about changes is supported. By\ndefault: <code>false</code>.</p>",
            "optional": true,
            "name": "watchable"
          }
        ],
        "comment": "<p>Represents capabilities of a providing extension.</p>",
        "name": "FileSystemProviderCapabilities"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"file\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"device\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"network\""
          }
        ],
        "comment": "<p>For <code>\"file\"</code> the source is a file passed via\n<code>onLaunched</code> event. For <code>\"device\"</code> contents are fetched\nfrom an external device (eg. plugged via USB), without using\n<code>file_handlers</code>. Finally, for <code>\"network\"</code> source,\ncontents should be fetched via network.</p>",
        "name": "FileSystemProviderSource"
      }
    ],
    "properties": [],
    "methods": [],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.mdns",
    "shortName": "mdns",
    "comment": "<p>Use the <code>chrome.mdns</code> API to discover services over mDNS.\nThis\ncomprises a subset of the features of the NSD spec:\nhttp://www.w3.org/TR/discovery-api/</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The IP address of an mDNS advertised service.</p>",
            "name": "ipAddress"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Metadata for an mDNS advertised service.</p>",
            "name": "serviceData"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The host:port pair of an mDNS advertised service.</p>",
            "name": "serviceHostPort"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The service name of an mDNS advertised service,\n<instance_name>.<service_type>.</p>",
            "name": "serviceName"
          }
        ],
        "name": "MDnsService"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "2048",
        "comment": "<p>The maximum number of service instances that will be included in\nonServiceList events.  If more instances are available, they may be truncated\nfrom the onServiceList event.</p>",
        "name": "MAX_SERVICE_INSTANCES_PER_EVENT"
      }
    ],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback invoked after ForceDiscovery() has started.</p>"
          }
        ],
        "comment": "<p>Immediately issues a multicast DNS query for all service types. |callback| is\ninvoked immediately. At a later time, queries will be sent, and any service\nevents will be fired.</p>",
        "name": "forceDiscovery"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "MDnsService",
                  "referenceLink": "#type-MDnsService"
                },
                "optional": false,
                "name": "services"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event fired to inform clients of the current complete set of known\navailable services. Clients should only need to store the list from the\nmost recent event. The service type that the extension is interested in\ndiscovering should be specified as the event filter with the\n'serviceType' key. Not specifying an event filter will not start any\ndiscovery listeners.</p>",
        "name": "onServiceList"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "mdns\n"
    ]
  },
  {
    "name": "chrome.mediaGalleries",
    "shortName": "mediaGalleries",
    "comment": "<p>Use the <code>chrome.mediaGalleries</code> API to access media files (audio,\nimages, video) from the user's local disks (with the user's consent).</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "name": "galleryId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "name": "success"
          }
        ],
        "name": "AddGalleryWatchResult"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Identifies the modified gallery.</p>",
            "name": "galleryId"
          },
          {
            "type": "reference",
            "referenceType": "GalleryChangeType",
            "referenceLink": "#type-GalleryChangeType",
            "comment": "<p>Type of change event.</p>",
            "name": "type"
          }
        ],
        "name": "GalleryChangeDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>If the media gallery is on a removable device, a unique id for the device\nwhile the device is online.</p>",
            "optional": true,
            "name": "deviceId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A unique and persistent id for the media gallery.</p>",
            "name": "galleryId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if the device is currently available.</p>",
            "name": "isAvailable"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if the device the media gallery is on was detected as a media device.\ni.e. a PTP or MTP device, or a DCIM directory is present.</p>",
            "name": "isMediaDevice"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if the media gallery is on a removable device.</p>",
            "name": "isRemovable"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The name of the file system.</p>",
            "name": "name"
          }
        ],
        "name": "MediaFileSystemMetadata"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "GetMediaFileSystemsInteractivity",
            "referenceLink": "#type-GetMediaFileSystemsInteractivity",
            "comment": "<p>Whether to prompt the user for permission to additional media galleries\nbefore returning the permitted set. Default is silent.  If the value 'yes' is\npassed, or if the application has not been granted access to any media\ngalleries and the value 'if_needed' is passed, then the media gallery\nconfiguration dialog will be displayed.</p>",
            "optional": true,
            "name": "interactive"
          }
        ],
        "name": "MediaFileSystemsDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Defined for audio and video.</p>",
            "optional": true,
            "name": "album"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "artist"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "Blob"
            },
            "comment": "<p>The images embedded in the media file's metadata. This is most often used for\nalbum art or video thumbnails.</p>",
            "name": "attachedImages"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "comment"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "copyright"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "disc"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Defined for audio and video. In seconds.</p>",
            "optional": true,
            "name": "duration"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "genre"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Defined for video. In pixels.</p>",
            "optional": true,
            "name": "height"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "language"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The browser sniffed mime type.</p>",
            "name": "mimeType"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "StreamInfo",
              "referenceLink": "#type-StreamInfo"
            },
            "comment": "<p>All the metadata in the media file. For formats with multiple streams, stream\norder will be preserved. Container metadata is the first element.</p>",
            "name": "rawTags"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Defined for video. In degrees.</p>",
            "optional": true,
            "name": "rotation"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "title"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "track"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "width"
          }
        ],
        "name": "MediaMetadata"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "GetMetadataType",
            "referenceLink": "#type-GetMetadataType",
            "comment": "<p>Specifies which subset of the metadata to retrieve. Defaults to 'all' if the\noption is omitted.</p>",
            "optional": true,
            "name": "metadataType"
          }
        ],
        "name": "MediaMetadataOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "<p>An unfiltered string->string dictionary of tags for the stream.</p>",
            "name": "tags"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Describes format of container or codec of stream, i.e. \"mp3\", \"h264\".</p>",
            "name": "type"
          }
        ],
        "name": "StreamInfo"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"contents_changed\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"watch_dropped\""
          }
        ],
        "name": "GalleryChangeType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"no\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"yes\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"if_needed\""
          }
        ],
        "name": "GetMediaFileSystemsInteractivity"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"all\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"mimeTypeAndTags\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"mimeTypeOnly\""
          }
        ],
        "name": "GetMetadataType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "galleryId"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "AddGalleryWatchResult",
                "referenceLink": "#type-AddGalleryWatchResult",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Adds a gallery watch for the gallery with the specified gallery ID. The given\ncallback is then fired with a success or failure result.</p>",
        "name": "addGalleryWatch"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "DOMFileSystem"
                },
                "optional": false,
                "name": "mediaFileSystems"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "selectedFileSystemName"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Present a directory picker to the user and add the selected directory as a\ngallery. If the user cancels the picker, selectedFileSystemName will be\nempty. A user gesture is required for the dialog to display. Without a user\ngesture, the callback will run as though the user canceled.</p>",
        "name": "addUserSelectedFolder"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "DOMFileSystem",
            "optional": false,
            "name": "mediaFileSystem"
          }
        ],
        "comment": "<p>Get metadata about a specific media file system.</p>",
        "returnType": {
          "type": "reference",
          "referenceType": "MediaFileSystemMetadata",
          "referenceLink": "#type-MediaFileSystemMetadata",
          "name": "returns"
        },
        "name": "getMediaFileSystemMetadata"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "MediaFileSystemsDetails",
            "referenceLink": "#type-MediaFileSystemsDetails",
            "optional": true,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "DOMFileSystem"
                },
                "optional": false,
                "name": "mediaFileSystems"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Get the media galleries configured in this user agent. If none are configured\nor available, the callback will receive an empty array.</p>",
        "name": "getMediaFileSystems"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Blob",
            "optional": false,
            "name": "mediaFile"
          },
          {
            "type": "reference",
            "referenceType": "MediaMetadataOptions",
            "referenceLink": "#type-MediaMetadataOptions",
            "optional": true,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "MediaMetadata",
                "referenceLink": "#type-MediaMetadata",
                "optional": false,
                "name": "metadata"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the media-specific metadata for a media file. This should work for files\nin media galleries as well as other DOM filesystems.</p>",
        "name": "getMetadata"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "galleryId"
          }
        ],
        "comment": "<p>Removes a gallery watch for the gallery with the specified gallery ID.</p>",
        "name": "removeGalleryWatch"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "GalleryChangeDetails",
                "referenceLink": "#type-GalleryChangeDetails",
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a media gallery is changed or a gallery watch is dropped.</p>",
        "name": "onGalleryChanged"
      }
    ],
    "channel": "stable",
    "source": "platform_app.d.ts",
    "permissions": [
      "mediaGalleries\n"
    ]
  },
  {
    "name": "chrome.networking.onc",
    "shortName": "networking.onc",
    "comment": "<p>\nThe <code>chrome.networking.onc</code> API is used for configuring\nnetwork connections (Cellular, Ethernet, VPN or WiFi).\nThis API is\navailable in auto-launched Chrome OS kiosk sessions.\n</p>\n<p>\nNetwork\nconnection configurations are specified following\n<a\nhref=\"https://chromium.googlesource.com/chromium/src/+/master/components/onc/docs/onc_spec.md\">\nOpen Network Configuration (ONC)</a> specification.\n</p>\n<p>\n<b>NOTE</b>: Most dictionary properties and enum values use UpperCamelCase\nto match the ONC specification instead of the JavaScript lowerCamelCase\nconvention.\n</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ActivationStateType",
            "referenceLink": "#type-ActivationStateType",
            "comment": "<p>Carrier account activation state.</p>",
            "optional": true,
            "name": "ActivationState"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The cellular network activation type.</p>",
            "optional": true,
            "name": "ActivationType"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether roaming is allowed for the network.</p>",
            "optional": true,
            "name": "AllowRoaming"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the cellular network should be connected automatically (when in\nrange).</p>",
            "optional": true,
            "name": "AutoConnect"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Cellular device technology family - <code>CDMA</code> or <code>GSM</code>.</p>",
            "optional": true,
            "name": "Family"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The firmware revision loaded in the cellular modem.</p>",
            "optional": true,
            "name": "FirmwareRevision"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "FoundNetworkProperties",
              "referenceLink": "#type-FoundNetworkProperties"
            },
            "comment": "<p>The list of networks found during the most recent network scan.</p>",
            "optional": true,
            "name": "FoundNetworks"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The cellular modem hardware revision.</p>",
            "optional": true,
            "name": "HardwareRevision"
          },
          {
            "type": "reference",
            "referenceType": "CellularProviderProperties",
            "referenceLink": "#type-CellularProviderProperties",
            "comment": "<p>Information about the operator that issued the SIM card currently installed\nin the modem.</p>",
            "optional": true,
            "name": "HomeProvider"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The cellular modem manufacturer.</p>",
            "optional": true,
            "name": "Manufacturer"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The cellular modem model ID.</p>",
            "optional": true,
            "name": "ModelID"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>If the modem is registered on a network, the network technology currently in\nuse.</p>",
            "optional": true,
            "name": "NetworkTechnology"
          },
          {
            "type": "reference",
            "referenceType": "PaymentPortal",
            "referenceLink": "#type-PaymentPortal",
            "comment": "<p>Online payment portal a user can use to sign-up for or modify a mobile data\nplan.</p>",
            "optional": true,
            "name": "PaymentPortal"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The roaming state of the cellular modem on the current network.</p>",
            "optional": true,
            "name": "RoamingState"
          },
          {
            "type": "reference",
            "referenceType": "SIMLockStatus",
            "referenceLink": "#type-SIMLockStatus",
            "comment": "<p>The state of SIM lock for GSM family networks.</p>",
            "optional": true,
            "name": "SIMLockStatus"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether a SIM card is present.</p>",
            "optional": true,
            "name": "SIMPresent"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True when a cellular network scan is in progress.</p>",
            "optional": true,
            "name": "Scanning"
          },
          {
            "type": "reference",
            "referenceType": "CellularProviderProperties",
            "referenceLink": "#type-CellularProviderProperties",
            "comment": "<p>Information about the operator on whose network the modem is currently\nregistered.</p>",
            "optional": true,
            "name": "ServingOperator"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The current network signal strength.</p>",
            "optional": true,
            "name": "SignalStrength"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the cellular network supports scanning.</p>",
            "optional": true,
            "name": "SupportNetworkScan"
          }
        ],
        "name": "CellularProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Cellular network ID as a simple concatenation of the network's MCC (Mobile\nCountry Code) and MNC (Mobile Network Code).</p>",
            "name": "Code"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The two-letter country code.</p>",
            "optional": true,
            "name": "Country"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The operator name.</p>",
            "name": "Name"
          }
        ],
        "name": "CellularProviderProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ActivationStateType",
            "referenceLink": "#type-ActivationStateType",
            "comment": "<p>See <a href=\"#type-CellularProperties-ActivationState\"><code>CellularProperties.ActivationState</code></a>.</p>",
            "optional": true,
            "name": "ActivationState"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-CellularProperties-NetworkTechnology\"><code>CellularProperties.NetworkTechnology</code></a>.</p>",
            "optional": true,
            "name": "NetworkTechnology"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-CellularProperties-RoamingState\"><code>CellularProperties.RoamingState</code></a>.</p>",
            "optional": true,
            "name": "RoamingState"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>See <a href=\"#type-CellularProperties-SIMPresent\"><code>CellularProperties.SIMPresent</code></a>.</p>",
            "optional": true,
            "name": "SIMPresent"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>See <a href=\"#type-CellularProperties-SignalStrength\"><code>CellularProperties.SignalStrength</code></a>.</p>",
            "optional": true,
            "name": "SignalStrength"
          }
        ],
        "name": "CellularStateProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>List of URIs to which the user can be directed in case no certificates that\nmatch this pattern are found.</p>",
            "optional": true,
            "name": "EnrollmentURI"
          },
          {
            "type": "reference",
            "referenceType": "IssuerSubjectPattern",
            "referenceLink": "#type-IssuerSubjectPattern",
            "comment": "<p>If set, pattern against which X.509 issuer settings should be matched.</p>",
            "optional": true,
            "name": "Issuer"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>List of certificate issuer CA certificates. A certificate must be signed by\none of them in order to match this pattern.</p>",
            "optional": true,
            "name": "IssuerCARef"
          },
          {
            "type": "reference",
            "referenceType": "IssuerSubjectPattern",
            "referenceLink": "#type-IssuerSubjectPattern",
            "comment": "<p>If set, pattern against which X.509 subject settings should be matched.</p>",
            "optional": true,
            "name": "Subject"
          }
        ],
        "name": "CertificatePattern"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "SIMLockStatus",
            "referenceLink": "#type-SIMLockStatus",
            "comment": "<p>The SIM lock status if Type = Cellular and SIMPresent = True.</p>",
            "optional": true,
            "name": "SIMLockStatus"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Set to the SIM present state if the device type is Cellular.</p>",
            "optional": true,
            "name": "SIMPresent"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Set if the device is enabled. True if the device is currently scanning.</p>",
            "optional": true,
            "name": "Scanning"
          },
          {
            "type": "reference",
            "referenceType": "DeviceStateType",
            "referenceLink": "#type-DeviceStateType",
            "comment": "<p>The current state of the device.</p>",
            "name": "State"
          },
          {
            "type": "reference",
            "referenceType": "NetworkType",
            "referenceLink": "#type-NetworkType",
            "comment": "<p>The network type associated with the device (Cellular, Ethernet or WiFi).</p>",
            "name": "Type"
          }
        ],
        "name": "DeviceStateProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "AnonymousIdentity"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "ClientCertPKCS11Id"
          },
          {
            "type": "reference",
            "referenceType": "CertificatePattern",
            "referenceLink": "#type-CertificatePattern",
            "optional": true,
            "name": "ClientCertPattern"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "ClientCertRef"
          },
          {
            "type": "reference",
            "referenceType": "ClientCertificateType",
            "referenceLink": "#type-ClientCertificateType",
            "name": "ClientCertType"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "Identity"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "Inner"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The outer EAP type. Required by ONC, but may not be provided when translating\nfrom Shill.</p>",
            "optional": true,
            "name": "Outer"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "Password"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": true,
            "name": "SaveCredentials"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "optional": true,
            "name": "ServerCAPEMs"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "optional": true,
            "name": "ServerCARefs"
          },
          {
            "type": "reference",
            "referenceType": "ManagedDOMString",
            "referenceLink": "#type-ManagedDOMString",
            "optional": true,
            "name": "SubjectMatch"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": true,
            "name": "UseProactiveKeyCaching"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": true,
            "name": "UseSystemCAs"
          }
        ],
        "name": "EAPProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The authentication used by the Ethernet network. Possible values are\n<code>None</code> and <code>8021X</code>.</p>",
            "optional": true,
            "name": "Authentication"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the Ethernet network should be connected automatically.</p>",
            "optional": true,
            "name": "AutoConnect"
          },
          {
            "type": "reference",
            "referenceType": "EAPProperties",
            "referenceLink": "#type-EAPProperties",
            "comment": "<p>Network's EAP settings. Required for 8021X authentication.</p>",
            "optional": true,
            "name": "EAP"
          }
        ],
        "name": "EthernetProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-EthernetProperties-Authentication\"><code>EthernetProperties.Authentication</code></a>.</p>",
            "name": "Authentication"
          }
        ],
        "name": "EthernetStateProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The network operator's long-format name.</p>",
            "optional": true,
            "name": "LongName"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Network ID.</p>",
            "name": "NetworkId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The network operator's short-format name.</p>",
            "optional": true,
            "name": "ShortName"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Network availability.</p>",
            "name": "Status"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Access technology used by the network.</p>",
            "name": "Technology"
          }
        ],
        "name": "FoundNetworkProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If true, only policy networks may auto connect. Defaults to false.</p>",
            "optional": true,
            "name": "AllowOnlyPolicyNetworksToAutoconnect"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If true, only policy networks may be connected to and no new networks may be\nadded or configured. Defaults to false.</p>",
            "optional": true,
            "name": "AllowOnlyPolicyNetworksToConnect"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If true and a managed network is available in the visible network list, only\npolicy networks may be connected to and no new networks may be added or\nconfigured. Defaults to false.</p>",
            "optional": true,
            "name": "AllowOnlyPolicyNetworksToConnectIfAvailable"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>List of blocked networks. Connections to blocked networks are prohibited.\nNetworks can be unblocked again by specifying an explicit network\nconfiguration. Defaults to an empty list.</p>",
            "optional": true,
            "name": "BlockedHexSSIDs"
          }
        ],
        "name": "GlobalPolicy"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Array of IP blocks in CIDR notation, see onc_spec.md for details.</p>",
            "optional": true,
            "name": "ExcludedRoutes"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Gateway address used for the IP configuration.</p>",
            "optional": true,
            "name": "Gateway"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The IP address for a connection. Can be IPv4 or IPv6 address, depending on\nvalue of <code>Type</code>.</p>",
            "optional": true,
            "name": "IPAddress"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Array of IP blocks in CIDR notation, see onc_spec.md for details.</p>",
            "optional": true,
            "name": "IncludedRoutes"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Array of addresses used for name servers.</p>",
            "optional": true,
            "name": "NameServers"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The routing prefix.</p>",
            "optional": true,
            "name": "RoutingPrefix"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Array of strings for name resolution, see onc_spec.md for details.</p>",
            "optional": true,
            "name": "SearchDomains"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The IP configuration type. Can be <code>IPv4</code> or <code>IPv6</code>.</p>",
            "optional": true,
            "name": "Type"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL for WEb Proxy Auto-Discovery, as reported over DHCP.</p>",
            "optional": true,
            "name": "WebProxyAutoDiscoveryUrl"
          }
        ],
        "name": "IPConfigProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>If set, the value against which to match the certificate subject's common\nname.</p>",
            "optional": true,
            "name": "CommonName"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>If set, the value against which to match the certificate subject's common\nlocation.</p>",
            "optional": true,
            "name": "Locality"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>If set, the value against which to match the certificate subject's\norganizations. At least one organization should match the value.</p>",
            "optional": true,
            "name": "Organization"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>If set, the value against which to match the certificate subject's\norganizational units. At least one organizational unit should match the\nvalue.</p>",
            "optional": true,
            "name": "OrganizationalUnit"
          }
        ],
        "name": "IssuerSubjectPattern"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The active value currently used by the network configuration manager (e.g.\nShill).</p>",
            "optional": true,
            "name": "Active"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether a DevicePolicy for the property exists and allows the property to be\nedited (i.e. the policy set recommended property value). Defaults to\n<code>false</code>.</p>",
            "optional": true,
            "name": "DeviceEditable"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The property value provided by the device policy.</p>",
            "optional": true,
            "name": "DevicePolicy"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The source from which the effective property value was determined.</p>",
            "optional": true,
            "name": "Effective"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The value set for all users of the device. Only provided if |DeviceEditiable|\nis <code>true</code>.</p>",
            "optional": true,
            "name": "SharedSetting"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether a UserPolicy for the property exists and allows the property to be\nedited (i.e. the policy set recommended property value). Defaults to\n<code>false</code>.</p>",
            "optional": true,
            "name": "UserEditable"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The property value provided by the user policy.</p>",
            "optional": true,
            "name": "UserPolicy"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The property value set by the logged in user. Only provided if |UserEditable|\nis <code>true</code>.</p>",
            "optional": true,
            "name": "UserSetting"
          }
        ],
        "name": "ManagedBoolean"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ActivationStateType",
            "referenceLink": "#type-ActivationStateType",
            "comment": "<p>See <a href=\"#type-CellularProperties-ActivationState\"><code>CellularProperties.ActivationState</code></a>.</p>",
            "optional": true,
            "name": "ActivationState"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-CellularProperties-ActivationType\"><code>CellularProperties.ActivationType</code></a>.</p>",
            "optional": true,
            "name": "ActivationType"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>See <a href=\"#type-CellularProperties-AllowRoaming\"><code>CellularProperties.AllowRoaming</code></a>.</p>",
            "optional": true,
            "name": "AllowRoaming"
          },
          {
            "type": "reference",
            "referenceType": "ManagedBoolean",
            "referenceLink": "#type-ManagedBoolean",
            "comment": "<p>See <a href=\"#type-CellularProperties-AutoConnect\"><code>CellularProperties.AutoConnect</code></a>.</p>",
            "optional": true,
            "name": "AutoConnect"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-CellularProperties-Family\"><code>CellularProperties.Family</code></a>.</p>",
            "optional": true,
            "name": "Family"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-CellularProperties-FirmwareRevision\"><code>CellularProperties.FirmwareRevision</code></a>.</p>",
            "optional": true,
            "name": "FirmwareRevision"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "FoundNetworkProperties",
              "referenceLink": "#type-FoundNetworkProperties"
            },
            "comment": "<p>See <a href=\"#type-CellularProperties-FoundNetworks\"><code>CellularProperties.FoundNetworks</code></a>.</p>",
            "optional": true,
            "name": "FoundNetworks"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-CellularProperties-HardwareRevision\"><code>CellularProperties.HardwareRevision</code></a>.</p>",
            "optional": true,
            "name": "HardwareRevision"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "CellularProviderProperties",
              "referenceLink": "#type-CellularProviderProperties"
            },
            "comment": "<p>See <a href=\"#type-CellularProperties-HomeProvider\"><code>CellularProperties.HomeProvider</code></a>.</p>",
            "optional": true,
            "name": "HomeProvider"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-CellularProperties-Manufacturer\"><code>CellularProperties.Manufacturer</code></a>.</p>",
            "optional": true,
            "name": "Manufacturer"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-CellularProperties-ModelID\"><code>CellularProperties.ModelID</code></a>.</p>",
            "optional": true,
            "name": "ModelID"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-CellularProperties-NetworkTechnology\"><code>CellularProperties.NetworkTechnology</code></a>.</p>",
            "optional": true,
            "name": "NetworkTechnology"
          },
          {
            "type": "reference",
            "referenceType": "PaymentPortal",
            "referenceLink": "#type-PaymentPortal",
            "comment": "<p>See <a href=\"#type-CellularProperties-PaymentPortal\"><code>CellularProperties.PaymentPortal</code></a>.</p>",
            "optional": true,
            "name": "PaymentPortal"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-CellularProperties-RoamingState\"><code>CellularProperties.RoamingState</code></a>.</p>",
            "optional": true,
            "name": "RoamingState"
          },
          {
            "type": "reference",
            "referenceType": "SIMLockStatus",
            "referenceLink": "#type-SIMLockStatus",
            "comment": "<p>See <a href=\"#type-CellularProperties-SIMLockStatus\"><code>CellularProperties.SIMLockStatus</code></a>.</p>",
            "optional": true,
            "name": "SIMLockStatus"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>See <a href=\"#type-CellularProperties-SIMPresent\"><code>CellularProperties.SIMPresent</code></a>.</p>",
            "optional": true,
            "name": "SIMPresent"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>See <a href=\"#type-CellularProperties-Scanning\"><code>CellularProperties.Scanning</code></a>.</p>",
            "optional": true,
            "name": "Scanning"
          },
          {
            "type": "reference",
            "referenceType": "CellularProviderProperties",
            "referenceLink": "#type-CellularProviderProperties",
            "comment": "<p>See <a href=\"#type-CellularProperties-ServingOperator\"><code>CellularProperties.ServingOperator</code></a>.</p>",
            "optional": true,
            "name": "ServingOperator"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>See <a href=\"#type-CellularProperties-SignalStrength\"><code>CellularProperties.SignalStrength</code></a>.</p>",
            "optional": true,
            "name": "SignalStrength"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>See <a href=\"#type-CellularProperties-SupportNetworkScan\"><code>CellularProperties.SupportNetworkScan</code></a>.</p>",
            "optional": true,
            "name": "SupportNetworkScan"
          }
        ],
        "name": "ManagedCellularProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The active value currently used by the network configuration manager (e.g.\nShill).</p>",
            "optional": true,
            "name": "Active"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether a DevicePolicy for the property exists and allows the property to be\nedited (i.e. the policy set recommended property value). Defaults to\n<code>false</code>.</p>",
            "optional": true,
            "name": "DeviceEditable"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The property value provided by the device policy.</p>",
            "optional": true,
            "name": "DevicePolicy"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The source from which the effective property value was determined.</p>",
            "optional": true,
            "name": "Effective"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The value set for all users of the device. Only provided if |DeviceEditiable|\nis <code>true</code>.</p>",
            "optional": true,
            "name": "SharedSetting"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether a UserPolicy for the property exists and allows the property to be\nedited (i.e. the policy set recommended property value). Defaults to\n<code>false</code>.</p>",
            "optional": true,
            "name": "UserEditable"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The property value provided by the user policy.</p>",
            "optional": true,
            "name": "UserPolicy"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The property value set by the logged in user. Only provided if |UserEditable|\nis <code>true</code>.</p>",
            "optional": true,
            "name": "UserSetting"
          }
        ],
        "name": "ManagedDOMString"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The active value currently used by the network configuration manager (e.g.\nShill).</p>",
            "optional": true,
            "name": "Active"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether a DevicePolicy for the property exists and allows the property to be\nedited (i.e. the policy set recommended property value). Defaults to\n<code>false</code>.</p>",
            "optional": true,
            "name": "DeviceEditable"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The property value provided by the device policy.</p>",
            "optional": true,
            "name": "DevicePolicy"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The source from which the effective property value was determined.</p>",
            "optional": true,
            "name": "Effective"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The value set for all users of the device. Only provided if |DeviceEditiable|\nis <code>true</code>.</p>",
            "optional": true,
            "name": "SharedSetting"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether a UserPolicy for the property exists and allows the property to be\nedited (i.e. the policy set recommended property value). Defaults to\n<code>false</code>.</p>",
            "optional": true,
            "name": "UserEditable"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The property value provided by the user policy.</p>",
            "optional": true,
            "name": "UserPolicy"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The property value set by the logged in user. Only provided if |UserEditable|\nis <code>true</code>.</p>",
            "optional": true,
            "name": "UserSetting"
          }
        ],
        "name": "ManagedDOMStringList"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ManagedDOMString",
            "referenceLink": "#type-ManagedDOMString",
            "comment": "<p>See <a href=\"#type-EthernetProperties-Authentication\"><code>EthernetProperties.Authentication</code></a>.</p>",
            "optional": true,
            "name": "Authentication"
          },
          {
            "type": "reference",
            "referenceType": "ManagedBoolean",
            "referenceLink": "#type-ManagedBoolean",
            "comment": "<p>See <a href=\"#type-EthernetProperties-AutoConnect\"><code>EthernetProperties.AutoConnect</code></a>.</p>",
            "optional": true,
            "name": "AutoConnect"
          }
        ],
        "name": "ManagedEthernetProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ManagedDOMString",
            "referenceLink": "#type-ManagedDOMString",
            "comment": "<p>See <a href=\"#type-IPConfigProperties-Gateway\"><code>IPConfigProperties.Gateway</code></a>.</p>",
            "optional": true,
            "name": "Gateway"
          },
          {
            "type": "reference",
            "referenceType": "ManagedDOMString",
            "referenceLink": "#type-ManagedDOMString",
            "comment": "<p>See <a href=\"#type-IPConfigProperties-IPAddress\"><code>IPConfigProperties.IPAddress</code></a>.</p>",
            "optional": true,
            "name": "IPAddress"
          },
          {
            "type": "reference",
            "referenceType": "ManagedDOMStringList",
            "referenceLink": "#type-ManagedDOMStringList",
            "comment": "<p>See <a href=\"#type-IPConfigProperties-NameServers\"><code>IPConfigProperties.NameServers</code></a>.</p>",
            "optional": true,
            "name": "NameServers"
          },
          {
            "type": "reference",
            "referenceType": "ManagedLong",
            "referenceLink": "#type-ManagedLong",
            "comment": "<p>See <a href=\"#type-IPConfigProperties-RoutingPrefix\"><code>IPConfigProperties.RoutingPrefix</code></a>.</p>",
            "optional": true,
            "name": "RoutingPrefix"
          },
          {
            "type": "reference",
            "referenceType": "ManagedDOMString",
            "referenceLink": "#type-ManagedDOMString",
            "comment": "<p>See <a href=\"#type-IPConfigProperties-Type\"><code>IPConfigProperties.Type</code></a>.</p>",
            "optional": true,
            "name": "Type"
          },
          {
            "type": "reference",
            "referenceType": "ManagedDOMString",
            "referenceLink": "#type-ManagedDOMString",
            "comment": "<p>See <a href=\"#type-IPConfigProperties-WebProxyAutoDiscoveryUrl\"><code>IPConfigProperties.WebProxyAutoDiscoveryUrl</code></a>.</p>",
            "optional": true,
            "name": "WebProxyAutoDiscoveryUrl"
          }
        ],
        "name": "ManagedIPConfigProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "IPConfigType",
            "referenceLink": "#type-IPConfigType",
            "comment": "<p>The active value currently used by the network configuration manager (e.g.\nShill).</p>",
            "optional": true,
            "name": "Active"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether a DevicePolicy for the property exists and allows the property to be\nedited (i.e. the policy set recommended property value). Defaults to\n<code>false</code>.</p>",
            "optional": true,
            "name": "DeviceEditable"
          },
          {
            "type": "reference",
            "referenceType": "IPConfigType",
            "referenceLink": "#type-IPConfigType",
            "comment": "<p>The property value provided by the device policy.</p>",
            "optional": true,
            "name": "DevicePolicy"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The source from which the effective property value was determined.</p>",
            "optional": true,
            "name": "Effective"
          },
          {
            "type": "reference",
            "referenceType": "IPConfigType",
            "referenceLink": "#type-IPConfigType",
            "comment": "<p>The value set for all users of the device. Only provided if |DeviceEditiable|\nis <code>true</code>.</p>",
            "optional": true,
            "name": "SharedSetting"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether a UserPolicy for the property exists and allows the property to be\nedited (i.e. the policy set recommended property value). Defaults to\n<code>false</code>.</p>",
            "optional": true,
            "name": "UserEditable"
          },
          {
            "type": "reference",
            "referenceType": "IPConfigType",
            "referenceLink": "#type-IPConfigType",
            "comment": "<p>The property value provided by the user policy.</p>",
            "optional": true,
            "name": "UserPolicy"
          },
          {
            "type": "reference",
            "referenceType": "IPConfigType",
            "referenceLink": "#type-IPConfigType",
            "comment": "<p>The property value set by the logged in user. Only provided if |UserEditable|\nis <code>true</code>.</p>",
            "optional": true,
            "name": "UserSetting"
          }
        ],
        "name": "ManagedIPConfigType"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The active value currently used by the network configuration manager (e.g.\nShill).</p>",
            "optional": true,
            "name": "Active"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether a DevicePolicy for the property exists and allows the property to be\nedited (i.e. the policy set recommended property value). Defaults to\n<code>false</code>.</p>",
            "optional": true,
            "name": "DeviceEditable"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The property value provided by the device policy.</p>",
            "optional": true,
            "name": "DevicePolicy"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The source from which the effective property value was determined.</p>",
            "optional": true,
            "name": "Effective"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The value set for all users of the device. Only provided if |DeviceEditiable|\nis <code>true</code>.</p>",
            "optional": true,
            "name": "SharedSetting"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether a UserPolicy for the property exists and allows the property to be\nedited (i.e. the policy set recommended property value). Defaults to\n<code>false</code>.</p>",
            "optional": true,
            "name": "UserEditable"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The property value provided by the user policy.</p>",
            "optional": true,
            "name": "UserPolicy"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The property value set by the logged in user. Only provided if |UserEditable|\nis <code>true</code>.</p>",
            "optional": true,
            "name": "UserSetting"
          }
        ],
        "name": "ManagedLong"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ManagedProxyLocation",
            "referenceLink": "#type-ManagedProxyLocation",
            "comment": "<p>See <a href=\"#type-ManualProxySettings-FTPProxy\"><code>ManualProxySettings.FTPProxy</code></a>.</p>",
            "optional": true,
            "name": "FTPProxy"
          },
          {
            "type": "reference",
            "referenceType": "ManagedProxyLocation",
            "referenceLink": "#type-ManagedProxyLocation",
            "comment": "<p>See <a href=\"#type-ManualProxySettings-HTTPProxy\"><code>ManualProxySettings.HTTPProxy</code></a>.</p>",
            "optional": true,
            "name": "HTTPProxy"
          },
          {
            "type": "reference",
            "referenceType": "ManagedProxyLocation",
            "referenceLink": "#type-ManagedProxyLocation",
            "comment": "<p>See <a href=\"#type-ManualProxySettings-SOCKS\"><code>ManualProxySettings.SOCKS</code></a>.</p>",
            "optional": true,
            "name": "SOCKS"
          },
          {
            "type": "reference",
            "referenceType": "ManagedProxyLocation",
            "referenceLink": "#type-ManagedProxyLocation",
            "comment": "<p>See <a href=\"#type-ManualProxySettings-SecureHTTPProxy\"><code>ManualProxySettings.SecureHTTPProxy</code></a>.</p>",
            "optional": true,
            "name": "SecureHTTPProxy"
          }
        ],
        "name": "ManagedManualProxySettings"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ManagedCellularProperties",
            "referenceLink": "#type-ManagedCellularProperties",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Cellular\"><code>NetworkProperties.Cellular</code></a>.</p>",
            "optional": true,
            "name": "Cellular"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Connectable\"><code>NetworkProperties.Connectable</code></a>.</p>",
            "optional": true,
            "name": "Connectable"
          },
          {
            "type": "reference",
            "referenceType": "ConnectionStateType",
            "referenceLink": "#type-ConnectionStateType",
            "comment": "<p>See <a href=\"#type-NetworkProperties-ConnectionState\"><code>NetworkProperties.ConnectionState</code></a>.</p>",
            "optional": true,
            "name": "ConnectionState"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-NetworkProperties-ErrorState\"><code>NetworkProperties.ErrorState</code></a>.</p>",
            "optional": true,
            "name": "ErrorState"
          },
          {
            "type": "reference",
            "referenceType": "ManagedEthernetProperties",
            "referenceLink": "#type-ManagedEthernetProperties",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Ethernet\"><code>NetworkProperties.Ethernet</code></a>.</p>",
            "optional": true,
            "name": "Ethernet"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-NetworkProperties-GUID\"><code>NetworkProperties.GUID</code></a>.</p>",
            "name": "GUID"
          },
          {
            "type": "reference",
            "referenceType": "ManagedIPConfigType",
            "referenceLink": "#type-ManagedIPConfigType",
            "comment": "<p>See <a href=\"#type-NetworkProperties-IPAddressConfigType\"><code>NetworkProperties.IPAddressConfigType</code></a>.</p>",
            "optional": true,
            "name": "IPAddressConfigType"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "IPConfigProperties",
              "referenceLink": "#type-IPConfigProperties"
            },
            "comment": "<p>See <a href=\"#type-NetworkProperties-IPConfigs\"><code>NetworkProperties.IPConfigs</code></a>.</p>",
            "optional": true,
            "name": "IPConfigs"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-NetworkProperties-MacAddress\"><code>NetworkProperties.MacAddress</code></a>.</p>",
            "optional": true,
            "name": "MacAddress"
          },
          {
            "type": "reference",
            "referenceType": "ManagedBoolean",
            "referenceLink": "#type-ManagedBoolean",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Metered\"><code>NetworkProperties.Metered</code></a>.</p>",
            "optional": true,
            "name": "Metered"
          },
          {
            "type": "reference",
            "referenceType": "ManagedDOMString",
            "referenceLink": "#type-ManagedDOMString",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Name\"><code>NetworkProperties.Name</code></a>.</p>",
            "optional": true,
            "name": "Name"
          },
          {
            "type": "reference",
            "referenceType": "ManagedIPConfigType",
            "referenceLink": "#type-ManagedIPConfigType",
            "comment": "<p>See <a href=\"#type-NetworkProperties-NameServersConfigType\"><code>NetworkProperties.NameServersConfigType</code></a>.</p>",
            "optional": true,
            "name": "NameServersConfigType"
          },
          {
            "type": "reference",
            "referenceType": "ManagedLong",
            "referenceLink": "#type-ManagedLong",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Priority\"><code>NetworkProperties.Priority</code></a>.</p>",
            "optional": true,
            "name": "Priority"
          },
          {
            "type": "reference",
            "referenceType": "ManagedProxySettings",
            "referenceLink": "#type-ManagedProxySettings",
            "comment": "<p>See <a href=\"#type-NetworkProperties-ProxySettings\"><code>NetworkProperties.ProxySettings</code></a>.</p>",
            "optional": true,
            "name": "ProxySettings"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>See <a href=\"#type-NetworkProperties-RestrictedConnectivity\"><code>NetworkProperties.RestrictedConnectivity</code></a>.</p>",
            "optional": true,
            "name": "RestrictedConnectivity"
          },
          {
            "type": "reference",
            "referenceType": "IPConfigProperties",
            "referenceLink": "#type-IPConfigProperties",
            "comment": "<p>See <a href=\"#type-NetworkProperties-SavedIPConfig\"><code>NetworkProperties.SavedIPConfig</code></a>.</p>",
            "optional": true,
            "name": "SavedIPConfig"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Source\"><code>NetworkProperties.Source</code></a>.</p>",
            "optional": true,
            "name": "Source"
          },
          {
            "type": "reference",
            "referenceType": "ManagedIPConfigProperties",
            "referenceLink": "#type-ManagedIPConfigProperties",
            "comment": "<p>See <a href=\"#type-NetworkProperties-StaticIPConfig\"><code>NetworkProperties.StaticIPConfig</code></a>.</p>",
            "optional": true,
            "name": "StaticIPConfig"
          },
          {
            "type": "reference",
            "referenceType": "NetworkType",
            "referenceLink": "#type-NetworkType",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Type\"><code>NetworkProperties.Type</code></a>.</p>",
            "name": "Type"
          },
          {
            "type": "reference",
            "referenceType": "ManagedVPNProperties",
            "referenceLink": "#type-ManagedVPNProperties",
            "comment": "<p>See <a href=\"#type-NetworkProperties-VPN\"><code>NetworkProperties.VPN</code></a>.</p>",
            "optional": true,
            "name": "VPN"
          },
          {
            "type": "reference",
            "referenceType": "ManagedWiFiProperties",
            "referenceLink": "#type-ManagedWiFiProperties",
            "comment": "<p>See <a href=\"#type-NetworkProperties-WiFi\"><code>NetworkProperties.WiFi</code></a>.</p>",
            "optional": true,
            "name": "WiFi"
          }
        ],
        "name": "ManagedProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ManagedDOMString",
            "referenceLink": "#type-ManagedDOMString",
            "comment": "<p>See <a href=\"#type-ProxyLocation-Host\"><code>ProxyLocation.Host</code></a>.</p>",
            "name": "Host"
          },
          {
            "type": "reference",
            "referenceType": "ManagedLong",
            "referenceLink": "#type-ManagedLong",
            "comment": "<p>See <a href=\"#type-ProxyLocation-Port\"><code>ProxyLocation.Port</code></a>.</p>",
            "name": "Port"
          }
        ],
        "name": "ManagedProxyLocation"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ManagedDOMStringList",
            "referenceLink": "#type-ManagedDOMStringList",
            "comment": "<p>See <a href=\"#type-ProxySettings-ExcludeDomains\"><code>ProxySettings.ExcludeDomains</code></a>.</p>",
            "optional": true,
            "name": "ExcludeDomains"
          },
          {
            "type": "reference",
            "referenceType": "ManagedManualProxySettings",
            "referenceLink": "#type-ManagedManualProxySettings",
            "comment": "<p>See <a href=\"#type-ProxySettings-Manual\"><code>ProxySettings.Manual</code></a>.</p>",
            "optional": true,
            "name": "Manual"
          },
          {
            "type": "reference",
            "referenceType": "ManagedDOMString",
            "referenceLink": "#type-ManagedDOMString",
            "comment": "<p>See <a href=\"#type-ProxySettings-PAC\"><code>ProxySettings.PAC</code></a>.</p>",
            "optional": true,
            "name": "PAC"
          },
          {
            "type": "reference",
            "referenceType": "ManagedProxySettingsType",
            "referenceLink": "#type-ManagedProxySettingsType",
            "comment": "<p>See <a href=\"#type-ProxySettings-Type\"><code>ProxySettings.Type</code></a>.</p>",
            "name": "Type"
          }
        ],
        "name": "ManagedProxySettings"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ProxySettingsType",
            "referenceLink": "#type-ProxySettingsType",
            "comment": "<p>The active value currently used by the network configuration manager (e.g.\nShill).</p>",
            "optional": true,
            "name": "Active"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether a DevicePolicy for the property exists and allows the property to be\nedited (i.e. the policy set recommended property value). Defaults to\n<code>false</code>.</p>",
            "optional": true,
            "name": "DeviceEditable"
          },
          {
            "type": "reference",
            "referenceType": "ProxySettingsType",
            "referenceLink": "#type-ProxySettingsType",
            "comment": "<p>The property value provided by the device policy.</p>",
            "optional": true,
            "name": "DevicePolicy"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The source from which the effective property value was determined.</p>",
            "optional": true,
            "name": "Effective"
          },
          {
            "type": "reference",
            "referenceType": "ProxySettingsType",
            "referenceLink": "#type-ProxySettingsType",
            "comment": "<p>The value set for all users of the device. Only provided if |DeviceEditiable|\nis <code>true</code>.</p>",
            "optional": true,
            "name": "SharedSetting"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether a UserPolicy for the property exists and allows the property to be\nedited (i.e. the policy set recommended property value). Defaults to\n<code>false</code>.</p>",
            "optional": true,
            "name": "UserEditable"
          },
          {
            "type": "reference",
            "referenceType": "ProxySettingsType",
            "referenceLink": "#type-ProxySettingsType",
            "comment": "<p>The property value provided by the user policy.</p>",
            "optional": true,
            "name": "UserPolicy"
          },
          {
            "type": "reference",
            "referenceType": "ProxySettingsType",
            "referenceLink": "#type-ProxySettingsType",
            "comment": "<p>The property value set by the logged in user. Only provided if |UserEditable|\nis <code>true</code>.</p>",
            "optional": true,
            "name": "UserSetting"
          }
        ],
        "name": "ManagedProxySettingsType"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ManagedDOMString",
            "referenceLink": "#type-ManagedDOMString",
            "comment": "<p>See <a href=\"#type-ThirdPartyVPNProperties-ExtensionID\"><code>ThirdPartyVPNProperties.ExtensionID</code></a>.</p>",
            "name": "ExtensionID"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-ThirdPartyVPNProperties-ProviderName\"><code>ThirdPartyVPNProperties.ProviderName</code></a>.</p>",
            "optional": true,
            "name": "ProviderName"
          }
        ],
        "name": "ManagedThirdPartyVPNProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ManagedBoolean",
            "referenceLink": "#type-ManagedBoolean",
            "comment": "<p>See <a href=\"#type-VPNProperties-AutoConnect\"><code>VPNProperties.AutoConnect</code></a>.</p>",
            "optional": true,
            "name": "AutoConnect"
          },
          {
            "type": "reference",
            "referenceType": "ManagedDOMString",
            "referenceLink": "#type-ManagedDOMString",
            "comment": "<p>See <a href=\"#type-VPNProperties-Host\"><code>VPNProperties.Host</code></a>.</p>",
            "optional": true,
            "name": "Host"
          },
          {
            "type": "reference",
            "referenceType": "ManagedDOMString",
            "referenceLink": "#type-ManagedDOMString",
            "comment": "<p>See <a href=\"#type-VPNProperties-Type\"><code>VPNProperties.Type</code></a>.</p>",
            "optional": true,
            "name": "Type"
          }
        ],
        "name": "ManagedVPNProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ManagedBoolean",
            "referenceLink": "#type-ManagedBoolean",
            "comment": "<p>See <a href=\"#type-WiFiProperties-AllowGatewayARPPolling\"><code>WiFiProperties.AllowGatewayARPPolling</code></a>.</p>",
            "optional": true,
            "name": "AllowGatewayARPPolling"
          },
          {
            "type": "reference",
            "referenceType": "ManagedBoolean",
            "referenceLink": "#type-ManagedBoolean",
            "comment": "<p>See <a href=\"#type-WiFiProperties-AutoConnect\"><code>WiFiProperties.AutoConnect</code></a>.</p>",
            "optional": true,
            "name": "AutoConnect"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-WiFiProperties-BSSID\"><code>WiFiProperties.BSSID</code></a>.</p>",
            "optional": true,
            "name": "BSSID"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>See <a href=\"#type-WiFiProperties-Frequency\"><code>WiFiProperties.Frequency</code></a>.</p>",
            "optional": true,
            "name": "Frequency"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "number"
            },
            "comment": "<p>See <a href=\"#type-WiFiProperties-FrequencyList\"><code>WiFiProperties.FrequencyList</code></a>.</p>",
            "optional": true,
            "name": "FrequencyList"
          },
          {
            "type": "reference",
            "referenceType": "ManagedDOMString",
            "referenceLink": "#type-ManagedDOMString",
            "comment": "<p>See <a href=\"#type-WiFiProperties-HexSSID\"><code>WiFiProperties.HexSSID</code></a>.</p>",
            "optional": true,
            "name": "HexSSID"
          },
          {
            "type": "reference",
            "referenceType": "ManagedBoolean",
            "referenceLink": "#type-ManagedBoolean",
            "comment": "<p>See <a href=\"#type-WiFiProperties-HiddenSSID\"><code>WiFiProperties.HiddenSSID</code></a>.</p>",
            "optional": true,
            "name": "HiddenSSID"
          },
          {
            "type": "reference",
            "referenceType": "ManagedLong",
            "referenceLink": "#type-ManagedLong",
            "comment": "<p>Deprecated, ignored. See <a href=\"#type-WiFiProperties-RoamThreshold\"><code>WiFiProperties.RoamThreshold</code></a>.</p>",
            "optional": true,
            "name": "RoamThreshold"
          },
          {
            "type": "reference",
            "referenceType": "ManagedDOMString",
            "referenceLink": "#type-ManagedDOMString",
            "comment": "<p>See <a href=\"#type-WiFiProperties-SSID\"><code>WiFiProperties.SSID</code></a>.</p>",
            "optional": true,
            "name": "SSID"
          },
          {
            "type": "reference",
            "referenceType": "ManagedDOMString",
            "referenceLink": "#type-ManagedDOMString",
            "comment": "<p>See <a href=\"#type-WiFiProperties-Security\"><code>WiFiProperties.Security</code></a>.</p>",
            "name": "Security"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>See <a href=\"#type-WiFiProperties-SignalStrength\"><code>WiFiProperties.SignalStrength</code></a>.</p>",
            "optional": true,
            "name": "SignalStrength"
          }
        ],
        "name": "ManagedWiFiProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ProxyLocation",
            "referenceLink": "#type-ProxyLocation",
            "comment": "<p>Settings for FTP proxy.</p>",
            "optional": true,
            "name": "FTPProxy"
          },
          {
            "type": "reference",
            "referenceType": "ProxyLocation",
            "referenceLink": "#type-ProxyLocation",
            "comment": "<p>Settings for HTTP proxy.</p>",
            "optional": true,
            "name": "HTTPProxy"
          },
          {
            "type": "reference",
            "referenceType": "ProxyLocation",
            "referenceLink": "#type-ProxyLocation",
            "comment": "<p>Settings for SOCKS proxy.</p>",
            "optional": true,
            "name": "SOCKS"
          },
          {
            "type": "reference",
            "referenceType": "ProxyLocation",
            "referenceLink": "#type-ProxyLocation",
            "comment": "<p>Settings for secure HTTP proxy.</p>",
            "optional": true,
            "name": "SecureHTTPProxy"
          }
        ],
        "name": "ManualProxySettings"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "CellularProperties",
            "referenceLink": "#type-CellularProperties",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Cellular\"><code>NetworkProperties.Cellular</code></a>.</p>",
            "optional": true,
            "name": "Cellular"
          },
          {
            "type": "reference",
            "referenceType": "EthernetProperties",
            "referenceLink": "#type-EthernetProperties",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Ethernet\"><code>NetworkProperties.Ethernet</code></a>.</p>",
            "optional": true,
            "name": "Ethernet"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-NetworkProperties-GUID\"><code>NetworkProperties.GUID</code></a>.</p>",
            "optional": true,
            "name": "GUID"
          },
          {
            "type": "reference",
            "referenceType": "IPConfigType",
            "referenceLink": "#type-IPConfigType",
            "comment": "<p>See <a href=\"#type-NetworkProperties-IPAddressConfigType\"><code>NetworkProperties.IPAddressConfigType</code></a>.</p>",
            "optional": true,
            "name": "IPAddressConfigType"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Name\"><code>NetworkProperties.Name</code></a>.</p>",
            "optional": true,
            "name": "Name"
          },
          {
            "type": "reference",
            "referenceType": "IPConfigType",
            "referenceLink": "#type-IPConfigType",
            "comment": "<p>See <a href=\"#type-NetworkProperties-NameServersConfigType\"><code>NetworkProperties.NameServersConfigType</code></a>.</p>",
            "optional": true,
            "name": "NameServersConfigType"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Priority\"><code>NetworkProperties.Priority</code></a>.</p>",
            "optional": true,
            "name": "Priority"
          },
          {
            "type": "reference",
            "referenceType": "NetworkType",
            "referenceLink": "#type-NetworkType",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Type\"><code>NetworkProperties.Type</code></a>.</p>",
            "optional": true,
            "name": "Type"
          },
          {
            "type": "reference",
            "referenceType": "VPNProperties",
            "referenceLink": "#type-VPNProperties",
            "comment": "<p>See <a href=\"#type-NetworkProperties-VPN\"><code>NetworkProperties.VPN</code></a>.</p>",
            "optional": true,
            "name": "VPN"
          },
          {
            "type": "reference",
            "referenceType": "WiFiProperties",
            "referenceLink": "#type-WiFiProperties",
            "comment": "<p>See <a href=\"#type-NetworkProperties-WiFi\"><code>NetworkProperties.WiFi</code></a>.</p>",
            "optional": true,
            "name": "WiFi"
          },
          {
            "type": "reference",
            "referenceType": "WiMAXProperties",
            "referenceLink": "#type-WiMAXProperties",
            "comment": "<p>Deprecated.</p>",
            "optional": true,
            "name": "WiMAX"
          }
        ],
        "name": "NetworkConfigProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If true, only include configured (saved) networks. Defaults to 'false'.</p>",
            "optional": true,
            "name": "configured"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Maximum number of networks to return. Defaults to 1000 if unspecified. Use 0\nfor no limit.</p>",
            "optional": true,
            "name": "limit"
          },
          {
            "type": "reference",
            "referenceType": "NetworkType",
            "referenceLink": "#type-NetworkType",
            "comment": "<p>The type of networks to return.</p>",
            "name": "networkType"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If true, only include visible (physically connected or in-range) networks.\nDefaults to 'false'.</p>",
            "optional": true,
            "name": "visible"
          }
        ],
        "name": "NetworkFilter"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "CellularProperties",
            "referenceLink": "#type-CellularProperties",
            "comment": "<p>For cellular networks, cellular network properties.</p>",
            "optional": true,
            "name": "Cellular"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the network is connectable.</p>",
            "optional": true,
            "name": "Connectable"
          },
          {
            "type": "reference",
            "referenceType": "ConnectionStateType",
            "referenceLink": "#type-ConnectionStateType",
            "comment": "<p>The network's current connection state.</p>",
            "optional": true,
            "name": "ConnectionState"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The last recorded network error state.</p>",
            "optional": true,
            "name": "ErrorState"
          },
          {
            "type": "reference",
            "referenceType": "EthernetProperties",
            "referenceLink": "#type-EthernetProperties",
            "comment": "<p>For Ethernet networks, the Ethernet network properties.</p>",
            "optional": true,
            "name": "Ethernet"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The network GUID.</p>",
            "name": "GUID"
          },
          {
            "type": "reference",
            "referenceType": "IPConfigType",
            "referenceLink": "#type-IPConfigType",
            "comment": "<p>The network's IP address configuration type.</p>",
            "optional": true,
            "name": "IPAddressConfigType"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "IPConfigProperties",
              "referenceLink": "#type-IPConfigProperties"
            },
            "comment": "<p>The network's IP configuration.</p>",
            "optional": true,
            "name": "IPConfigs"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The network's MAC address.</p>",
            "optional": true,
            "name": "MacAddress"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the network is metered.</p>",
            "optional": true,
            "name": "Metered"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A user friendly network name.</p>",
            "optional": true,
            "name": "Name"
          },
          {
            "type": "reference",
            "referenceType": "IPConfigType",
            "referenceLink": "#type-IPConfigType",
            "comment": "<p>The IP configuration type for the name servers used by the network.</p>",
            "optional": true,
            "name": "NameServersConfigType"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The network priority.</p>",
            "optional": true,
            "name": "Priority"
          },
          {
            "type": "reference",
            "referenceType": "ProxySettings",
            "referenceLink": "#type-ProxySettings",
            "comment": "<p>The network's proxy settings.</p>",
            "optional": true,
            "name": "ProxySettings"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>For a connected network, whether the network connectivity to the Internet is\nlimited, e.g. if the network is behind a portal, or a cellular network is not\nactivated.</p>",
            "optional": true,
            "name": "RestrictedConnectivity"
          },
          {
            "type": "reference",
            "referenceType": "IPConfigProperties",
            "referenceLink": "#type-IPConfigProperties",
            "comment": "<p>IP configuration that was received from the DHCP server before applying\nstatic IP configuration.</p>",
            "optional": true,
            "name": "SavedIPConfig"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Indicates whether and how the network is configured. Possible values are:\n<ul>    <li><code>Device</code></li>    <li><code>DevicePolicy</code></li>\n<li><code>User</code></li>    <li><code>UserPolicy</code></li>\n<li><code>None</code></li> </ul> 'None' conflicts with extension code\ngeneration so we must use a string for 'Source' instead of a SourceType enum.</p>",
            "optional": true,
            "name": "Source"
          },
          {
            "type": "reference",
            "referenceType": "IPConfigProperties",
            "referenceLink": "#type-IPConfigProperties",
            "comment": "<p>The network's static IP configuration.</p>",
            "optional": true,
            "name": "StaticIPConfig"
          },
          {
            "type": "reference",
            "referenceType": "NetworkType",
            "referenceLink": "#type-NetworkType",
            "comment": "<p>The network type.</p>",
            "name": "Type"
          },
          {
            "type": "reference",
            "referenceType": "VPNProperties",
            "referenceLink": "#type-VPNProperties",
            "comment": "<p>For VPN networks, the network VPN properties.</p>",
            "optional": true,
            "name": "VPN"
          },
          {
            "type": "reference",
            "referenceType": "WiFiProperties",
            "referenceLink": "#type-WiFiProperties",
            "comment": "<p>For WiFi networks, the network WiFi properties.</p>",
            "optional": true,
            "name": "WiFi"
          }
        ],
        "name": "NetworkProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "CellularStateProperties",
            "referenceLink": "#type-CellularStateProperties",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Cellular\"><code>NetworkProperties.Cellular</code></a>.</p>",
            "optional": true,
            "name": "Cellular"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Connectable\"><code>NetworkProperties.Connectable</code></a>.</p>",
            "optional": true,
            "name": "Connectable"
          },
          {
            "type": "reference",
            "referenceType": "ConnectionStateType",
            "referenceLink": "#type-ConnectionStateType",
            "comment": "<p>See <a href=\"#type-NetworkProperties-ConnectionState\"><code>NetworkProperties.ConnectionState</code></a>.</p>",
            "optional": true,
            "name": "ConnectionState"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-NetworkProperties-ErrorState\"><code>NetworkProperties.ErrorState</code></a>.</p>",
            "optional": true,
            "name": "ErrorState"
          },
          {
            "type": "reference",
            "referenceType": "EthernetStateProperties",
            "referenceLink": "#type-EthernetStateProperties",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Ethernet\"><code>NetworkProperties.Ethernet</code></a>.</p>",
            "optional": true,
            "name": "Ethernet"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-NetworkProperties-GUID\"><code>NetworkProperties.GUID</code></a>.</p>",
            "name": "GUID"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Name\"><code>NetworkProperties.Name</code></a>.</p>",
            "optional": true,
            "name": "Name"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Priority\"><code>NetworkProperties.Priority</code></a>.</p>",
            "optional": true,
            "name": "Priority"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Source\"><code>NetworkProperties.Source</code></a>.</p>",
            "optional": true,
            "name": "Source"
          },
          {
            "type": "reference",
            "referenceType": "NetworkType",
            "referenceLink": "#type-NetworkType",
            "comment": "<p>See <a href=\"#type-NetworkProperties-Type\"><code>NetworkProperties.Type</code></a>.</p>",
            "name": "Type"
          },
          {
            "type": "reference",
            "referenceType": "VPNStateProperties",
            "referenceLink": "#type-VPNStateProperties",
            "comment": "<p>See <a href=\"#type-NetworkProperties-VPN\"><code>NetworkProperties.VPN</code></a>.</p>",
            "optional": true,
            "name": "VPN"
          },
          {
            "type": "reference",
            "referenceType": "WiFiStateProperties",
            "referenceLink": "#type-WiFiStateProperties",
            "comment": "<p>See <a href=\"#type-NetworkProperties-WiFi\"><code>NetworkProperties.WiFi</code></a>.</p>",
            "optional": true,
            "name": "WiFi"
          }
        ],
        "name": "NetworkStateProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The HTTP method to use for the payment portal.</p>",
            "name": "Method"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The post data to send to the payment portal. Ignored unless\n<code>Method</code> is <code>POST</code>.</p>",
            "optional": true,
            "name": "PostData"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The payment portal URL.</p>",
            "optional": true,
            "name": "Url"
          }
        ],
        "name": "PaymentPortal"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The proxy IP address host.</p>",
            "name": "Host"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The port to use for the proxy.</p>",
            "name": "Port"
          }
        ],
        "name": "ProxyLocation"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Domains and hosts for which manual proxy settings are excluded.</p>",
            "optional": true,
            "name": "ExcludeDomains"
          },
          {
            "type": "reference",
            "referenceType": "ManualProxySettings",
            "referenceLink": "#type-ManualProxySettings",
            "comment": "<p>Manual proxy settings - used only for <code>Manual</code> proxy settings.</p>",
            "optional": true,
            "name": "Manual"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>URL for proxy auto-configuration file.</p>",
            "optional": true,
            "name": "PAC"
          },
          {
            "type": "reference",
            "referenceType": "ProxySettingsType",
            "referenceLink": "#type-ProxySettingsType",
            "comment": "<p>The type of proxy settings.</p>",
            "name": "Type"
          }
        ],
        "name": "ProxySettings"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether SIM lock is enabled.</p>",
            "name": "LockEnabled"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The status of SIM lock - possible values are <code>'sim-pin'</code>,\n<code>'sim-puk'</code> and <code>''</code>.</p>",
            "name": "LockType"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Number of PIN lock tries allowed before PUK is required to unlock the SIM.</p>",
            "optional": true,
            "name": "RetriesLeft"
          }
        ],
        "name": "SIMLockStatus"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>ID of the third-party VPN provider extension.</p>",
            "name": "ExtensionID"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The VPN provider name.</p>",
            "optional": true,
            "name": "ProviderName"
          }
        ],
        "name": "ThirdPartyVPNProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the VPN network should be connected automatically.</p>",
            "optional": true,
            "name": "AutoConnect"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The VPN host.</p>",
            "optional": true,
            "name": "Host"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The VPN type. This cannot be an enum because of 'L2TP-IPSec'. This is\noptional for NetworkConfigProperties which is passed to setProperties which\nmay be used to set only specific properties.</p>",
            "optional": true,
            "name": "Type"
          }
        ],
        "name": "VPNProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-VPNProperties-Type\"><code>VPNProperties.Type</code></a>.</p>",
            "name": "Type"
          }
        ],
        "name": "VPNStateProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether ARP polling of default gateway is allowed. Defaults to true.</p>",
            "optional": true,
            "name": "AllowGatewayARPPolling"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the WiFi network should be connected automatically when in range.</p>",
            "optional": true,
            "name": "AutoConnect"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The BSSID of the associated access point..</p>",
            "optional": true,
            "name": "BSSID"
          },
          {
            "type": "reference",
            "referenceType": "EAPProperties",
            "referenceLink": "#type-EAPProperties",
            "comment": "<p>The network EAP properties. Required for <code>WEP-8021X</code> and\n<code>WPA-EAP</code> networks.</p>",
            "optional": true,
            "name": "EAP"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The WiFi service operating frequency in MHz. For connected networks, the\ncurrent frequency on which the network is connected. Otherwise, the frequency\nof the best available BSS.</p>",
            "optional": true,
            "name": "Frequency"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "number"
            },
            "comment": "<p>Contains all operating frequency recently seen for the WiFi network.</p>",
            "optional": true,
            "name": "FrequencyList"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>HEX-encoded copy of the network SSID.</p>",
            "optional": true,
            "name": "HexSSID"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the network SSID will be broadcast.</p>",
            "optional": true,
            "name": "HiddenSSID"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The passphrase for WEP/WPA/WPA2 connections. This property can only be set -\nproperties returned by <a href=\"#method-getProperties\"><code>getProperties</code></a> will not contain this value.</p>",
            "optional": true,
            "name": "Passphrase"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Deprecated, ignored.</p>",
            "optional": true,
            "name": "RoamThreshold"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The network SSID.</p>",
            "optional": true,
            "name": "SSID"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The network security type.</p>",
            "optional": true,
            "name": "Security"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The network signal strength.</p>",
            "optional": true,
            "name": "SignalStrength"
          }
        ],
        "name": "WiFiProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-WiFiProperties-BSSID\"><code>WiFiProperties.BSSID</code></a>.</p>",
            "optional": true,
            "name": "BSSID"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>See <a href=\"#type-WiFiProperties-Frequency\"><code>WiFiProperties.Frequency</code></a>.</p>",
            "optional": true,
            "name": "Frequency"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-WiFiProperties-HexSSID\"><code>WiFiProperties.HexSSID</code></a>.</p>",
            "optional": true,
            "name": "HexSSID"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-WiFiProperties-SSID\"><code>WiFiProperties.SSID</code></a>.</p>",
            "optional": true,
            "name": "SSID"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <a href=\"#type-WiFiProperties-Security\"><code>WiFiProperties.Security</code></a>.</p>",
            "name": "Security"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>See <a href=\"#type-WiFiProperties-SignalStrength\"><code>WiFiProperties.SignalStrength</code></a>.</p>",
            "optional": true,
            "name": "SignalStrength"
          }
        ],
        "name": "WiFiStateProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the network should be connected automatically.</p>",
            "optional": true,
            "name": "AutoConnect"
          },
          {
            "type": "reference",
            "referenceType": "EAPProperties",
            "referenceLink": "#type-EAPProperties",
            "comment": "<p>The network EAP properties.</p>",
            "optional": true,
            "name": "EAP"
          }
        ],
        "name": "WiMAXProperties"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Activated\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Activating\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"NotActivated\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"PartiallyActivated\""
          }
        ],
        "name": "ActivationStateType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Unknown\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Offline\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Online\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Portal\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ProxyAuthRequired\""
          }
        ],
        "name": "CaptivePortalStatus"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Ref\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Pattern\""
          }
        ],
        "name": "ClientCertificateType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Connected\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Connecting\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"NotConnected\""
          }
        ],
        "name": "ConnectionStateType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Uninitialized\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Disabled\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Enabling\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Enabled\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Prohibited\""
          }
        ],
        "name": "DeviceStateType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"DHCP\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Static\""
          }
        ],
        "name": "IPConfigType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"All\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Cellular\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Ethernet\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Tether\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"VPN\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Wireless\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"WiFi\""
          }
        ],
        "name": "NetworkType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Direct\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"Manual\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"PAC\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"WPAD\""
          }
        ],
        "name": "ProxySettingsType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "shared",
            "comment": "<p>     If <code>true</code>, share this network configuration with     other users.     </p>     <p>       <b>This option is exposed only to Chrome's Web UI.</b>       When called by apps, <code>false</code> is the only allowed value.     </p>"
          },
          {
            "type": "reference",
            "referenceType": "NetworkConfigProperties",
            "referenceLink": "#type-NetworkConfigProperties",
            "optional": false,
            "name": "properties",
            "comment": "<p>The properties to configure the new network with.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the GUID for the new network configuration once     the network has been created.</p>"
          }
        ],
        "comment": "<p>Creates a new network configuration from properties. If a matching configured\nnetwork already exists, this will fail. Otherwise returns the GUID of the new\nnetwork.</p>",
        "name": "createNetwork"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "NetworkType",
            "referenceLink": "#type-NetworkType",
            "optional": false,
            "name": "networkType",
            "comment": "<p>The type of network to disable.</p>"
          }
        ],
        "comment": "<p>Disables any devices matching the specified network type. See note for <a href=\"#method-enableNetworkType\"><code>enableNetworkType</code></a>.</p>",
        "name": "disableNetworkType"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "NetworkType",
            "referenceLink": "#type-NetworkType",
            "optional": false,
            "name": "networkType",
            "comment": "<p>The type of network to enable.</p>"
          }
        ],
        "comment": "<p>Enables any devices matching the specified network type. Note, the type might\nrepresent multiple network types (e.g. 'Wireless').</p>",
        "name": "enableNetworkType"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "networkGuid",
            "comment": "<p>The GUID of the network to forget.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the operation has completed.</p>"
          }
        ],
        "comment": "<p>   Forgets a network configuration by clearing any configured properties\nfor the network with GUID <code>networkGuid</code>. This may also   include\nany other networks with matching identifiers (e.g. WiFi SSID   and Security).\nIf no such configuration exists, an error will be set   and the operation\nwill fail. </p> <p>   <b>In kiosk sessions, this method will not be able to\nforget shared      network configurations.</b> </p>",
        "name": "forgetNetwork"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "networkGuid",
            "comment": "<p>The GUID of the network to get captive portal status for.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "CaptivePortalStatus",
                "referenceLink": "#type-CaptivePortalStatus",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>A callback function that returns the results of the query for     network captive portal status.</p>"
          }
        ],
        "comment": "<p>Returns captive portal status for the network matching 'networkGuid'.</p>",
        "name": "getCaptivePortalStatus"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "DeviceStateProperties",
                  "referenceLink": "#type-DeviceStateProperties"
                },
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with a list of devices and their state.</p>"
          }
        ],
        "comment": "<p>Returns states of available networking devices.</p>",
        "name": "getDeviceStates"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "GlobalPolicy",
                "referenceLink": "#type-GlobalPolicy",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the global policy properties. These properties are not expected to\nchange during a session.</p>",
        "name": "getGlobalPolicy"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "networkGuid",
            "comment": "<p>The GUID of the network to get properties for.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ManagedProperties",
                "referenceLink": "#type-ManagedProperties",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the managed network properties when received.</p>"
          }
        ],
        "comment": "<p>Gets the merged properties of the network with id networkGuid from the\nsources: User settings, shared settings, user policy, device policy and the\ncurrently active settings.</p>",
        "name": "getManagedProperties"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "NetworkFilter",
            "referenceLink": "#type-NetworkFilter",
            "optional": false,
            "name": "filter",
            "comment": "<p>Describes which networks to return.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "NetworkStateProperties",
                  "referenceLink": "#type-NetworkStateProperties"
                },
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with a dictionary of networks and their state     properties when received.</p>"
          }
        ],
        "comment": "<p>Returns a list of network objects with the same properties provided by <a href=\"#method-getState\"><code>getState</code></a>. A filter is provided to specify the type of networks returned and\nto limit the number of networks. Networks are ordered by the system based on\ntheir priority, with connected or connecting networks listed first.</p>",
        "name": "getNetworks"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "networkGuid",
            "comment": "<p>The GUID of the network to get properties for.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "NetworkProperties",
                "referenceLink": "#type-NetworkProperties",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the network properties when received.</p>"
          }
        ],
        "comment": "<p>Gets all the properties of the network with id networkGuid. Includes all\nproperties of the network (read-only and read/write values).</p>",
        "name": "getProperties"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "networkGuid",
            "comment": "<p>The GUID of the network to get properties for.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "NetworkStateProperties",
                "referenceLink": "#type-NetworkStateProperties",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called immediately with the network state properties.</p>"
          }
        ],
        "comment": "<p>Gets the cached read-only properties of the network with id networkGuid. This\nis meant to be a higher performance function than <a href=\"#method-getProperties\"><code>getProperties</code></a>,\nwhich requires a round trip to query the networking subsystem. The following\nproperties are returned for all networks: GUID, Type, Name, WiFi.Security.\nAdditional properties are provided for visible networks: ConnectionState,\nErrorState, WiFi.SignalStrength, Cellular.NetworkTechnology,\nCellular.ActivationState, Cellular.RoamingState.</p>",
        "name": "getState"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "NetworkType",
            "referenceLink": "#type-NetworkType",
            "optional": false,
            "name": "networkType",
            "comment": "<p>If provided, requests a scan specific to the type.     For Cellular a mobile network scan will be requested if supported.</p>"
          }
        ],
        "comment": "<p>Requests that the networking subsystem scan for new networks and update the\nlist returned by <code>getVisibleNetworks</code>. This is only a request: the\nnetwork subsystem can choose to ignore it.  If the list is updated, then the\n<a href=\"#event-onNetworkListChanged\"><code>onNetworkListChanged</code></a> event will be fired.</p>",
        "name": "requestNetworkScan"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "networkGuid",
            "comment": "<p>The GUID of the network to set properties for.</p>"
          },
          {
            "type": "reference",
            "referenceType": "NetworkConfigProperties",
            "referenceLink": "#type-NetworkConfigProperties",
            "optional": false,
            "name": "properties",
            "comment": "<p>The properties to set.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the operation has completed.</p>"
          }
        ],
        "comment": "<p>Sets the properties of the network with id |networkGuid|. This is only valid\nfor configured networks (Source != None). Unconfigured visible networks\nshould use <a href=\"#method-createNetwork\"><code>createNetwork</code></a> instead. <b>   In kiosk sessions, calling\nthis method on a shared network will fail. </b></p>",
        "name": "setProperties"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "networkGuid",
            "comment": "<p>The GUID of the network to connect to.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the connect request has been sent. Note: the     connection may not have completed. Observe <a href=\"#event-onNetworksChanged\"><code>onNetworksChanged</code></a>     to be notified when a network state changes. If the connect request     immediately failed (e.g. the network is unconfigured),     <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set with a failure reason.</p>"
          }
        ],
        "comment": "<p>Starts a connection to the network with networkGuid.</p>",
        "name": "startConnect"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "networkGuid",
            "comment": "<p>The GUID of the network to disconnect from.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the disconnect request has been sent. See note     for <a href=\"#method-startConnect\"><code>startConnect</code></a>.</p>"
          }
        ],
        "comment": "<p>Starts a disconnect from the network with networkGuid.</p>",
        "name": "startDisconnect"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the list of devices has changed or any device state properties\nhave changed.</p>",
        "name": "onDeviceStateListChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                },
                "optional": false,
                "name": "changes"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the list of networks has changed.  Sends a complete list of\nGUIDs for all the current networks.</p>",
        "name": "onNetworkListChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                },
                "optional": false,
                "name": "changes"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the properties change on any of the networks.  Sends a list of\nGUIDs for networks whose properties have changed.</p>",
        "name": "onNetworksChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "networkGuid"
              },
              {
                "type": "reference",
                "referenceType": "CaptivePortalStatus",
                "referenceLink": "#type-CaptivePortalStatus",
                "optional": false,
                "name": "status"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a portal detection for a network completes. Sends the GUID of\nthe network and the corresponding captive portal status.</p>",
        "name": "onPortalDetectionCompleted"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "networking.onc\n"
    ],
    "platforms": [
      "chromeos",
      "mac",
      "win",
      "linux"
    ]
  },
  {
    "name": "chrome.notifications",
    "shortName": "notifications",
    "comment": "<p>Use the <code>chrome.notifications</code> API to create rich notifications\nusing templates and show these notifications to users in the system tray.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "deprecated": "Button icons not visible for Mac OS X users.\n",
            "optional": true,
            "name": "iconUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "name": "title"
          }
        ],
        "name": "NotificationButton"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Additional details about this item.</p>",
            "name": "message"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Title of one item of a list notification.</p>",
            "name": "title"
          }
        ],
        "name": "NotificationItem"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A URL to the app icon mask. URLs have the same restrictions as <a href=\"#type-NotificationOptions-iconUrl\">iconUrl</a>.</p><p>The app icon mask\nshould be in alpha channel, as only the alpha channel of the image will be\nconsidered.</p>",
            "deprecated": "The app icon mask is not visible for Mac OS X users.\n",
            "optional": true,
            "name": "appIconMaskUrl"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "NotificationButton",
              "referenceLink": "#type-NotificationButton"
            },
            "comment": "<p>Text and icons for up to two notification action buttons.</p>",
            "optional": true,
            "name": "buttons"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Alternate notification content with a lower-weight font.</p>",
            "optional": true,
            "name": "contextMessage"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>A timestamp associated with the notification, in milliseconds past the epoch\n(e.g. <code>Date.now() + n</code>).</p>",
            "optional": true,
            "name": "eventTime"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A URL to the sender's avatar, app icon, or a thumbnail for image\nnotifications.</p><p>URLs can be a data URL, a blob URL, or a URL relative to\na resource within this extension's .crx file <em>Required for <a href=\"#method-create\"><code>create</code></a></em> method.</p>",
            "optional": true,
            "name": "iconUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A URL to the image thumbnail for image-type notifications. URLs have the same\nrestrictions as <a href=\"#type-NotificationOptions-iconUrl\">iconUrl</a>.</p>",
            "deprecated": "The image is not visible for Mac OS X users.\n",
            "optional": true,
            "name": "imageUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "deprecated": "This UI hint is ignored as of Chrome 67\n",
            "optional": true,
            "name": "isClickable"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "NotificationItem",
              "referenceLink": "#type-NotificationItem"
            },
            "comment": "<p>Items for multi-item notifications. Users on Mac OS X only see the first\nitem.</p>",
            "optional": true,
            "name": "items"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Main notification content. <em>Required for <a href=\"#method-create\"><code>create</code></a></em>\nmethod.</p>",
            "optional": true,
            "name": "message"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Priority ranges from -2 to 2. -2 is lowest priority. 2 is highest. Zero is\ndefault.  On platforms that don't support a notification center (Windows,\nLinux & Mac), -2 and -1 result in an error as notifications with those\npriorities will not be shown at all.</p>",
            "optional": true,
            "name": "priority"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Current progress ranges from 0 to 100.</p>",
            "optional": true,
            "name": "progress"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates that the notification should remain visible on screen until the\nuser activates or dismisses the notification. This defaults to false.</p>",
            "optional": true,
            "name": "requireInteraction"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates that no sounds or vibrations should be made when the notification\nis being shown. This defaults to false.</p>",
            "optional": true,
            "name": "silent"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Title of the notification (e.g. sender name for email). <em>Required for\n<a href=\"#method-create\"><code>create</code></a></em> method.</p>",
            "optional": true,
            "name": "title"
          },
          {
            "type": "reference",
            "referenceType": "TemplateType",
            "referenceLink": "#type-TemplateType",
            "comment": "<p>Which type of notification to display. <em>Required for <a href=\"#method-create\"><code>create</code></a></em> method.</p>",
            "optional": true,
            "name": "type"
          }
        ],
        "name": "NotificationOptions"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"granted\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"denied\""
          }
        ],
        "name": "PermissionLevel"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"basic\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"image\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"list\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"progress\""
          }
        ],
        "name": "TemplateType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "notificationId",
            "comment": "<p>The id of the notification to be cleared. This is returned by <a href=\"#method-create\"><code>create</code></a> method.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "wasCleared"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called to indicate whether a matching notification existed.</p><p>The callback is required before Chrome 42.</p>"
          }
        ],
        "comment": "<p>Clears the specified notification.</p>",
        "name": "clear"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "notificationId",
            "comment": "<p>Identifier of the notification. If not set or empty, an ID will automatically be generated. If it matches an existing notification, this method first clears that notification before proceeding with the create operation. The identifier may not be longer than 500 characters.</p><p>The <code>notificationId</code> parameter is required before Chrome 42.</p>"
          },
          {
            "type": "reference",
            "referenceType": "NotificationOptions",
            "referenceLink": "#type-NotificationOptions",
            "optional": false,
            "name": "options",
            "comment": "<p>Contents of the notification.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "notificationId"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Returns the notification id (either supplied or generated) that represents the created notification.</p><p>The callback is required before Chrome 42.</p>"
          }
        ],
        "comment": "<p>Creates and displays a notification.</p>",
        "name": "create"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [],
                "optional": false,
                "name": "notifications"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Returns the set of notification_ids currently in the system.</p>"
          }
        ],
        "comment": "<p>Retrieves all the notifications of this app or extension.</p>",
        "name": "getAll"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "PermissionLevel",
                "referenceLink": "#type-PermissionLevel",
                "optional": false,
                "name": "level"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Returns the current permission level.</p>"
          }
        ],
        "comment": "<p>Retrieves whether the user has enabled notifications from this app or\nextension.</p>",
        "name": "getPermissionLevel"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "notificationId",
            "comment": "<p>The id of the notification to be updated. This is returned by <a href=\"#method-create\"><code>create</code></a> method.</p>"
          },
          {
            "type": "reference",
            "referenceType": "NotificationOptions",
            "referenceLink": "#type-NotificationOptions",
            "optional": false,
            "name": "options",
            "comment": "<p>Contents of the notification to update to.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "wasUpdated"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called to indicate whether a matching notification existed.</p><p>The callback is required before Chrome 42.</p>"
          }
        ],
        "comment": "<p>Updates an existing notification.</p>",
        "name": "update"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "notificationId"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "buttonIndex"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>The user pressed a button in the notification.</p>",
        "name": "onButtonClicked"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "notificationId"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>The user clicked in a non-button area of the notification.</p>",
        "name": "onClicked"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "notificationId"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "byUser"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>The notification closed, either by the system or by user action.</p>",
        "name": "onClosed"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "PermissionLevel",
                "referenceLink": "#type-PermissionLevel",
                "optional": false,
                "name": "level"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>The user changes the permission level.  As of Chrome 47, only ChromeOS\nhas UI that dispatches this event.</p>",
        "name": "onPermissionLevelChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "deprecated": "Custom notification settings button is no longer supported.\n",
            "name": "listener"
          }
        ],
        "comment": "<p>The user clicked on a link for the app's notification settings.  As of\nChrome 47, only ChromeOS has UI that dispatches this event. As of Chrome\n65, that UI has been removed from ChromeOS, too.</p>",
        "name": "onShowSettings"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "notifications\n"
    ]
  },
  {
    "name": "chrome.omnibox",
    "shortName": "omnibox",
    "comment": "<p>The omnibox API allows you to register a keyword with Google Chrome's address\nbar, which is also known as the omnibox.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The text that is displayed in the URL dropdown. Can contain XML-style markup\nfor styling. The supported tags are 'url' (for a literal URL), 'match' (for\nhighlighting text that matched what the user's query), and 'dim' (for dim\nhelper text). The styles can be nested, eg. <dim><match>dimmed\nmatch</match></dim>.</p>",
            "name": "description"
          }
        ],
        "comment": "<p>A suggest result.</p>",
        "name": "DefaultSuggestResult"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The text that is put into the URL bar, and that is sent to the extension when\nthe user chooses this entry.</p>",
            "name": "content"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the suggest result can be deleted by the user.</p>",
            "optional": true,
            "name": "deletable"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The text that is displayed in the URL dropdown. Can contain XML-style markup\nfor styling. The supported tags are 'url' (for a literal URL), 'match' (for\nhighlighting text that matched what the user's query), and 'dim' (for dim\nhelper text). The styles can be nested, eg. <dim><match>dimmed\nmatch</match></dim>. You must escape the five predefined entities to display\nthem as text: stackoverflow.com/a/1091953/89484</p>",
            "name": "description"
          }
        ],
        "comment": "<p>A suggest result.</p>",
        "name": "SuggestResult"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"url\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"match\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"dim\""
          }
        ],
        "comment": "<p>The style type.</p>",
        "name": "DescriptionStyleType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"currentTab\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"newForegroundTab\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"newBackgroundTab\""
          }
        ],
        "comment": "<p>The window disposition for the omnibox query. This is the recommended context\nto display results. For example, if the omnibox command is to navigate to a\ncertain URL, a disposition of 'newForegroundTab' means the navigation should\ntake place in a new selected tab.</p>",
        "name": "OnInputEnteredDisposition"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "DefaultSuggestResult",
            "referenceLink": "#type-DefaultSuggestResult",
            "optional": false,
            "name": "suggestion",
            "comment": "<p>A partial SuggestResult object, without the 'content' parameter.</p>"
          }
        ],
        "comment": "<p>Sets the description and styling for the default suggestion. The default\nsuggestion is the text that is displayed in the first suggestion row\nunderneath the URL bar.</p>",
        "name": "setDefaultSuggestion"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "text",
                "comment": "<p>Text of the deleted suggestion.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>User has deleted a suggested result.</p>",
        "name": "onDeleteSuggestion"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>User has ended the keyword input session without accepting the input.</p>",
        "name": "onInputCancelled"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "text"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "referenceType": "SuggestResult",
                      "referenceLink": "#type-SuggestResult"
                    },
                    "optional": false,
                    "name": "suggestResults"
                  }
                ],
                "optional": false,
                "name": "suggest"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>User has changed what is typed into the omnibox.</p>",
        "name": "onInputChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "text"
              },
              {
                "type": "reference",
                "referenceType": "OnInputEnteredDisposition",
                "referenceLink": "#type-OnInputEnteredDisposition",
                "optional": false,
                "name": "disposition"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>User has accepted what is typed into the omnibox.</p>",
        "name": "onInputEntered"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>User has started a keyword input session by typing the extension's\nkeyword. This is guaranteed to be sent exactly once per input session,\nand before any onInputChanged events.</p>",
        "name": "onInputStarted"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.pageAction",
    "shortName": "pageAction",
    "comment": "<p>Use the <code>chrome.pageAction</code> API to put icons in the main Google\nChrome toolbar, to the right of the address bar. Page actions represent\nactions that can be taken on the current page, but that aren't applicable to\nall pages. Page actions appear grayed out when inactive.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID of the tab to query state for. If no tab is specified, the\nnon-tab-specific state is returned.</p>",
            "optional": true,
            "name": "tabId"
          }
        ],
        "name": "TabDetails"
      },
      {
        "type": "reference",
        "referenceType": "ImageData",
        "comment": "<p>Pixel data for an image. Must be an ImageData object (for example, from a\n<code>canvas</code> element).</p>",
        "name": "ImageDataType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "TabDetails",
            "referenceLink": "#type-TabDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the html document set as the popup for this page action.</p>",
        "name": "getPopup"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "TabDetails",
            "referenceLink": "#type-TabDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the title of the page action.</p>",
        "name": "getTitle"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "tabId",
            "comment": "<p>The id of the tab for which you want to modify the page action.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Hides the page action. Hidden page actions still appear in the Chrome\ntoolbar, but are grayed out.</p>",
        "name": "hide"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p><b>Deprecated.</b> This argument is ignored.</p>",
                "optional": true,
                "name": "iconIndex"
              },
              {
                "type": "union",
                "isEnum": false,
                "options": [
                  {
                    "type": "reference",
                    "referenceType": "ImageDataType",
                    "referenceLink": "#type-ImageDataType"
                  },
                  {
                    "type": "object",
                    "properties": []
                  }
                ],
                "comment": "<p>Either an ImageData object or a dictionary {size -> ImageData} representing\nicon to be set. If the icon is specified as a dictionary, the actual image to\nbe used is chosen depending on screen's pixel density. If the number of image\npixels that fit into one screen space unit equals <code>scale</code>, then\nimage with size <code>scale</code> * n will be selected, where n is the size\nof the icon in the UI. At least one image must be specified. Note that\n'details.imageData = foo' is equivalent to 'details.imageData = {'16': foo}'</p>",
                "optional": true,
                "name": "imageData"
              },
              {
                "type": "union",
                "isEnum": false,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "string"
                  },
                  {
                    "type": "object",
                    "properties": []
                  }
                ],
                "comment": "<p>Either a relative image path or a dictionary {size -> relative image path}\npointing to icon to be set. If the icon is specified as a dictionary, the\nactual image to be used is chosen depending on screen's pixel density. If the\nnumber of image pixels that fit into one screen space unit equals\n<code>scale</code>, then image with size <code>scale</code> * n will be\nselected, where n is the size of the icon in the UI. At least one image must\nbe specified. Note that 'details.path = foo' is equivalent to 'details.path =\n{'16': foo}'</p>",
                "optional": true,
                "name": "path"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The id of the tab for which you want to modify the page action.</p>",
                "name": "tabId"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets the icon for the page action. The icon can be specified either as the\npath to an image file or as the pixel data from a canvas element, or as\ndictionary of either one of those. Either the <b>path</b> or the\n<b>imageData</b> property must be specified.</p>",
        "name": "setIcon"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The html file to show in a popup.  If set to the empty string (''), no popup\nis shown.</p>",
                "name": "popup"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The id of the tab for which you want to modify the page action.</p>",
                "name": "tabId"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets the html document to be opened as a popup when the user clicks on the\npage action's icon.</p>",
        "name": "setPopup"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The id of the tab for which you want to modify the page action.</p>",
                "name": "tabId"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The tooltip string.</p>",
                "name": "title"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets the title of the page action. This is displayed in a tooltip over the\npage action.</p>",
        "name": "setTitle"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "tabId",
            "comment": "<p>The id of the tab for which you want to modify the page action.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Shows the page action. The page action is shown whenever the tab is selected.</p>",
        "name": "show"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "tabs.Tab",
                "referenceLink": "../tabs/#type-Tab",
                "optional": false,
                "name": "tab"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a page action icon is clicked.  This event will not fire if\nthe page action has a popup.</p>",
        "name": "onClicked"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.pageCapture",
    "shortName": "pageCapture",
    "comment": "<p>Use the <code>chrome.pageCapture</code> API to save a tab as MHTML.</p>",
    "types": [],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The id of the tab to save as MHTML.</p>",
                "name": "tabId"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ArrayBuffer",
                "optional": false,
                "name": "mhtmlData",
                "comment": "<p>The MHTML data as a Blob.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the MHTML has been generated.</p>"
          }
        ],
        "comment": "<p>Saves the content of the tab with given id as MHTML.</p>",
        "name": "saveAsMHTML"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "pageCapture\n"
    ]
  },
  {
    "name": "chrome.permissions",
    "shortName": "permissions",
    "comment": "<p>Use the <code>chrome.permissions</code> API to request <a\nhref=\"#manifest\">declared optional permissions</a> at run time\nrather than install time, so users understand why the permissions are needed\nand grant only those that are necessary.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The list of host permissions, including those specified in the\n<code>optional_permissions</code> or <code>permissions</code> keys in the\nmanifest, and those associated with <a href=\"../../content_scripts/\">Content\nScripts</a>.</p>",
            "optional": true,
            "name": "origins"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>List of named permissions (does not include hosts or origins).</p>",
            "optional": true,
            "name": "permissions"
          }
        ],
        "name": "Permissions"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Permissions",
            "referenceLink": "#type-Permissions",
            "optional": false,
            "name": "permissions"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "result",
                "comment": "<p>True if the extension has the specified permissions. If an origin is specified as both an optional permission and a content script match pattern, this will return <code>false</code> unless both permissions are granted.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Checks if the extension has the specified permissions.</p>",
        "name": "contains"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Permissions",
                "referenceLink": "#type-Permissions",
                "optional": false,
                "name": "permissions",
                "comment": "<p>The extension's active permissions. Note that the <code>origins</code> property will contain granted origins from those specified in the <code>permissions</code> and <code>optional_permissions</code> keys in the manifest and those associated with <a href=\"../../content_scripts/\">Content Scripts</a>.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the extension's current set of permissions.</p>",
        "name": "getAll"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Permissions",
            "referenceLink": "#type-Permissions",
            "optional": false,
            "name": "permissions"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "removed",
                "comment": "<p>True if the permissions were removed.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Removes access to the specified permissions. If there are any problems\nremoving the permissions, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set.</p>",
        "name": "remove"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Permissions",
            "referenceLink": "#type-Permissions",
            "optional": false,
            "name": "permissions"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "granted",
                "comment": "<p>True if the user granted the specified permissions.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Requests access to the specified permissions, displaying a prompt to the user\nif necessary. These permissions must either be defined in the\n<code>optional_permissions</code> field of the manifest or be required\npermissions that were withheld by the user. Paths on origin patterns will be\nignored. You can request subsets of optional origin permissions; for example,\nif you specify <code>*://&#x2a;/*</code> in the\n<code>optional_permissions</code> section of the manifest, you can request\n<code>http://example.com/</code>. If there are any problems requesting the\npermissions, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set.</p>",
        "name": "request"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Permissions",
                "referenceLink": "#type-Permissions",
                "optional": false,
                "name": "permissions",
                "comment": "<p>The newly acquired permissions.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the extension acquires new permissions.</p>",
        "name": "onAdded"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Permissions",
                "referenceLink": "#type-Permissions",
                "optional": false,
                "name": "permissions",
                "comment": "<p>The permissions that have been removed.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when access to permissions has been removed from the extension.</p>",
        "name": "onRemoved"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.platformKeys",
    "shortName": "platformKeys",
    "comment": "<p>Use the <code>chrome.platformKeys</code> API to access client certificates\nmanaged by the platform. If the user or policy grants the permission, an\nextension can use such a certficate in its custom authentication protocol.\nE.g. this allows usage of platform managed certificates in third party VPNs\n(see <a href=\"../vpnProvider/\">chrome.vpnProvider</a>).</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ArrayBuffer"
            },
            "comment": "<p>List of distinguished names of certificate authorities allowed by the server.\nEach entry must be a DER-encoded X.509 DistinguishedName.</p>",
            "name": "certificateAuthorities"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ClientCertificateType",
              "referenceLink": "#type-ClientCertificateType"
            },
            "comment": "<p>This field is a list of the types of certificates requested, sorted in order\nof the server's preference. Only certificates of a type contained in this\nlist will be retrieved. If <code>certificateTypes</code> is the empty list,\nhowever, certificates of any type will be returned.</p>",
            "name": "certificateTypes"
          }
        ],
        "name": "ClientCertificateRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>The DER encoding of a X.509 certificate.</p>",
            "name": "certificate"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "<p>The <a href=\"http://www.w3.org/TR/WebCryptoAPI/#key-algorithm-dictionary\">\nKeyAlgorithm</a> of the certified key. This contains algorithm parameters\nthat are inherent to the key of the certificate (e.g. the key length). Other\nparameters like the hash function used by the sign function are not included.</p>",
            "name": "keyAlgorithm"
          }
        ],
        "name": "Match"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ArrayBuffer"
            },
            "comment": "<p>If given, the <code>selectClientCertificates</code> operates on this list.\nOtherwise, obtains the list of all certificates from the platform's\ncertificate stores that are available to this extensions. Entries that the\nextension doesn't have permission for or which doesn't match the request, are\nremoved.</p>",
            "optional": true,
            "name": "clientCerts"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If true, the filtered list is presented to the user to manually select a\ncertificate and thereby granting the extension access to the certificate(s)\nand key(s). Only the selected certificate(s) will be returned. If is false,\nthe list is reduced to all certificates that the extension has been granted\naccess to (automatically or manually).</p>",
            "name": "interactive"
          },
          {
            "type": "reference",
            "referenceType": "ClientCertificateRequest",
            "referenceLink": "#type-ClientCertificateRequest",
            "comment": "<p>Only certificates that match this request will be returned.</p>",
            "name": "request"
          }
        ],
        "name": "SelectDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The hostname of the server to verify the certificate for, e.g. the server\nthat presented the <code>serverCertificateChain</code>.</p>",
            "name": "hostname"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ArrayBuffer"
            },
            "comment": "<p>Each chain entry must be the DER encoding of a X.509 certificate, the first\nentry must be the server certificate and each entry must certify the entry\npreceding it.</p>",
            "name": "serverCertificateChain"
          }
        ],
        "name": "VerificationDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>If the trust verification failed, this array contains the errors reported\nby the underlying network layer. Otherwise, this array is\nempty.</p><p><strong>Note:</strong> This list is meant for debugging only and\nmay not contain all relevant errors. The errors returned may change in future\nrevisions of this API, and are not guaranteed to be forwards or backwards\ncompatible.</p>",
            "name": "debug_errors"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The result of the trust verification: true if trust for the given\nverification details could be established and false if trust is rejected for\nany reason.</p>",
            "name": "trusted"
          }
        ],
        "name": "VerificationResult"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"rsaSign\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ecdsaSign\""
          }
        ],
        "name": "ClientCertificateType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "certificate",
            "comment": "<p>The certificate of a <a href=\"#type-Match\"><code>Match</code></a> returned by <a href=\"#method-selectClientCertificates\"><code>selectClientCertificates</code></a>.</p>"
          },
          {
            "type": "object",
            "properties": [],
            "optional": false,
            "name": "parameters",
            "comment": "<p>Determines signature/hash algorithm parameters additionally to the parameters fixed by the key itself. The same parameters are accepted as by WebCrypto's <a href=\"http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-importKey\">importKey</a> function, e.g. <code>RsaHashedImportParams</code> for a RSASSA-PKCS1-v1_5 key and <code>EcKeyImportParams</code> for EC key. Additionally for RSASSA-PKCS1-v1_5 keys, hashing algorithm name parameter can be specified with one of the following values: \"none\", \"SHA-1\", \"SHA-256\", \"SHA-384\", or \"SHA-512\", e.g. <code>{\"hash\": { \"name\": \"none\" } }</code>. The sign function will then apply PKCS#1 v1.5 padding but not hash the given data. </p>\n<p>Currently, this function only supports the \"RSASSA-PKCS1-v1_5\" and \"ECDSA\" algorithms.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [],
                "optional": false,
                "name": "publicKey"
              },
              {
                "type": "object",
                "properties": [],
                "optional": false,
                "name": "privateKey",
                "comment": "<p>Might be <code>null</code> if this extension does not have   access to it.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>The public and private <a href=\"http://www.w3.org/TR/WebCryptoAPI/#dfn-CryptoKey\">CryptoKey</a> of a certificate which can only be used with <a href=\"#method-subtleCrypto\"><code>subtleCrypto</code></a>.</p>"
          }
        ],
        "comment": "<p>Passes the key pair of <code>certificate</code> for usage with <a href=\"#method-subtleCrypto\"><code>subtleCrypto</code></a> to <code>callback</code>.</p>",
        "name": "getKeyPair"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "publicKeySpkiDer",
            "comment": "<p>A DER-encoded X.509 SubjectPublicKeyInfo, obtained e.g. by calling WebCrypto's exportKey function with format=\"spki\".</p>"
          },
          {
            "type": "object",
            "properties": [],
            "optional": false,
            "name": "parameters",
            "comment": "<p>Provides signature and hash algorithm parameters, in addition to those fixed by the key itself. The same parameters are accepted as by WebCrypto's <a href=\"http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-importKey\">importKey</a> function, e.g. <code>RsaHashedImportParams</code> for a RSASSA-PKCS1-v1_5 key. For RSASSA-PKCS1-v1_5 keys, we need to also pass a \"hash\" parameter <code>{ \"hash\": { \"name\": string } }</code>. The \"hash\" parameter represents the name of the hashing algorithm to be used in the digest operation before a sign. It is possible to pass \"none\" as the hash name, in which case the sign function will apply PKCS#1 v1.5 padding and but not hash the given data. </p>\n<p>Currently, this function only supports the \"RSASSA-PKCS1-v1_5\" algorithm with one of the hashing algorithms \"none\", \"SHA-1\", \"SHA-256\", \"SHA-384\", and \"SHA-512\".</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [],
                "optional": false,
                "name": "publicKey"
              },
              {
                "type": "object",
                "properties": [],
                "optional": false,
                "name": "privateKey",
                "comment": "<p>Might be <code>null</code> if this extension does not have   access to it.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>The public and private <a href=\"http://www.w3.org/TR/WebCryptoAPI/#dfn-CryptoKey\">CryptoKey</a> of a certificate which can only be used with <a href=\"#method-subtleCrypto\"><code>subtleCrypto</code></a>.</p>"
          }
        ],
        "comment": "<p>Passes the key pair identified by <code>publicKeySpkiDer</code> for usage\nwith <a href=\"#method-subtleCrypto\"><code>subtleCrypto</code></a> to <code>callback</code>.</p>",
        "name": "getKeyPairBySpki"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "SelectDetails",
            "referenceLink": "#type-SelectDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Match",
                  "referenceLink": "#type-Match"
                },
                "optional": false,
                "name": "matches",
                "comment": "<p>The list of certificates that match the request, that the extension has permission for and, if <code>interactive</code> is true, that were selected by the user.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>This function filters from a list of client certificates the ones that are\nknown to the platform, match <code>request</code> and for which the extension\nhas permission to access the certificate and its private key. If\n<code>interactive</code> is true, the user is presented a dialog where they\ncan select from matching certificates and grant the extension access to the\ncertificate. The selected/filtered client certificates will be passed to\n<code>callback</code>.</p>",
        "name": "selectClientCertificates"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>An implementation of WebCrypto's <a\nhref=\"http://www.w3.org/TR/WebCryptoAPI/#subtlecrypto-interface\">\nSubtleCrypto</a> that allows crypto operations on keys of client certificates\nthat are available to this extension.</p>",
        "returnType": {
          "type": "object",
          "properties": [],
          "name": "returns"
        },
        "name": "subtleCrypto"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "VerificationDetails",
            "referenceLink": "#type-VerificationDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "VerificationResult",
                "referenceLink": "#type-VerificationResult",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Checks whether <code>details.serverCertificateChain</code> can be trusted for\n<code>details.hostname</code> according to the trust settings of the\nplatform. Note: The actual behavior of the trust verification is not fully\nspecified and might change in the future. The API implementation verifies\ncertificate expiration, validates the certification path and checks trust by\na known CA. The implementation is supposed to respect the EKU serverAuth and\nto support subject alternative names.</p>",
        "name": "verifyTLSServerCertificate"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "platformKeys\n"
    ],
    "platforms": [
      "chromeos",
      "lacros"
    ]
  },
  {
    "name": "chrome.power",
    "shortName": "power",
    "comment": "<p>Use the <code>chrome.power</code> API to override the system's power\nmanagement features.</p>",
    "types": [
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"system\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"display\""
          }
        ],
        "name": "Level"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Releases a request previously made via requestKeepAwake().</p>",
        "name": "releaseKeepAwake"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Level",
            "referenceLink": "#type-Level",
            "optional": false,
            "name": "level"
          }
        ],
        "comment": "<p>Requests that power management be temporarily disabled. |level| describes the\ndegree to which power management should be disabled. If a request previously\nmade by the same app is still active, it will be replaced by the new request.</p>",
        "name": "requestKeepAwake"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "power\n"
    ]
  },
  {
    "name": "chrome.printerProvider",
    "shortName": "printerProvider",
    "comment": "<p>The <code>chrome.printerProvider</code> API exposes events used by print\nmanager to query printers controlled by extensions, to query their\ncapabilities and to submit print jobs to these printers.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The document content type. Supported formats are\n<code>\"application/pdf\"</code> and <code>\"image/pwg-raster\"</code>.</p>",
            "name": "contentType"
          },
          {
            "type": "reference",
            "referenceType": "Blob",
            "comment": "<p>Blob containing the document data to print. Format must match |contentType|.</p>",
            "name": "document"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>ID of the printer which should handle the job.</p>",
            "name": "printerId"
          },
          {
            "type": "object",
            "properties": [],
            "comment": "<p>Print ticket in <a\nhref=\"https://developers.google.com/cloud-print/docs/cdd#cjt\"> CJT\nformat</a>.</p>",
            "name": "ticket"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The print job title.</p>",
            "name": "title"
          }
        ],
        "name": "PrintJob"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Printer's human readable description.</p>",
            "optional": true,
            "name": "description"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Unique printer ID.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Printer's human readable name.</p>",
            "name": "name"
          }
        ],
        "name": "PrinterInfo"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"OK\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"FAILED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"INVALID_TICKET\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"INVALID_DATA\""
          }
        ],
        "comment": "<p>Error codes returned in response to <a href=\"#event-onPrintRequested\"><code>onPrintRequested</code></a> event.</p>",
        "name": "PrintError"
      }
    ],
    "properties": [],
    "methods": [],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "printerId",
                "comment": "<p>Unique ID of the printer whose capabilities are requested.</p>"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "object",
                    "properties": [],
                    "optional": false,
                    "name": "capabilities"
                  }
                ],
                "optional": false,
                "name": "resultCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event fired when print manager requests printer capabilities.</p>",
        "name": "onGetCapabilityRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "referenceType": "PrinterInfo",
                      "referenceLink": "#type-PrinterInfo"
                    },
                    "optional": false,
                    "name": "printerInfo"
                  }
                ],
                "optional": false,
                "name": "resultCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event fired when print manager requests printers provided by extensions.</p>",
        "name": "onGetPrintersRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "usb.Device",
                "referenceLink": "../usb/#type-Device",
                "optional": false,
                "name": "device",
                "comment": "<p>The USB device.</p>"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "PrinterInfo",
                    "referenceLink": "#type-PrinterInfo",
                    "optional": false,
                    "name": "printerInfo"
                  }
                ],
                "optional": false,
                "name": "resultCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event fired when print manager requests information about a USB device\nthat may be a printer. </p>\n<p><em>Note:</em> An application should not rely\non this event being fired more than once per device. If a connected\ndevice is supported it should be returned in the <a href=\"#event-onGetPrintersRequested\"><code>onGetPrintersRequested</code></a> event.</p>",
        "name": "onGetUsbPrinterInfoRequested"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "PrintJob",
                "referenceLink": "#type-PrintJob",
                "optional": false,
                "name": "printJob",
                "comment": "<p>The printing request parameters.</p>"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "PrintError",
                    "referenceLink": "#type-PrintError",
                    "optional": false,
                    "name": "result"
                  }
                ],
                "optional": false,
                "name": "resultCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event fired when print manager requests printing.</p>",
        "name": "onPrintRequested"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "printerProvider\n"
    ]
  },
  {
    "name": "chrome.printing",
    "shortName": "printing",
    "comment": "<p>Use the <code>chrome.printing</code> API to send print jobs to printers\ninstalled on Chromebook.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "comment": "<p>Printer capabilities in <a\nhref=\"https://developers.google.com/cloud-print/docs/cdd#cdd\"> CDD\nformat</a>. The property may be missing.</p>",
            "optional": true,
            "name": "capabilities"
          },
          {
            "type": "reference",
            "referenceType": "PrinterStatus",
            "referenceLink": "#type-PrinterStatus",
            "comment": "<p>The status of the printer.</p>",
            "name": "status"
          }
        ],
        "name": "GetPrinterInfoResponse"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The human-readable description of the printer.</p>",
            "name": "description"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The printer's identifier; guaranteed to be unique among printers on the\ndevice.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The flag which shows whether the printer fits <a\nhref=\"https://chromium.org/administrators/policy-list-3#DefaultPrinterSelection\"> DefaultPrinterSelection</a> rules. Note that several printers could be flagged.</p>",
            "name": "isDefault"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The name of the printer.</p>",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The value showing how recent the printer was used for printing from Chrome.\nThe lower the value is the more recent the printer was used. The minimum\nvalue is 0. Missing value indicates that the printer wasn't used recently.\nThis value is guaranteed to be unique amongst printers.</p>",
            "optional": true,
            "name": "recentlyUsedRank"
          },
          {
            "type": "reference",
            "referenceType": "PrinterSource",
            "referenceLink": "#type-PrinterSource",
            "comment": "<p>The source of the printer (user or policy configured).</p>",
            "name": "source"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The printer URI. This can be used by extensions to choose the printer for the\nuser.</p>",
            "name": "uri"
          }
        ],
        "name": "Printer"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "printerProvider.PrintJob",
            "referenceLink": "../printerProvider/#type-PrintJob",
            "comment": "<p>The print job to be submitted. The only supported content type is\n\"application/pdf\", and the CJT ticket shouldn't include FitToPageTicketItem,\nPageRangeTicketItem, ReverseOrderTicketItem and VendorTicketItem fields since\nthey are irrelevant for native printing. All other fields must be present.</p>",
            "name": "job"
          }
        ],
        "name": "SubmitJobRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The id of created print job. This is a unique identifier among all print jobs\non the device. If status is not OK, jobId will be null.</p>",
            "optional": true,
            "name": "jobId"
          },
          {
            "type": "reference",
            "referenceType": "SubmitJobStatus",
            "referenceLink": "#type-SubmitJobStatus",
            "comment": "<p>The status of the request.</p>",
            "name": "status"
          }
        ],
        "name": "SubmitJobResponse"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"PENDING\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"IN_PROGRESS\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"FAILED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"CANCELED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"PRINTED\""
          }
        ],
        "comment": "<p>Status of the print job.</p>",
        "name": "JobStatus"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"USER\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"POLICY\""
          }
        ],
        "comment": "<p>The source of the printer.</p>",
        "name": "PrinterSource"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"DOOR_OPEN\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"TRAY_MISSING\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"OUT_OF_INK\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"OUT_OF_PAPER\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"OUTPUT_FULL\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"PAPER_JAM\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"GENERIC_ISSUE\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"STOPPED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"UNREACHABLE\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"AVAILABLE\""
          }
        ],
        "comment": "<p>The status of the printer.</p>",
        "name": "PrinterStatus"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"OK\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"USER_REJECTED\""
          }
        ],
        "comment": "<p>The status of <a href=\"#method-submitJob\"><code>submitJob</code></a> request.</p>",
        "name": "SubmitJobStatus"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "20",
        "comment": "<p>The maximum number of times that <a href=\"#method-getPrinterInfo\"><code>getPrinterInfo</code></a> can be called per\nminute.</p>",
        "name": "MAX_GET_PRINTER_INFO_CALLS_PER_MINUTE"
      },
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "20",
        "comment": "<p>The maximum number of times that <a href=\"#method-submitJob\"><code>submitJob</code></a> can be called per minute.</p>",
        "name": "MAX_SUBMIT_JOB_CALLS_PER_MINUTE"
      }
    ],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "jobId",
            "comment": "<p>The id of the print job to cancel. This should be the same id received in a <a href=\"#type-SubmitJobResponse\"><code>SubmitJobResponse</code></a>.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Cancels previously submitted job.</p>",
        "name": "cancelJob"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "printerId"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "GetPrinterInfoResponse",
                "referenceLink": "#type-GetPrinterInfoResponse",
                "optional": false,
                "name": "response"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Returns the status and capabilities of the printer in <a\nhref=\"https://developers.google.com/cloud-print/docs/cdd#cdd\"> CDD\nformat</a>. This call will fail with a runtime error if no printers with\ngiven id are installed.</p>",
        "name": "getPrinterInfo"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Printer",
                  "referenceLink": "#type-Printer"
                },
                "optional": false,
                "name": "printers"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Returns the list of available printers on the device. This includes manually\nadded, enterprise and discovered printers.</p>",
        "name": "getPrinters"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "SubmitJobRequest",
            "referenceLink": "#type-SubmitJobRequest",
            "optional": false,
            "name": "request"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "SubmitJobResponse",
                "referenceLink": "#type-SubmitJobResponse",
                "optional": false,
                "name": "response"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Submits the job for print. If the extension is not listed in\nPrintingAPIExtensionsAllowlist policy, the user will be prompted to accept\nthe print job.</p>",
        "name": "submitJob"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "jobId"
              },
              {
                "type": "reference",
                "referenceType": "JobStatus",
                "referenceLink": "#type-JobStatus",
                "optional": false,
                "name": "status"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event fired when the status of the job is changed. This is only fired for\nthe jobs created by this extension.</p>",
        "name": "onJobStatusChanged"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "printing\n"
    ],
    "platforms": [
      "chromeos"
    ]
  },
  {
    "name": "chrome.printingMetrics",
    "shortName": "printingMetrics",
    "comment": "<p>Use the <code>chrome.printingMetrics</code> API to fetch data about\nprinting\nusage.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Height (in micrometers) of the media used for printing.</p>",
            "name": "height"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Vendor-provided ID, e.g. \"iso_a3_297x420mm\" or \"na_index-3x5_3x5in\". Possible\nvalues are values of \"media\" IPP attribute and can be found on <a\nhref=\"https://www.iana.org/assignments/ipp-registrations/ipp-registrations.xhtml\"> IANA page</a> .</p>",
            "name": "vendorId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Width (in micrometers) of the media used for printing.</p>",
            "name": "width"
          }
        ],
        "name": "MediaSize"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The job completion time (in milliseconds past the Unix epoch).</p>",
            "name": "completionTime"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The job creation time (in milliseconds past the Unix epoch).</p>",
            "name": "creationTime"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The ID of the job.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of pages in the document.</p>",
            "name": "numberOfPages"
          },
          {
            "type": "reference",
            "referenceType": "Printer",
            "referenceLink": "#type-Printer",
            "comment": "<p>The info about the printer which printed the document.</p>",
            "name": "printer"
          },
          {
            "type": "reference",
            "referenceType": "printing.PrinterStatus",
            "referenceLink": "../printing/#type-PrinterStatus",
            "comment": "<p>The status of the printer.</p>",
            "name": "printer_status"
          },
          {
            "type": "reference",
            "referenceType": "PrintSettings",
            "referenceLink": "#type-PrintSettings",
            "comment": "<p>The settings of the print job.</p>",
            "name": "settings"
          },
          {
            "type": "reference",
            "referenceType": "PrintJobSource",
            "referenceLink": "#type-PrintJobSource",
            "comment": "<p>Source showing who initiated the print job.</p>",
            "name": "source"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>ID of source. Null if source is PRINT_PREVIEW or ANDROID_APP.</p>",
            "optional": true,
            "name": "sourceId"
          },
          {
            "type": "reference",
            "referenceType": "PrintJobStatus",
            "referenceLink": "#type-PrintJobStatus",
            "comment": "<p>The final status of the job.</p>",
            "name": "status"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The title of the document which was printed.</p>",
            "name": "title"
          }
        ],
        "name": "PrintJobInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ColorMode",
            "referenceLink": "#type-ColorMode",
            "comment": "<p>The requested color mode.</p>",
            "name": "color"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The requested number of copies.</p>",
            "name": "copies"
          },
          {
            "type": "reference",
            "referenceType": "DuplexMode",
            "referenceLink": "#type-DuplexMode",
            "comment": "<p>The requested duplex mode.</p>",
            "name": "duplex"
          },
          {
            "type": "reference",
            "referenceType": "MediaSize",
            "referenceLink": "#type-MediaSize",
            "comment": "<p>The requested media size.</p>",
            "name": "mediaSize"
          }
        ],
        "name": "PrintSettings"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Displayed name of the printer.</p>",
            "name": "name"
          },
          {
            "type": "reference",
            "referenceType": "PrinterSource",
            "referenceLink": "#type-PrinterSource",
            "comment": "<p>The source of the printer.</p>",
            "name": "source"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The full path for the printer. Contains protocol, hostname, port, and queue.</p>",
            "name": "uri"
          }
        ],
        "name": "Printer"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"BLACK_AND_WHITE\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"COLOR\""
          }
        ],
        "name": "ColorMode"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ONE_SIDED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"TWO_SIDED_LONG_EDGE\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"TWO_SIDED_SHORT_EDGE\""
          }
        ],
        "name": "DuplexMode"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"PRINT_PREVIEW\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ANDROID_APP\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"EXTENSION\""
          }
        ],
        "comment": "<p>The source of the print job.</p>",
        "name": "PrintJobSource"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"FAILED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"CANCELED\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"PRINTED\""
          }
        ],
        "comment": "<p>The final status of the print job.</p>",
        "name": "PrintJobStatus"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"USER\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"POLICY\""
          }
        ],
        "comment": "<p>The source of the printer.</p>",
        "name": "PrinterSource"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "PrintJobInfo",
                  "referenceLink": "#type-PrintJobInfo"
                },
                "optional": false,
                "name": "jobs"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Returns the list of the finished print jobs.</p>",
        "name": "getPrintJobs"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "PrintJobInfo",
                "referenceLink": "#type-PrintJobInfo",
                "optional": false,
                "name": "jobInfo"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event fired when the print job is finished. This includes any of\ntermination statuses: FAILED, CANCELED and PRINTED.</p>",
        "name": "onPrintJobFinished"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "printingMetrics\n"
    ],
    "platforms": [
      "chromeos"
    ]
  },
  {
    "name": "chrome.privacy",
    "shortName": "privacy",
    "comment": "<p>Use the <code>chrome.privacy</code> API to control usage of the features in\nChrome that can affect a user's privacy. This API relies on the <a\nhref=\"../types/#ChromeSetting\">ChromeSetting prototype of the type API</a> for\ngetting and setting Chrome's configuration.</p>",
    "types": [
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"default\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"default_public_and_private_interfaces\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"default_public_interface_only\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"disable_non_proxied_udp\""
          }
        ],
        "comment": "<p>The IP handling policy of WebRTC.</p>",
        "name": "IPHandlingPolicy"
      }
    ],
    "properties": [
      {
        "type": "object",
        "properties": [
          {
            "type": "reference",
            "referenceType": "types.ChromeSetting",
            "referenceLink": "../types/#type-ChromeSetting",
            "referenceTemplates": [
              {
                "type": "primitive",
                "primitiveType": "boolean"
              }
            ],
            "comment": "<p>If enabled, Chrome attempts to speed up your web browsing experience by\npre-resolving DNS entries and preemptively opening TCP and SSL connections to\nservers. This preference only affects actions taken by Chrome's internal\nprediction service. It does not affect webpage-initiated prefectches or\npreconnects. This preference's value is a boolean, defaulting to\n<code>true</code>.</p>",
            "name": "networkPredictionEnabled"
          },
          {
            "type": "reference",
            "referenceType": "types.ChromeSetting",
            "referenceLink": "../types/#type-ChromeSetting",
            "referenceTemplates": [
              {
                "type": "reference",
                "referenceType": "IPHandlingPolicy",
                "referenceLink": "#type-IPHandlingPolicy"
              }
            ],
            "comment": "<p>Allow users to specify the media performance/privacy tradeoffs which impacts\nhow WebRTC traffic will be routed and how much local address information is\nexposed. This preference's value is of type IPHandlingPolicy, defaulting to\n<code>default</code>.</p>",
            "name": "webRTCIPHandlingPolicy"
          }
        ],
        "comment": "<p>Settings that influence Chrome's handling of network connections in general.</p>",
        "name": "network"
      },
      {
        "type": "object",
        "properties": [
          {
            "type": "reference",
            "referenceType": "types.ChromeSetting",
            "referenceLink": "../types/#type-ChromeSetting",
            "referenceTemplates": [
              {
                "type": "primitive",
                "primitiveType": "boolean"
              }
            ],
            "comment": "<p>If enabled, Chrome uses a web service to help resolve navigation errors. This\npreference's value is a boolean, defaulting to <code>true</code>.</p>",
            "name": "alternateErrorPagesEnabled"
          },
          {
            "type": "reference",
            "referenceType": "types.ChromeSetting",
            "referenceLink": "../types/#type-ChromeSetting",
            "referenceTemplates": [
              {
                "type": "primitive",
                "primitiveType": "boolean"
              }
            ],
            "comment": "<p>If enabled, Chrome offers to automatically fill in addresses and other form\ndata. This preference's value is a boolean, defaulting to <code>true</code>.</p>",
            "name": "autofillAddressEnabled"
          },
          {
            "type": "reference",
            "referenceType": "types.ChromeSetting",
            "referenceLink": "../types/#type-ChromeSetting",
            "referenceTemplates": [
              {
                "type": "primitive",
                "primitiveType": "boolean"
              }
            ],
            "comment": "<p>If enabled, Chrome offers to automatically fill in credit card forms. This\npreference's value is a boolean, defaulting to <code>true</code>.</p>",
            "name": "autofillCreditCardEnabled"
          },
          {
            "type": "reference",
            "referenceType": "types.ChromeSetting",
            "referenceLink": "../types/#type-ChromeSetting",
            "referenceTemplates": [
              {
                "type": "primitive",
                "primitiveType": "boolean"
              }
            ],
            "comment": "<p>If enabled, Chrome offers to automatically fill in forms. This preference's\nvalue is a boolean, defaulting to <code>true</code>.</p>",
            "deprecated": "Please use privacy.services.autofillAddressEnabled and privacy.services.autofillCreditCardEnabled. This remains for backward compatibility in this release and will be removed in the future.\n",
            "name": "autofillEnabled"
          },
          {
            "type": "reference",
            "referenceType": "types.ChromeSetting",
            "referenceLink": "../types/#type-ChromeSetting",
            "referenceTemplates": [
              {
                "type": "primitive",
                "primitiveType": "boolean"
              }
            ],
            "comment": "<p>If enabled, the password manager will ask if you want to save passwords. This\npreference's value is a boolean, defaulting to <code>true</code>.</p>",
            "name": "passwordSavingEnabled"
          },
          {
            "type": "reference",
            "referenceType": "types.ChromeSetting",
            "referenceLink": "../types/#type-ChromeSetting",
            "referenceTemplates": [
              {
                "type": "primitive",
                "primitiveType": "boolean"
              }
            ],
            "comment": "<p>If enabled, Chrome does its best to protect you from phishing and malware.\nThis preference's value is a boolean, defaulting to <code>true</code>.</p>",
            "name": "safeBrowsingEnabled"
          },
          {
            "type": "reference",
            "referenceType": "types.ChromeSetting",
            "referenceLink": "../types/#type-ChromeSetting",
            "referenceTemplates": [
              {
                "type": "primitive",
                "primitiveType": "boolean"
              }
            ],
            "comment": "<p>If enabled, Chrome will send additional information to Google when\nSafeBrowsing blocks a page, such as the content of the blocked page. This\npreference's value is a boolean, defaulting to <code>false</code>.</p>",
            "name": "safeBrowsingExtendedReportingEnabled"
          },
          {
            "type": "reference",
            "referenceType": "types.ChromeSetting",
            "referenceLink": "../types/#type-ChromeSetting",
            "referenceTemplates": [
              {
                "type": "primitive",
                "primitiveType": "boolean"
              }
            ],
            "comment": "<p>If enabled, Chrome sends the text you type into the Omnibox to your default\nsearch engine, which provides predictions of websites and searches that are\nlikely completions of what you've typed so far. This preference's value is a\nboolean, defaulting to <code>true</code>.</p>",
            "name": "searchSuggestEnabled"
          },
          {
            "type": "reference",
            "referenceType": "types.ChromeSetting",
            "referenceLink": "../types/#type-ChromeSetting",
            "referenceTemplates": [
              {
                "type": "primitive",
                "primitiveType": "boolean"
              }
            ],
            "comment": "<p>If enabled, Chrome uses a web service to help correct spelling errors. This\npreference's value is a boolean, defaulting to <code>false</code>.</p>",
            "name": "spellingServiceEnabled"
          },
          {
            "type": "reference",
            "referenceType": "types.ChromeSetting",
            "referenceLink": "../types/#type-ChromeSetting",
            "referenceTemplates": [
              {
                "type": "primitive",
                "primitiveType": "boolean"
              }
            ],
            "comment": "<p>If enabled, Chrome offers to translate pages that aren't in a language you\nread. This preference's value is a boolean, defaulting to <code>true</code>.</p>",
            "name": "translationServiceEnabled"
          }
        ],
        "comment": "<p>Settings that enable or disable features that require third-party network\nservices provided by Google and your default search provider.</p>",
        "name": "services"
      },
      {
        "type": "object",
        "properties": [
          {
            "type": "reference",
            "referenceType": "types.ChromeSetting",
            "referenceLink": "../types/#type-ChromeSetting",
            "referenceTemplates": [
              {
                "type": "primitive",
                "primitiveType": "boolean"
              }
            ],
            "comment": "<p>If enabled, Chrome sends 'Do Not Track' (<code>DNT: 1</code>) header with\nyour requests. The value of this preference is of type boolean, and the\ndefault value is <code>false</code>.</p>",
            "name": "doNotTrackEnabled"
          },
          {
            "type": "reference",
            "referenceType": "types.ChromeSetting",
            "referenceLink": "../types/#type-ChromeSetting",
            "referenceTemplates": [
              {
                "type": "primitive",
                "primitiveType": "boolean"
              }
            ],
            "comment": "<p>If enabled, Chrome sends auditing pings when requested by a website\n(<code>&lt;a ping&gt;</code>). The value of this preference is of type\nboolean, and the default value is <code>true</code>.</p>",
            "name": "hyperlinkAuditingEnabled"
          },
          {
            "type": "reference",
            "referenceType": "types.ChromeSetting",
            "referenceLink": "../types/#type-ChromeSetting",
            "referenceTemplates": [
              {
                "type": "primitive",
                "primitiveType": "boolean"
              }
            ],
            "comment": "<p><strong>Available on Windows and ChromeOS only</strong>: If enabled, Chrome\nprovides a unique ID to plugins in order to run protected content. The value\nof this preference is of type boolean, and the default value is\n<code>true</code>.</p>",
            "name": "protectedContentEnabled"
          },
          {
            "type": "reference",
            "referenceType": "types.ChromeSetting",
            "referenceLink": "../types/#type-ChromeSetting",
            "referenceTemplates": [
              {
                "type": "primitive",
                "primitiveType": "boolean"
              }
            ],
            "comment": "<p>If enabled, Chrome sends <code>referer</code> headers with your requests.\nYes, the name of this preference doesn't match the misspelled header. No,\nwe're not going to change it. The value of this preference is of type\nboolean, and the default value is <code>true</code>.</p>",
            "name": "referrersEnabled"
          },
          {
            "type": "reference",
            "referenceType": "types.ChromeSetting",
            "referenceLink": "../types/#type-ChromeSetting",
            "referenceTemplates": [
              {
                "type": "primitive",
                "primitiveType": "boolean"
              }
            ],
            "comment": "<p>If disabled, Chrome blocks third-party sites from setting cookies. The value\nof this preference is of type boolean, and the default value is\n<code>true</code>.</p>",
            "name": "thirdPartyCookiesAllowed"
          }
        ],
        "comment": "<p>Settings that determine what information Chrome makes available to websites.</p>",
        "name": "websites"
      }
    ],
    "methods": [],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "privacy\n"
    ]
  },
  {
    "name": "chrome.processes",
    "shortName": "processes",
    "comment": "<p>Use the <code>chrome.processes</code> API to interact with the browser's\nprocesses.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The part of the cache that is utilized, in bytes.</p>",
            "name": "liveSize"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The size of the cache, in bytes.</p>",
            "name": "size"
          }
        ],
        "name": "Cache"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The most recent measurement of the process’s CPU usage, expressed as the\npercentage of a single CPU core used in total, by all of the process’s\nthreads. This gives a value from zero to CpuInfo.numOfProcessors*100, which\ncan exceed 100% in multi-threaded processes. Only available when receiving\nthe object as part of a callback from onUpdated or onUpdatedWithMemory.</p>",
            "optional": true,
            "name": "cpu"
          },
          {
            "type": "reference",
            "referenceType": "Cache",
            "referenceLink": "#type-Cache",
            "comment": "<p>The most recent information about the CSS cache for the process. Only\navailable when receiving the object as part of a callback from onUpdated or\nonUpdatedWithMemory.</p>",
            "optional": true,
            "name": "cssCache"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Unique ID of the process provided by the browser.</p>",
            "name": "id"
          },
          {
            "type": "reference",
            "referenceType": "Cache",
            "referenceLink": "#type-Cache",
            "comment": "<p>The most recent information about the image cache for the process. Only\navailable when receiving the object as part of a callback from onUpdated or\nonUpdatedWithMemory.</p>",
            "optional": true,
            "name": "imageCache"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The most recent measurement of the process JavaScript allocated memory, in\nbytes. Only available when receiving the object as part of a callback from\nonUpdated or onUpdatedWithMemory.</p>",
            "optional": true,
            "name": "jsMemoryAllocated"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The most recent measurement of the process JavaScript memory used, in bytes.\nOnly available when receiving the object as part of a callback from onUpdated\nor onUpdatedWithMemory.</p>",
            "optional": true,
            "name": "jsMemoryUsed"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The debugging port for Native Client processes. Zero for other process types\nand for NaCl processes that do not have debugging enabled.</p>",
            "name": "naclDebugPort"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The most recent measurement of the process network usage, in bytes per\nsecond. Only available when receiving the object as part of a callback from\nonUpdated or onUpdatedWithMemory.</p>",
            "optional": true,
            "name": "network"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID of the process, as provided by the OS.</p>",
            "name": "osProcessId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The most recent measurement of the process private memory usage, in bytes.\nOnly available when receiving the object as part of a callback from\nonUpdatedWithMemory or getProcessInfo with the includeMemory flag.</p>",
            "optional": true,
            "name": "privateMemory"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The profile which the process is associated with.</p>",
            "name": "profile"
          },
          {
            "type": "reference",
            "referenceType": "Cache",
            "referenceLink": "#type-Cache",
            "comment": "<p>The most recent information about the script cache for the process. Only\navailable when receiving the object as part of a callback from onUpdated or\nonUpdatedWithMemory.</p>",
            "optional": true,
            "name": "scriptCache"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The most recent measurement of the process’s SQLite memory usage, in bytes.\nOnly available when receiving the object as part of a callback from onUpdated\nor onUpdatedWithMemory.</p>",
            "optional": true,
            "name": "sqliteMemory"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "TaskInfo",
              "referenceLink": "#type-TaskInfo"
            },
            "comment": "<p>Array of TaskInfos representing the tasks running on this process.</p>",
            "name": "tasks"
          },
          {
            "type": "reference",
            "referenceType": "ProcessType",
            "referenceLink": "#type-ProcessType",
            "comment": "<p>The type of process.</p>",
            "name": "type"
          }
        ],
        "name": "Process"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Optional tab ID, if this task represents a tab running on a renderer process.</p>",
            "optional": true,
            "name": "tabId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The title of the task.</p>",
            "name": "title"
          }
        ],
        "name": "TaskInfo"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"browser\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"renderer\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"extension\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"notification\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"plugin\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"worker\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"nacl\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"service_worker\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"utility\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"gpu\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"other\""
          }
        ],
        "comment": "<p>The types of the browser processes.</p>",
        "name": "ProcessType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "tabId",
            "comment": "<p>The ID of the tab for which the renderer process ID is to be returned.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "processId",
                "comment": "<p>Process ID of the tab's renderer process.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>A callback to return the ID of the renderer process of a tab.</p>"
          }
        ],
        "comment": "<p>Returns the ID of the renderer process for the specified tab.</p>",
        "name": "getProcessIdForTab"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "union",
            "isEnum": false,
            "options": [
              {
                "type": "primitive",
                "primitiveType": "number"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "number"
                }
              }
            ],
            "optional": false,
            "name": "processIds",
            "comment": "<p>The list of process IDs or single process ID for which to return the process information. An empty list indicates all processes are requested.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "includeMemory",
            "comment": "<p>True if detailed memory usage is required. Note, collecting memory usage information incurs extra CPU usage and should only be queried for when needed.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [],
                "optional": false,
                "name": "processes",
                "comment": "<p>A dictionary of <a href=\"#type-Process\"><code>Process</code></a> objects for each requested process that is a live child process of the current browser process, indexed by process ID. Metrics requiring aggregation over time will not be populated in each Process object.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>A callback called when the processes information is collected.</p>"
          }
        ],
        "comment": "<p>Retrieves the process information for each process ID specified.</p>",
        "name": "getProcessInfo"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "processId",
            "comment": "<p>The ID of the process to be terminated.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "didTerminate",
                "comment": "<p>True if terminating the process was successful, and false otherwise.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>A callback to report the status of the termination.</p>"
          }
        ],
        "comment": "<p>Terminates the specified renderer process. Equivalent to visiting\nabout:crash, but without changing the tab's URL.</p>",
        "name": "terminate"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Process",
                "referenceLink": "#type-Process",
                "optional": false,
                "name": "process",
                "comment": "<p>Details of the process that was created. Metrics requiring aggregation over time will not be populated in the object.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired each time a process is created, providing the corrseponding Process\nobject.</p>",
        "name": "onCreated"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "processId",
                "comment": "<p>The ID of the process that exited.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "exitType",
                "comment": "<p>The type of exit that occurred for the process - normal, abnormal, killed, crashed. Only available for renderer processes.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "exitCode",
                "comment": "<p>The exit code if the process exited abnormally. Only available for renderer processes.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired each time a process is terminated, providing the type of exit.</p>",
        "name": "onExited"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Process",
                "referenceLink": "#type-Process",
                "optional": false,
                "name": "process",
                "comment": "<p>Details of the unresponsive process. Metrics requiring aggregation over time will not be populated in the object. Only available for renderer processes.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired each time a process becomes unresponsive, providing the\ncorrseponding Process object.</p>",
        "name": "onUnresponsive"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [],
                "comment": "<p>A dictionary of updated <a href=\"#type-Process\"><code>Process</code></a> objects for each live process in the browser, indexed by process ID.  Metrics requiring aggregation over time will be populated in each Process object.</p>",
                "optional": false,
                "name": "processes"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired each time the Task Manager updates its process statistics,\nproviding the dictionary of updated Process objects, indexed by process\nID.</p>",
        "name": "onUpdated"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [],
                "comment": "<p>A dictionary of updated <a href=\"#type-Process\"><code>Process</code></a> objects for each live process in the browser, indexed by process ID.  Memory usage details will be included in each Process object.</p>",
                "optional": false,
                "name": "processes"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired each time the Task Manager updates its process statistics,\nproviding the dictionary of updated Process objects, indexed by process\nID. Identical to onUpdate, with the addition of memory usage details\nincluded in each Process object. Note, collecting memory usage\ninformation incurs extra CPU usage and should only be listened for when\nneeded.</p>",
        "name": "onUpdatedWithMemory"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "processes\n"
    ]
  },
  {
    "name": "chrome.proxy",
    "shortName": "proxy",
    "comment": "<p>Use the <code>chrome.proxy</code> API to manage Chrome's proxy settings. This\nAPI relies on the <a href=\"../types/#ChromeSetting\">ChromeSetting prototype of\nthe type API</a> for getting and setting the proxy configuration.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A PAC script.</p>",
            "optional": true,
            "name": "data"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If true, an invalid PAC script will prevent the network stack from falling\nback to direct connections. Defaults to false.</p>",
            "optional": true,
            "name": "mandatory"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>URL of the PAC file to be used.</p>",
            "optional": true,
            "name": "url"
          }
        ],
        "comment": "<p>An object holding proxy auto-config information. Exactly one of the fields\nshould be non-empty.</p>",
        "name": "PacScript"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "Mode",
            "referenceLink": "#type-Mode",
            "comment": "<p>'direct' = Never use a proxy<br>'auto_detect' = Auto detect proxy\nsettings<br>'pac_script' = Use specified PAC script<br>'fixed_servers' =\nManually specify proxy servers<br>'system' = Use system proxy settings</p>",
            "name": "mode"
          },
          {
            "type": "reference",
            "referenceType": "PacScript",
            "referenceLink": "#type-PacScript",
            "comment": "<p>The proxy auto-config (PAC) script for this configuration. Use this for\n'pac_script' mode.</p>",
            "optional": true,
            "name": "pacScript"
          },
          {
            "type": "reference",
            "referenceType": "ProxyRules",
            "referenceLink": "#type-ProxyRules",
            "comment": "<p>The proxy rules describing this configuration. Use this for 'fixed_servers'\nmode.</p>",
            "optional": true,
            "name": "rules"
          }
        ],
        "comment": "<p>An object encapsulating a complete proxy configuration.</p>",
        "name": "ProxyConfig"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>List of servers to connect to without a proxy server.</p>",
            "optional": true,
            "name": "bypassList"
          },
          {
            "type": "reference",
            "referenceType": "ProxyServer",
            "referenceLink": "#type-ProxyServer",
            "comment": "<p>The proxy server to be used for everthing else or if any of the specific\nproxyFor... is not specified.</p>",
            "optional": true,
            "name": "fallbackProxy"
          },
          {
            "type": "reference",
            "referenceType": "ProxyServer",
            "referenceLink": "#type-ProxyServer",
            "comment": "<p>The proxy server to be used for FTP requests.</p>",
            "optional": true,
            "name": "proxyForFtp"
          },
          {
            "type": "reference",
            "referenceType": "ProxyServer",
            "referenceLink": "#type-ProxyServer",
            "comment": "<p>The proxy server to be used for HTTP requests.</p>",
            "optional": true,
            "name": "proxyForHttp"
          },
          {
            "type": "reference",
            "referenceType": "ProxyServer",
            "referenceLink": "#type-ProxyServer",
            "comment": "<p>The proxy server to be used for HTTPS requests.</p>",
            "optional": true,
            "name": "proxyForHttps"
          },
          {
            "type": "reference",
            "referenceType": "ProxyServer",
            "referenceLink": "#type-ProxyServer",
            "comment": "<p>The proxy server to be used for all per-URL requests (that is http, https,\nand ftp).</p>",
            "optional": true,
            "name": "singleProxy"
          }
        ],
        "comment": "<p>An object encapsulating the set of proxy rules for all protocols. Use either\n'singleProxy' or (a subset of) 'proxyForHttp', 'proxyForHttps', 'proxyForFtp'\nand 'fallbackProxy'.</p>",
        "name": "ProxyRules"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The hostname or IP address of the proxy server. Hostnames must be in ASCII\n(in Punycode format). IDNA is not supported, yet.</p>",
            "name": "host"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The port of the proxy server. Defaults to a port that depends on the scheme.</p>",
            "optional": true,
            "name": "port"
          },
          {
            "type": "reference",
            "referenceType": "Scheme",
            "referenceLink": "#type-Scheme",
            "comment": "<p>The scheme (protocol) of the proxy server itself. Defaults to 'http'.</p>",
            "optional": true,
            "name": "scheme"
          }
        ],
        "comment": "<p>An object encapsulating a single proxy server's specification.</p>",
        "name": "ProxyServer"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"direct\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"auto_detect\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"pac_script\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"fixed_servers\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"system\""
          }
        ],
        "name": "Mode"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"http\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"https\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"quic\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"socks4\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"socks5\""
          }
        ],
        "name": "Scheme"
      }
    ],
    "properties": [
      {
        "type": "reference",
        "referenceType": "types.ChromeSetting",
        "referenceLink": "../types/#type-ChromeSetting",
        "referenceTemplates": [
          {
            "type": "reference",
            "referenceType": "ProxyConfig",
            "referenceLink": "#type-ProxyConfig"
          }
        ],
        "comment": "<p>Proxy settings to be used. The value of this setting is a ProxyConfig object.</p>",
        "name": "settings"
      }
    ],
    "methods": [],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>Additional details about the error such as a JavaScript runtime error.</p>",
                    "name": "details"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The error description.</p>",
                    "name": "error"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>If true, the error was fatal and the network transaction was aborted.\nOtherwise, a direct connection is used instead.</p>",
                    "name": "fatal"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Notifies about proxy errors.</p>",
        "name": "onProxyError"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "proxy\n"
    ],
    "platforms": [
      "chromeos"
    ]
  },
  {
    "name": "chrome.runtime",
    "shortName": "runtime",
    "comment": "<p>Use the <code>chrome.runtime</code> API to retrieve the background page,\nreturn details about the manifest, and listen for and respond to events in\nthe app or extension lifecycle. You can also use this API to convert the\nrelative path of URLs to fully-qualified URLs.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The <a href=\"../webNavigation/#frame_ids\">frame</a> that opened the connection. 0\nfor top-level frames, positive for child frames. This will only be set when\n<code>tab</code> is set.</p>",
            "optional": true,
            "name": "frameId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The ID of the extension or app that opened the connection, if any.</p>",
            "optional": true,
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The name of the native application that opened the connection, if any.</p>",
            "optional": true,
            "name": "nativeApplication"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The origin of the page or frame that opened the connection. It can vary from\nthe url property (e.g., about:blank) or can be opaque (e.g., sandboxed\niframes). This is useful for identifying if the origin can be trusted if we\ncan't immediately tell from the URL.</p>",
            "optional": true,
            "name": "origin"
          },
          {
            "type": "reference",
            "referenceType": "tabs.Tab",
            "referenceLink": "../tabs/#type-Tab",
            "comment": "<p>The <a href=\"../tabs/#type-Tab\"><code>tabs.Tab</code></a> which opened the connection, if any. This property will\n<strong>only</strong> be present when the connection was opened from a tab\n(including content scripts), and <strong>only</strong> if the receiver is an\nextension, not an app.</p>",
            "optional": true,
            "name": "tab"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The TLS channel ID of the page or frame that opened the connection, if\nrequested by the extension or app, and if available.</p>",
            "optional": true,
            "name": "tlsChannelId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL of the page or frame that opened the connection. If the sender is in\nan iframe, it will be iframe's URL not the URL of the page which hosts it.</p>",
            "optional": true,
            "name": "url"
          }
        ],
        "comment": "<p>An object containing information about the script context that sent a message\nor request.</p>",
        "name": "MessageSender"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "PlatformArch",
            "referenceLink": "#type-PlatformArch",
            "comment": "<p>The machine's processor architecture.</p>",
            "name": "arch"
          },
          {
            "type": "reference",
            "referenceType": "PlatformNaclArch",
            "referenceLink": "#type-PlatformNaclArch",
            "comment": "<p>The native client architecture. This may be different from arch on some\nplatforms.</p>",
            "name": "nacl_arch"
          },
          {
            "type": "reference",
            "referenceType": "PlatformOs",
            "referenceLink": "#type-PlatformOs",
            "comment": "<p>The operating system chrome is running on.</p>",
            "name": "os"
          }
        ],
        "comment": "<p>An object containing information about the current platform.</p>",
        "name": "PlatformInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Immediately disconnect the port. Calling <code>disconnect()</code> on an\nalready-disconnected port has no effect. When a port is disconnected, no new\nevents will be dispatched to this port.</p>",
            "name": "disconnect"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The name of the port, as specified in the call to <a href=\"#method-connect\"><code>connect</code></a>.</p>",
            "name": "name"
          },
          {
            "type": "reference",
            "referenceType": "events.Event",
            "referenceLink": "../events/#type-Event",
            "referenceTemplates": [
              {
                "type": "function",
                "parameters": [],
                "name": "listener"
              }
            ],
            "comment": "<p>Fired when the port is disconnected from the other end(s). <a href=\"#property-lastError\"><code>lastError</code></a> may be set if the port was disconnected by an error. If\nthe port is closed via <a href=\"#type-Port-disconnect\">disconnect</a>, then this event is\n<em>only</em> fired on the other end. This event is fired at most once (see\nalso <a href=\"messaging#port-lifetime\">Port lifetime</a>). The first and only\nparameter to the event handler is this disconnected port.</p>",
            "name": "onDisconnect"
          },
          {
            "type": "reference",
            "referenceType": "events.Event",
            "referenceLink": "../events/#type-Event",
            "referenceTemplates": [
              {
                "type": "function",
                "parameters": [],
                "name": "listener"
              }
            ],
            "comment": "<p>This event is fired when <a href=\"#type-Port-postMessage\">postMessage</a> is called by\nthe other end of the port. The first parameter is the message, the second\nparameter is the port that received the message.</p>",
            "name": "onMessage"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "any",
                "optional": false,
                "name": "message",
                "comment": "<p>The message to send. This object should be JSON-ifiable.</p>"
              }
            ],
            "comment": "<p>Send a message to the other end of the port. If the port is disconnected, an\nerror is thrown.</p>",
            "name": "postMessage"
          },
          {
            "type": "reference",
            "referenceType": "MessageSender",
            "referenceLink": "#type-MessageSender",
            "comment": "<p>This property will <b>only</b> be present on ports passed to <a href=\"#event-onConnect\">onConnect</a> / <a href=\"#event-onConnectExternal\">onConnectExternal</a> / <a href=\"#event-onConnectExternal\">onConnectNative</a>\nlisteners.</p>",
            "optional": true,
            "name": "sender"
          }
        ],
        "comment": "<p>An object which allows two way communication with other pages. See <a\nhref=\"../../messaging/#connect\">Long-lived connections</a> for more information.</p>",
        "name": "Port"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"install\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"update\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"chrome_update\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"shared_module_update\""
          }
        ],
        "comment": "<p>The reason that this event is being dispatched.</p>",
        "name": "OnInstalledReason"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"app_update\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"os_update\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"periodic\""
          }
        ],
        "comment": "<p>The reason that the event is being dispatched. 'app_update' is used when the\nrestart is needed because the application is updated to a newer version.\n'os_update' is used when the restart is needed because the browser/OS is\nupdated to a newer version. 'periodic' is used when the system runs for more\nthan the permitted uptime set in the enterprise policy.</p>",
        "name": "OnRestartRequiredReason"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"arm\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"arm64\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"x86-32\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"x86-64\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"mips\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"mips64\""
          }
        ],
        "comment": "<p>The machine's processor architecture.</p>",
        "name": "PlatformArch"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"arm\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"x86-32\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"x86-64\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"mips\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"mips64\""
          }
        ],
        "comment": "<p>The native client architecture. This may be different from arch on some\nplatforms.</p>",
        "name": "PlatformNaclArch"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"mac\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"win\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"android\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"cros\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"linux\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"openbsd\""
          }
        ],
        "comment": "<p>The operating system chrome is running on.</p>",
        "name": "PlatformOs"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"throttled\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"no_update\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"update_available\""
          }
        ],
        "comment": "<p>Result of the update check.</p>",
        "name": "RequestUpdateCheckStatus"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "string",
        "comment": "<p>The ID of the extension/app.</p>",
        "name": "id"
      },
      {
        "type": "object",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Details about the error which occurred.</p>",
            "optional": true,
            "name": "message"
          }
        ],
        "optional": true,
        "comment": "<p>This will be defined during an API method callback if there was an error</p>",
        "name": "lastError"
      }
    ],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "extensionId",
            "comment": "<p>The ID of the extension or app to connect to. If omitted, a connection will be attempted with your own extension. Required if sending messages from a web page for <a href=\"manifest/externally_connectable.html\">web messaging</a>.</p>"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the TLS channel ID will be passed into onConnectExternal for\nprocesses that are listening for the connection event.</p>",
                "optional": true,
                "name": "includeTlsChannelId"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>Will be passed into onConnect for processes that are listening for the\nconnection event.</p>",
                "optional": true,
                "name": "name"
              }
            ],
            "optional": false,
            "name": "connectInfo"
          }
        ],
        "comment": "<p>Attempts to connect to connect listeners within an extension/app (such as the\nbackground page), or other extensions/apps. This is useful for content\nscripts connecting to their extension processes, inter-app/extension\ncommunication, and <a href=\"manifest/externally_connectable.html\">web\nmessaging</a>. Note that this does not connect to any listeners in a content\nscript. Extensions may connect to content scripts embedded in tabs via <a href=\"../tabs/#method-connect\"><code>tabs.connect</code></a>.</p>",
        "returnType": {
          "type": "reference",
          "referenceType": "Port",
          "referenceLink": "#type-Port",
          "name": "returns",
          "comment": "<p>Port through which messages can be sent and received. The port's <a href=\"#type-Port\">onDisconnect</a> event is fired if the extension/app does not exist.</p>"
        },
        "name": "connect"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "application",
            "comment": "<p>The name of the registered application to connect to.</p>"
          }
        ],
        "comment": "<p>Connects to a native application in the host machine. See <a\nhref=\"../../nativeMessaging/\">Native Messaging</a> for more information.</p>",
        "returnType": {
          "type": "reference",
          "referenceType": "Port",
          "referenceLink": "#type-Port",
          "name": "returns",
          "comment": "<p>Port through which messages can be sent and received with the application</p>"
        },
        "name": "connectNative"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Window",
                "optional": false,
                "name": "backgroundPage",
                "comment": "<p>The JavaScript 'window' object for the background page.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves the JavaScript 'window' object for the background page running\ninside the current extension/app. If the background page is an event page,\nthe system will ensure it is loaded before calling the callback. If there is\nno background page, an error is set.</p>",
        "name": "getBackgroundPage"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Returns details about the app or extension from the manifest. The object\nreturned is a serialization of the full <a href=\"manifest.html\">manifest\nfile</a>.</p>",
        "returnType": {
          "type": "object",
          "properties": [],
          "name": "returns",
          "comment": "<p>The manifest details.</p>"
        },
        "name": "getManifest"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "DirectoryEntry",
                "optional": false,
                "name": "directoryEntry"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Returns a DirectoryEntry for the package directory.</p>",
        "name": "getPackageDirectoryEntry"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "PlatformInfo",
                "referenceLink": "#type-PlatformInfo",
                "optional": false,
                "name": "platformInfo"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with results</p>"
          }
        ],
        "comment": "<p>Returns information about the current platform.</p>",
        "name": "getPlatformInfo"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "path",
            "comment": "<p>A path to a resource within an app/extension expressed relative to its install directory.</p>"
          }
        ],
        "comment": "<p>Converts a relative path within an app/extension install directory to a\nfully-qualified URL.</p>",
        "returnType": {
          "type": "primitive",
          "primitiveType": "string",
          "name": "returns",
          "comment": "<p>The fully-qualified URL to the resource.</p>"
        },
        "name": "getURL"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Open your Extension's options page, if possible.</p><p>The precise\nbehavior may depend on your manifest's <code><a\nhref=\"../../optionsV2/\">options_ui</a></code> or <code><a\nhref=\"../../options/\">options_page</a></code> key, or what Chrome happens to support\nat the time. For example, the page may be opened in a new tab, within\nchrome://extensions, within an App, or it may just focus an open options\npage. It will never cause the caller page to reload.</p><p>If your Extension\ndoes not declare an options page, or Chrome failed to create one for some\nother reason, the callback will set <a href=\"#property-lastError\"><code>lastError</code></a>.</p>",
        "name": "openOptionsPage"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Reloads the app or extension. This method is not supported in kiosk mode. For\nkiosk mode, use chrome.runtime.restart() method.</p>",
        "name": "reload"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "RequestUpdateCheckStatus",
                "referenceLink": "#type-RequestUpdateCheckStatus",
                "optional": false,
                "name": "status",
                "comment": "<p>Result of the update check.</p>"
              },
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The version of the available update.</p>",
                    "name": "version"
                  }
                ],
                "optional": false,
                "name": "details",
                "comment": "<p>If an update is available, this contains more information about the available update.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Requests an immediate update check be done for this app/extension.</p>\n<p><b>Important</b>: Most extensions/apps should <b>not</b> use this method,\nsince chrome already does automatic checks every few hours, and you can\nlisten for the <a href=\"#event-onUpdateAvailable\"><code>onUpdateAvailable</code></a> event without needing to\ncall requestUpdateCheck.</p><p>This method is only appropriate to call in\nvery limited circumstances, such as if your extension/app talks to a backend\nservice, and the backend service has determined that the client extension/app\nversion is very far out of date and you'd like to prompt a user to update.\nMost other uses of requestUpdateCheck, such as calling it unconditionally\nbased on a repeating timer, probably only serve to waste client, network, and\nserver resources.</p>",
        "name": "requestUpdateCheck"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Restart the ChromeOS device when the app runs in kiosk mode. Otherwise, it's\nno-op.</p>",
        "name": "restart"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "seconds",
            "comment": "<p>Time to wait in seconds before rebooting the device, or -1 to cancel a scheduled reboot.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>A callback to be invoked when a restart request was successfully rescheduled.</p>"
          }
        ],
        "comment": "<p>Restart the ChromeOS device when the app runs in kiosk mode after the given\nseconds. If called again before the time ends, the reboot will be delayed. If\ncalled with a value of -1, the reboot will be cancelled. It's a no-op in\nnon-kiosk mode. It's only allowed to be called repeatedly by the first\nextension to invoke this API.</p>",
        "name": "restartAfterDelay"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "extensionId",
            "comment": "<p>The ID of the extension/app to send the message to. If omitted, the message will be sent to your own extension/app. Required if sending messages from a web page for <a href=\"manifest/externally_connectable.html\">web messaging</a>.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "any",
            "optional": false,
            "name": "message",
            "comment": "<p>The message to send. This message should be a JSON-ifiable object.</p>"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the TLS channel ID will be passed into onMessageExternal for\nprocesses that are listening for the connection event.</p>",
                "optional": true,
                "name": "includeTlsChannelId"
              }
            ],
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "any",
                "optional": false,
                "name": "response",
                "comment": "<p>The JSON response object sent by the handler of the message. If an error occurs while connecting to the extension, the callback will be called with no arguments and <a href=\"#property-lastError\"><code>lastError</code></a> will be set to the error message.</p>"
              }
            ],
            "optional": false,
            "name": "responseCallback"
          }
        ],
        "comment": "<p>Sends a single message to event listeners within your extension/app or a\ndifferent extension/app. Similar to <a href=\"#method-connect\"><code>connect</code></a> but only sends a\nsingle message, with an optional response. If sending to your extension, the\n<a href=\"#event-onMessage\"><code>onMessage</code></a> event will be fired in every frame of your\nextension (except for the sender's frame), or <a href=\"#event-onMessageExternal\"><code>onMessageExternal</code></a>, if a different extension. Note that extensions\ncannot send messages to content scripts using this method. To send messages\nto content scripts, use <a href=\"../tabs/#method-sendMessage\"><code>tabs.sendMessage</code></a>.</p>",
        "name": "sendMessage"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "application",
            "comment": "<p>The name of the native messaging host.</p>"
          },
          {
            "type": "object",
            "properties": [],
            "optional": false,
            "name": "message",
            "comment": "<p>The message that will be passed to the native messaging host.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "any",
                "optional": false,
                "name": "response",
                "comment": "<p>The response message sent by the native messaging host. If an error occurs while connecting to the native messaging host, the callback will be called with no arguments and <a href=\"#property-lastError\"><code>lastError</code></a> will be set to the error message.</p>"
              }
            ],
            "optional": false,
            "name": "responseCallback"
          }
        ],
        "comment": "<p>Send a single message to a native application.</p>",
        "name": "sendNativeMessage"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "url",
            "comment": "<p>URL to be opened after the extension is uninstalled. This URL must have an http: or https: scheme. Set an empty string to not open a new tab upon uninstallation.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the uninstall URL is set. If the given URL is invalid, <a href=\"#property-lastError\"><code>lastError</code></a> will be set.</p>"
          }
        ],
        "comment": "<p>Sets the URL to be visited upon uninstallation. This may be used to clean up\nserver-side data, do analytics, and implement surveys. Maximum 255\ncharacters.</p>",
        "name": "setUninstallURL"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "deprecated": "Please use <a href=\"#event-onRestartRequired\"><code>onRestartRequired</code></a>.\n",
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a Chrome update is available, but isn't installed immediately\nbecause a browser restart is required.</p>",
        "name": "onBrowserUpdateAvailable"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Port",
                "referenceLink": "#type-Port",
                "optional": false,
                "name": "port"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a connection is made from either an extension process or a\ncontent script (by <a href=\"#method-connect\"><code>connect</code></a>).</p>",
        "name": "onConnect"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Port",
                "referenceLink": "#type-Port",
                "optional": false,
                "name": "port"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a connection is made from another extension (by <a href=\"#method-connect\"><code>connect</code></a>).</p>",
        "name": "onConnectExternal"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Port",
                "referenceLink": "#type-Port",
                "optional": false,
                "name": "port"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a connection is made from a native application. Currently only\nsupported on Chrome OS.</p>",
        "name": "onConnectNative"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>Indicates the ID of the imported shared module extension which updated. This\nis present only if 'reason' is 'shared_module_update'.</p>",
                    "optional": true,
                    "name": "id"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>Indicates the previous version of the extension, which has just been updated.\nThis is present only if 'reason' is 'update'.</p>",
                    "optional": true,
                    "name": "previousVersion"
                  },
                  {
                    "type": "reference",
                    "referenceType": "OnInstalledReason",
                    "referenceLink": "#type-OnInstalledReason",
                    "comment": "<p>The reason that this event is being dispatched.</p>",
                    "name": "reason"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the extension is first installed, when the extension is\nupdated to a new version, and when Chrome is updated to a new version.</p>",
        "name": "onInstalled"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "any",
                "optional": false,
                "name": "message",
                "comment": "<p>The message sent by the calling script.</p>"
              },
              {
                "type": "reference",
                "referenceType": "MessageSender",
                "referenceLink": "#type-MessageSender",
                "optional": false,
                "name": "sender"
              },
              {
                "type": "function",
                "parameters": [],
                "optional": false,
                "name": "sendResponse"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a message is sent from either an extension process (by <a href=\"#method-sendMessage\"><code>sendMessage</code></a>) or a content script (by <a href=\"../tabs/#method-sendMessage\"><code>tabs.sendMessage</code></a>).</p>",
        "name": "onMessage"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "any",
                "optional": false,
                "name": "message",
                "comment": "<p>The message sent by the calling script.</p>"
              },
              {
                "type": "reference",
                "referenceType": "MessageSender",
                "referenceLink": "#type-MessageSender",
                "optional": false,
                "name": "sender"
              },
              {
                "type": "function",
                "parameters": [],
                "optional": false,
                "name": "sendResponse"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a message is sent from another extension/app (by <a href=\"#method-sendMessage\"><code>sendMessage</code></a>). Cannot be used in a content script.</p>",
        "name": "onMessageExternal"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "OnRestartRequiredReason",
                "referenceLink": "#type-OnRestartRequiredReason",
                "optional": false,
                "name": "reason",
                "comment": "<p>The reason that the event is being dispatched.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when an app or the device that it runs on needs to be restarted.\nThe app should close all its windows at its earliest convenient time to\nlet the restart to happen. If the app does nothing, a restart will be\nenforced after a 24-hour grace period has passed. Currently, this event\nis only fired for Chrome OS kiosk apps.</p>",
        "name": "onRestartRequired"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a profile that has this extension installed first starts up.\nThis event is not fired when an incognito profile is started, even if\nthis extension is operating in 'split' incognito mode.</p>",
        "name": "onStartup"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Sent to the event page just before it is unloaded. This gives the\nextension opportunity to do some clean up. Note that since the page is\nunloading, any asynchronous operations started while handling this event\nare not guaranteed to complete. If more activity for the event page\noccurs before it gets unloaded the onSuspendCanceled event will be sent\nand the page won't be unloaded.</p>",
        "name": "onSuspend"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Sent after onSuspend to indicate that the app won't be unloaded after\nall.</p>",
        "name": "onSuspendCanceled"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The version number of the available update.</p>",
                    "name": "version"
                  }
                ],
                "comment": "<p>The manifest details of the available update.</p>",
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when an update is available, but isn't installed immediately\nbecause the app is currently running. If you do nothing, the update will\nbe installed the next time the background page gets unloaded, if you want\nit to be installed sooner you can explicitly call\nchrome.runtime.reload(). If your extension is using a persistent\nbackground page, the background page of course never gets unloaded, so\nunless you call chrome.runtime.reload() manually in response to this\nevent the update will not get installed until the next time chrome itself\nrestarts. If no handlers are listening for this event, and your extension\nhas a persistent background page, it behaves as if\nchrome.runtime.reload() is called in response to this event.</p>",
        "name": "onUpdateAvailable"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.scripting",
    "shortName": "scripting",
    "comment": "<p>Use the <code>chrome.scripting</code> API to execute script in different\ncontexts.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A string containing the CSS to inject. Exactly one of <code>files</code> and\n<code>css</code> must be specified.</p>",
            "optional": true,
            "name": "css"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The path of the CSS files to inject, relative to the extension's root\ndirectory. NOTE: Currently a maximum of one file is supported. Exactly one of\n<code>files</code> and <code>css</code> must be specified.</p>",
            "optional": true,
            "name": "files"
          },
          {
            "type": "reference",
            "referenceType": "StyleOrigin",
            "referenceLink": "#type-StyleOrigin",
            "comment": "<p>The style origin for the injection. Defaults to <code>'AUTHOR'</code>.</p>",
            "optional": true,
            "name": "origin"
          },
          {
            "type": "reference",
            "referenceType": "InjectionTarget",
            "referenceLink": "#type-InjectionTarget",
            "comment": "<p>Details specifying the target into which to insert the CSS.</p>",
            "name": "target"
          }
        ],
        "name": "CSSInjection"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The frame associated with the injection.</p>",
            "name": "frameId"
          },
          {
            "type": "primitive",
            "primitiveType": "any",
            "comment": "<p>The result of the script execution.</p>",
            "optional": true,
            "name": "result"
          }
        ],
        "name": "InjectionResult"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the script should inject into all frames within the tab. Defaults to\nfalse. This must not be true if <code>frameIds</code> is specified.</p>",
            "optional": true,
            "name": "allFrames"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "number"
            },
            "comment": "<p>The <a\nhref=\"https://developer.chrome.com/extensions/webNavigation#frame_ids\">IDs</a> of specific frames to inject into.</p>",
            "optional": true,
            "name": "frameIds"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID of the tab into which to inject.</p>",
            "name": "tabId"
          }
        ],
        "name": "InjectionTarget"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The path of the JS files to inject, relative to the extension's root\ndirectory. NOTE: Currently a maximum of one file is supported. Exactly one of\n<code>files</code> and <code>function</code> must be specified.</p>",
            "optional": true,
            "name": "files"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>A JavaScript function to inject. This function will be serialized, and then\ndeserialized for injection. This means that any bound parameters and\nexecution context will be lost. Exactly one of <code>files</code> and\n<code>function</code> must be specified.</p>",
            "optional": true,
            "name": "function"
          },
          {
            "type": "reference",
            "referenceType": "InjectionTarget",
            "referenceLink": "#type-InjectionTarget",
            "comment": "<p>Details specifying the target into which to inject the script.</p>",
            "name": "target"
          }
        ],
        "name": "ScriptInjection"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"AUTHOR\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"USER\""
          }
        ],
        "comment": "<p>The origin for a style change. See <a\nhref=\"https://developer.mozilla.org/en-US/docs/Glossary/Style_origin\">style\norigins</a> for more info.</p>",
        "name": "StyleOrigin"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ScriptInjection",
            "referenceLink": "#type-ScriptInjection",
            "optional": false,
            "name": "injection",
            "comment": "<p>The details of the script which to inject.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "InjectionResult",
                  "referenceLink": "#type-InjectionResult"
                },
                "optional": false,
                "name": "results"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Invoked upon completion of the injection. The resulting array contains the result of execution for each frame where the injection succeeded.</p>"
          }
        ],
        "comment": "<p>Injects a script into a target context. The script will be run at\n<code>document_end</code>.</p>",
        "name": "executeScript"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "CSSInjection",
            "referenceLink": "#type-CSSInjection",
            "optional": false,
            "name": "injection",
            "comment": "<p>The details of the styles to insert.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Invoked upon completion of the insertion.</p>"
          }
        ],
        "comment": "<p>Inserts a CSS stylesheet into a target context. If multiple frames are\nspecified, unsuccessful injections are ignored.</p>",
        "name": "insertCSS"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "scripting\n"
    ]
  },
  {
    "name": "chrome.search",
    "shortName": "search",
    "comment": "<p>Use the <code>chrome.search</code> API to search via the default provider.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "Disposition",
            "referenceLink": "#type-Disposition",
            "comment": "<p>Location where search results should be displayed. <code>CURRENT_TAB</code>\nis the default.</p>",
            "optional": true,
            "name": "disposition"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Location where search results should be displayed. <code>tabId<code> cannot\nbe used with <code>disposition</code>.</p>",
            "optional": true,
            "name": "tabId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>String to query with the default search provider.</p>",
            "name": "text"
          }
        ],
        "name": "QueryInfo"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"CURRENT_TAB\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"NEW_TAB\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"NEW_WINDOW\""
          }
        ],
        "name": "Disposition"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "QueryInfo",
            "referenceLink": "#type-QueryInfo",
            "optional": false,
            "name": "queryInfo"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Used to query the default search provider. In case of an error, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set.</p>",
        "name": "query"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "search\n"
    ]
  },
  {
    "name": "chrome.serial",
    "shortName": "serial",
    "comment": "<p>Use the <code>chrome.serial</code> API to read from and write to a device\nconnected to a serial port.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>See <code>ConnectionOptions.bitrate</code>. This field may be omitted or\ninaccurate if a non-standard bitrate is in use, or if an error occurred while\nquerying the underlying device.</p>",
            "optional": true,
            "name": "bitrate"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>See <code>ConnectionOptions.bufferSize</code></p>",
            "name": "bufferSize"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The id of the serial port connection.</p>",
            "name": "connectionId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>See <code>ConnectionOptions.ctsFlowControl</code>. This field may be omitted\nif an error occurred while querying the underlying device.</p>",
            "optional": true,
            "name": "ctsFlowControl"
          },
          {
            "type": "reference",
            "referenceType": "DataBits",
            "referenceLink": "#type-DataBits",
            "comment": "<p>See <code>ConnectionOptions.dataBits</code>. This field may be omitted if an\nerror occurred while querying the underlying device.</p>",
            "optional": true,
            "name": "dataBits"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>See <code>ConnectionOptions.name</code></p>",
            "name": "name"
          },
          {
            "type": "reference",
            "referenceType": "ParityBit",
            "referenceLink": "#type-ParityBit",
            "comment": "<p>See <code>ConnectionOptions.parityBit</code>. This field may be omitted if an\nerror occurred while querying the underlying device.</p>",
            "optional": true,
            "name": "parityBit"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating whether the connection is blocked from firing onReceive\nevents.</p>",
            "name": "paused"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>See <code>ConnectionOptions.persistent</code></p>",
            "name": "persistent"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>See <code>ConnectionOptions.receiveTimeout</code></p>",
            "name": "receiveTimeout"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>See <code>ConnectionOptions.sendTimeout</code></p>",
            "name": "sendTimeout"
          },
          {
            "type": "reference",
            "referenceType": "StopBits",
            "referenceLink": "#type-StopBits",
            "comment": "<p>See <code>ConnectionOptions.stopBits</code>. This field may be omitted if an\nerror occurred while querying the underlying device.</p>",
            "optional": true,
            "name": "stopBits"
          }
        ],
        "name": "ConnectionInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The requested bitrate of the connection to be opened. For compatibility with\nthe widest range of hardware, this number should match one of\ncommonly-available bitrates, such as 110, 300, 1200, 2400, 4800, 9600, 14400,\n19200, 38400, 57600, 115200. There is no guarantee, of course, that the\ndevice connected to the serial port will support the requested bitrate, even\nif the port itself supports that bitrate. <code>9600</code> will be passed by\ndefault.</p>",
            "optional": true,
            "name": "bitrate"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The size of the buffer used to receive data. The default value is 4096.</p>",
            "optional": true,
            "name": "bufferSize"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating whether or not to enable RTS/CTS hardware flow control.\nDefaults to false.</p>",
            "optional": true,
            "name": "ctsFlowControl"
          },
          {
            "type": "reference",
            "referenceType": "DataBits",
            "referenceLink": "#type-DataBits",
            "comment": "<p><code>\"eight\"</code> will be passed by default.</p>",
            "optional": true,
            "name": "dataBits"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>An application-defined string to associate with the connection.</p>",
            "optional": true,
            "name": "name"
          },
          {
            "type": "reference",
            "referenceType": "ParityBit",
            "referenceLink": "#type-ParityBit",
            "comment": "<p><code>\"no\"</code> will be passed by default.</p>",
            "optional": true,
            "name": "parityBit"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating whether or not the connection should be left open when the\napplication is suspended (see <a\nhref=\"http://developer.chrome.com/apps/app_lifecycle.html\">Manage App\nLifecycle</a>). The default value is \"false.\" When the application is loaded,\nany serial connections previously opened with persistent=true can be fetched\nwith <code>getConnections</code>.</p>",
            "optional": true,
            "name": "persistent"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The maximum amount of time (in milliseconds) to wait for new data before\nraising an <code>onReceiveError</code> event with a \"timeout\" error. If zero,\nreceive timeout errors will not be raised for the connection. Defaults to 0.</p>",
            "optional": true,
            "name": "receiveTimeout"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The maximum amount of time (in milliseconds) to wait for a <code>send</code>\noperation to complete before calling the callback with a \"timeout\" error. If\nzero, send timeout errors will not be triggered. Defaults to 0.</p>",
            "optional": true,
            "name": "sendTimeout"
          },
          {
            "type": "reference",
            "referenceType": "StopBits",
            "referenceLink": "#type-StopBits",
            "comment": "<p><code>\"one\"</code> will be passed by default.</p>",
            "optional": true,
            "name": "stopBits"
          }
        ],
        "name": "ConnectionOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>CTS (Clear To Send).</p>",
            "name": "cts"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>DCD (Data Carrier Detect) or RLSD (Receive Line Signal/ Detect).</p>",
            "name": "dcd"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>DSR (Data Set Ready).</p>",
            "name": "dsr"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>RI (Ring Indicator).</p>",
            "name": "ri"
          }
        ],
        "name": "DeviceControlSignals"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A human-readable display name for the underlying device if one can be queried\nfrom the host driver.</p>",
            "optional": true,
            "name": "displayName"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The device's system path. This should be passed as the <code>path</code>\nargument to <code>chrome.serial.connect</code> in order to connect to this\ndevice.</p>",
            "name": "path"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>A USB product ID if one can be determined for the underlying device.</p>",
            "optional": true,
            "name": "productId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>A PCI or USB vendor ID if one can be determined for the underlying device.</p>",
            "optional": true,
            "name": "vendorId"
          }
        ],
        "name": "DeviceInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>DTR (Data Terminal Ready).</p>",
            "optional": true,
            "name": "dtr"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>RTS (Request To Send).</p>",
            "optional": true,
            "name": "rts"
          }
        ],
        "name": "HostControlSignals"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The connection identifier.</p>",
            "name": "connectionId"
          },
          {
            "type": "reference",
            "referenceType": "ReceiveError",
            "referenceLink": "#type-ReceiveError",
            "comment": "<p>An error code indicating what went wrong.</p>",
            "name": "error"
          }
        ],
        "name": "ReceiveErrorInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The connection identifier.</p>",
            "name": "connectionId"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>The data received.</p>",
            "name": "data"
          }
        ],
        "name": "ReceiveInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of bytes sent.</p>",
            "name": "bytesSent"
          },
          {
            "type": "reference",
            "referenceType": "SendError",
            "referenceLink": "#type-SendError",
            "comment": "<p>An error code if an error occurred.</p>",
            "optional": true,
            "name": "error"
          }
        ],
        "name": "SendInfo"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"seven\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"eight\""
          }
        ],
        "name": "DataBits"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"no\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"odd\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"even\""
          }
        ],
        "name": "ParityBit"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"disconnected\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"timeout\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"device_lost\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"break\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"frame_error\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"overrun\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"buffer_overflow\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"parity_error\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"system_error\""
          }
        ],
        "name": "ReceiveError"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"disconnected\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"pending\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"timeout\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"system_error\""
          }
        ],
        "name": "SendError"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"one\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"two\""
          }
        ],
        "name": "StopBits"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "connectionId",
            "comment": "<p>The id of the connection.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Restore character transmission on a given connection and place the\ntransmission line in a nonbreak state.</p>",
        "name": "clearBreak"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "path",
            "comment": "<p>The system path of the serial port to open.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ConnectionOptions",
            "referenceLink": "#type-ConnectionOptions",
            "optional": true,
            "name": "options",
            "comment": "<p>Port configuration options.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ConnectionInfo",
                "referenceLink": "#type-ConnectionInfo",
                "optional": false,
                "name": "connectionInfo"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the connection has been opened.</p>"
          }
        ],
        "comment": "<p>Connects to a given serial port.</p>",
        "name": "connect"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "connectionId",
            "comment": "<p>The id of the opened connection.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the connection has been closed.</p>"
          }
        ],
        "comment": "<p>Disconnects from a serial port.</p>",
        "name": "disconnect"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "connectionId"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Flushes all bytes in the given connection's input and output buffers.</p>",
        "name": "flush"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "ConnectionInfo",
                  "referenceLink": "#type-ConnectionInfo"
                },
                "optional": false,
                "name": "connectionInfos"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the list of connections when available.</p>"
          }
        ],
        "comment": "<p>Retrieves the list of currently opened serial port connections owned by the\napplication.</p>",
        "name": "getConnections"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "connectionId",
            "comment": "<p>The id of the connection.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "DeviceControlSignals",
                "referenceLink": "#type-DeviceControlSignals",
                "optional": false,
                "name": "signals"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the control signals are available.</p>"
          }
        ],
        "comment": "<p>Retrieves the state of control signals on a given connection.</p>",
        "name": "getControlSignals"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "DeviceInfo",
                  "referenceLink": "#type-DeviceInfo"
                },
                "optional": false,
                "name": "ports"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the list of <code>DeviceInfo</code> objects.</p>"
          }
        ],
        "comment": "<p>Returns information about available serial devices on the system. The list is\nregenerated each time this method is called.</p>",
        "name": "getDevices"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "connectionId",
            "comment": "<p>The id of the opened connection.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ConnectionInfo",
                "referenceLink": "#type-ConnectionInfo",
                "optional": false,
                "name": "connectionInfo"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with connection state information when available.</p>"
          }
        ],
        "comment": "<p>Retrieves the state of a given connection.</p>",
        "name": "getInfo"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "connectionId",
            "comment": "<p>The id of the connection.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "data",
            "comment": "<p>The data to send.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "SendInfo",
                "referenceLink": "#type-SendInfo",
                "optional": false,
                "name": "sendInfo"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the operation has completed.</p>"
          }
        ],
        "comment": "<p>Writes data to the given connection.</p>",
        "name": "send"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "connectionId",
            "comment": "<p>The id of the connection.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Suspends character transmission on a given connection and places the\ntransmission line in a break state until the clearBreak is called.</p>",
        "name": "setBreak"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "connectionId",
            "comment": "<p>The id of the connection.</p>"
          },
          {
            "type": "reference",
            "referenceType": "HostControlSignals",
            "referenceLink": "#type-HostControlSignals",
            "optional": false,
            "name": "signals",
            "comment": "<p>The set of signal changes to send to the device.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called once the control signals have been set.</p>"
          }
        ],
        "comment": "<p>Sets the state of control signals on a given connection.</p>",
        "name": "setControlSignals"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "connectionId",
            "comment": "<p>The id of the opened connection.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "paused",
            "comment": "<p>Flag to indicate whether to pause or unpause.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the connection has been successfully paused or              unpaused.</p>"
          }
        ],
        "comment": "<p>Pauses or unpauses an open connection.</p>",
        "name": "setPaused"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "connectionId",
            "comment": "<p>The id of the opened connection.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ConnectionOptions",
            "referenceLink": "#type-ConnectionOptions",
            "optional": false,
            "name": "options",
            "comment": "<p>Port configuration options.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the configuation has completed.</p>"
          }
        ],
        "comment": "<p>Update the option settings on an open serial port connection.</p>",
        "name": "update"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ReceiveInfo",
                "referenceLink": "#type-ReceiveInfo",
                "optional": false,
                "name": "info",
                "comment": "<p>Event data.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event raised when data has been read from the connection.</p>",
        "name": "onReceive"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ReceiveErrorInfo",
                "referenceLink": "#type-ReceiveErrorInfo",
                "optional": false,
                "name": "info"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event raised when an error occurred while the runtime was waiting for\ndata on the serial port. Once this event is raised, the connection may be\nset to <code>paused</code>. A <code>\"timeout\"</code> error does not pause\nthe connection.</p>",
        "name": "onReceiveError"
      }
    ],
    "channel": "stable",
    "source": "platform_app.d.ts",
    "permissions": [
      "serial\n"
    ]
  },
  {
    "name": "chrome.sessions",
    "shortName": "sessions",
    "comment": "<p>Use the <code>chrome.sessions</code> API to query and restore tabs and\nwindows from a browsing session.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The name of the foreign device.</p>",
            "name": "deviceName"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "Session",
              "referenceLink": "#type-Session"
            },
            "comment": "<p>A list of open window sessions for the foreign device, sorted from most\nrecently to least recently modified session.</p>",
            "name": "sessions"
          }
        ],
        "name": "Device"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The maximum number of entries to be fetched in the requested list. Omit this\nparameter to fetch the maximum number of entries (<a href=\"#property-MAX_SESSION_RESULTS\"><code>MAX_SESSION_RESULTS</code></a>).</p>",
            "optional": true,
            "name": "maxResults"
          }
        ],
        "name": "Filter"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The time when the window or tab was closed or modified, represented in\nmilliseconds since the epoch.</p>",
            "name": "lastModified"
          },
          {
            "type": "reference",
            "referenceType": "tabs.Tab",
            "referenceLink": "../tabs/#type-Tab",
            "comment": "<p>The <a href=\"../tabs/#type-Tab\"><code>tabs.Tab</code></a>, if this entry describes a tab. Either this or <a href=\"#type-Session-window\"><code>Session.window</code></a> will be set.</p>",
            "optional": true,
            "name": "tab"
          },
          {
            "type": "reference",
            "referenceType": "windows.Window",
            "referenceLink": "../windows/#type-Window",
            "comment": "<p>The <a href=\"../windows/#type-Window\"><code>windows.Window</code></a>, if this entry describes a window. Either this or\n<a href=\"#type-Session-tab\"><code>Session.tab</code></a> will be set.</p>",
            "optional": true,
            "name": "window"
          }
        ],
        "name": "Session"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "25",
        "comment": "<p>The maximum number of <a href=\"#type-Session\"><code>Session</code></a> that will be included in a\nrequested list.</p>",
        "name": "MAX_SESSION_RESULTS"
      }
    ],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Filter",
            "referenceLink": "#type-Filter",
            "optional": true,
            "name": "filter"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Device",
                  "referenceLink": "#type-Device"
                },
                "optional": false,
                "name": "devices",
                "comment": "<p>The list of <a href=\"#type-Device\"><code>Device</code></a> objects for each synced session, sorted in order from device with most recently modified session to device with least recently modified session. <a href=\"../tabs/#type-Tab\"><code>tabs.Tab</code></a> objects are sorted by recency in the <a href=\"../windows/#type-Window\"><code>windows.Window</code></a> of the <a href=\"#type-Session\"><code>Session</code></a> objects.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves all devices with synced sessions.</p>",
        "name": "getDevices"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Filter",
            "referenceLink": "#type-Filter",
            "optional": true,
            "name": "filter"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Session",
                  "referenceLink": "#type-Session"
                },
                "optional": false,
                "name": "sessions",
                "comment": "<p>The list of closed entries in reverse order that they were closed (the most recently closed tab or window will be at index <code>0</code>). The entries may contain either tabs or windows.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the list of recently closed tabs and/or windows.</p>",
        "name": "getRecentlyClosed"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "sessionId",
            "comment": "<p>The <a href=\"../windows/#type-Window-sessionId\"><code>windows.Window.sessionId</code></a>, or <a href=\"../tabs/#type-Tab-sessionId\"><code>tabs.Tab.sessionId</code></a> to restore. If this parameter is not specified, the most recently closed session is restored.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Session",
                "referenceLink": "#type-Session",
                "optional": false,
                "name": "restoredSession",
                "comment": "<p>A <a href=\"#type-Session\"><code>Session</code></a> containing the restored <a href=\"../windows/#type-Window\"><code>windows.Window</code></a> or <a href=\"../tabs/#type-Tab\"><code>tabs.Tab</code></a> object.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Reopens a <a href=\"../windows/#type-Window\"><code>windows.Window</code></a> or <a href=\"../tabs/#type-Tab\"><code>tabs.Tab</code></a>, with an optional\ncallback to run when the entry has been restored.</p>",
        "name": "restore"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when recently closed tabs and/or windows are changed. This event\ndoes not monitor synced sessions changes.</p>",
        "name": "onChanged"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "sessions\n"
    ]
  },
  {
    "name": "chrome.sharedModule",
    "shortName": "sharedModule",
    "comment": "<p>Stub namespace for the \"import\" and \"export\" manifest keys.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Optional list of extension IDs explicitly allowed to import this Shared\nModule's resources.  If no allowlist is given, all extensions are allowed to\nimport it.</p>",
            "optional": true,
            "name": "allowlist"
          }
        ],
        "name": "Export"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Extension ID of the shared module this extension or app depends on.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Minimum supported version of the shared module.</p>",
            "optional": true,
            "name": "minimum_version"
          }
        ],
        "name": "Import"
      }
    ],
    "properties": [],
    "methods": [],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.signedInDevices",
    "shortName": "signedInDevices",
    "comment": "<p>Use the <code>chrome.signedInDevices</code> API to get a list of devices\nsigned into chrome with the same account as the current profile.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Version of chrome running in this device.</p>",
            "name": "chromeVersion"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Unique Id for this device. Note: The id is meaningful only in the current\ndevice. This id cannot be used to refer to the same device from another\ndevice or extension.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Name of the device. This name is usually set by the user when setting up a\ndevice.</p>",
            "name": "name"
          },
          {
            "type": "reference",
            "referenceType": "OS",
            "referenceLink": "#type-OS",
            "comment": "<p>The OS of the device.</p>",
            "name": "os"
          },
          {
            "type": "reference",
            "referenceType": "DeviceType",
            "referenceLink": "#type-DeviceType",
            "comment": "<p>Device Type.</p>",
            "name": "type"
          }
        ],
        "name": "DeviceInfo"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"desktop_or_laptop\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"phone\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"tablet\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"unknown\""
          }
        ],
        "name": "DeviceType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"win\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"mac\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"linux\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"chrome_os\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"android\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ios\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"unknown\""
          }
        ],
        "name": "OS"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": true,
            "name": "isLocal",
            "comment": "<p>If true only return the information for the local device. If false or omitted return the list of all devices including the local device.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "DeviceInfo",
                  "referenceLink": "#type-DeviceInfo"
                },
                "optional": false,
                "name": "devices"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>The callback to be invoked with the array of DeviceInfo objects.</p>"
          }
        ],
        "comment": "<p>Gets the array of signed in devices, signed into the same account as the\ncurrent profile.</p>",
        "name": "get"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "DeviceInfo",
                  "referenceLink": "#type-DeviceInfo"
                },
                "optional": false,
                "name": "devices",
                "comment": "<p>The array of all signed in devices.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the DeviceInfo object of any of the signed in devices changes,\nor when a device is added or removed.</p>",
        "name": "onDeviceInfoChange"
      }
    ],
    "channel": "dev",
    "source": "index.d.ts",
    "permissions": [
      "signedInDevices\n"
    ]
  },
  {
    "name": "chrome.socket",
    "shortName": "socket",
    "comment": "<p>Use the <code>chrome.socket</code> API to send and receive data over the\nnetwork using TCP and UDP connections. <b>Note:</b> Starting with Chrome 33,\nthis API is deprecated in favor of the <a href=\"../sockets_udp/\"><code>sockets.udp</code></a>, <a href=\"../sockets_tcp/\"><code>sockets.tcp</code></a> and\n<a href=\"../sockets_tcpServer/\"><code>sockets.tcpServer</code></a> APIs.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "name": "resultCode"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The id of the accepted socket.</p>",
            "optional": true,
            "name": "socketId"
          }
        ],
        "name": "AcceptInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The id of the newly created socket.</p>",
            "name": "socketId"
          }
        ],
        "name": "CreateInfo"
      },
      {
        "type": "type",
        "properties": [],
        "name": "CreateOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The available IPv4/6 address.</p>",
            "name": "address"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The underlying name of the adapter. On *nix, this will typically be \"eth0\",\n\"lo\", etc.</p>",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The prefix length</p>",
            "name": "prefixLength"
          }
        ],
        "name": "NetworkInterface"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "name": "data"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The resultCode returned from the underlying read() call.</p>",
            "name": "resultCode"
          }
        ],
        "name": "ReadInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The address of the remote machine.</p>",
            "name": "address"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "name": "data"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "name": "port"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The resultCode returned from the underlying recvfrom() call.</p>",
            "name": "resultCode"
          }
        ],
        "name": "RecvFromInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "TLSVersionConstraints",
            "referenceLink": "#type-TLSVersionConstraints",
            "optional": true,
            "name": "tlsVersion"
          }
        ],
        "name": "SecureOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether or not the underlying socket is connected.</p><p>For\n<code>tcp</code> sockets, this will remain true even if the remote peer has\ndisconnected. Reading or writing to the socket may then result in an error,\nhinting that this socket should be disconnected via\n<code>disconnect()</code>.</p><p>For <code>udp</code> sockets, this just\nrepresents whether a default remote address has been specified for reading\nand writing packets.</p>",
            "name": "connected"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>If the underlying socket is bound or connected, contains its local IPv4/6\naddress.</p>",
            "optional": true,
            "name": "localAddress"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>If the underlying socket is bound or connected, contains its local port.</p>",
            "optional": true,
            "name": "localPort"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>If the underlying socket is connected, contains the IPv4/6 address of the\npeer.</p>",
            "optional": true,
            "name": "peerAddress"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>If the underlying socket is connected, contains the port of the connected\npeer.</p>",
            "optional": true,
            "name": "peerPort"
          },
          {
            "type": "reference",
            "referenceType": "SocketType",
            "referenceLink": "#type-SocketType",
            "comment": "<p>The type of the passed socket. This will be <code>tcp</code> or\n<code>udp</code>.</p>",
            "name": "socketType"
          }
        ],
        "name": "SocketInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "max"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The minimum and maximum acceptable versions of TLS. These will be\n<code>tls1</code>, <code>tls1.1</code>, <code>tls1.2</code>, or\n<code>tls1.3</code>.</p>",
            "optional": true,
            "name": "min"
          }
        ],
        "name": "TLSVersionConstraints"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of bytes sent, or a negative error code.</p>",
            "name": "bytesWritten"
          }
        ],
        "name": "WriteInfo"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"tcp\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"udp\""
          }
        ],
        "name": "SocketType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socketId.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "AcceptInfo",
                "referenceLink": "#type-AcceptInfo",
                "optional": false,
                "name": "acceptInfo"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>The callback is invoked when a new socket is accepted.</p>"
          }
        ],
        "comment": "<p>This method applies to TCP sockets only. Registers a callback function to be\ncalled when a connection is accepted on this listening server socket. Listen\nmust be called first. If there is already an active accept callback, this\ncallback will be invoked immediately with an error as the resultCode.</p>",
        "name": "accept"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socketId.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "address",
            "comment": "<p>The address of the local machine.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "port",
            "comment": "<p>The port of the local machine.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the bind attempt is complete.</p>"
          }
        ],
        "comment": "<p>Binds the local address for socket. Currently, it does not support TCP\nsocket.</p>",
        "name": "bind"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socketId.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "hostname",
            "comment": "<p>The hostname or IP address of the remote machine.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "port",
            "comment": "<p>The port of the remote machine.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the connection attempt is complete.</p>"
          }
        ],
        "comment": "<p>Connects the socket to the remote machine (for a <code>tcp</code> socket).\nFor a <code>udp</code> socket, this sets the default address which packets\nare sent to and read from for <code>read()</code> and <code>write()</code>\ncalls.</p>",
        "name": "connect"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "SocketType",
            "referenceLink": "#type-SocketType",
            "optional": false,
            "name": "type",
            "comment": "<p>The type of socket to create. Must be <code>tcp</code> or <code>udp</code>.</p>"
          },
          {
            "type": "reference",
            "referenceType": "CreateOptions",
            "referenceLink": "#type-CreateOptions",
            "optional": true,
            "name": "options",
            "comment": "<p>The socket options.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "CreateInfo",
                "referenceLink": "#type-CreateInfo",
                "optional": false,
                "name": "createInfo"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the socket has been created.</p>"
          }
        ],
        "comment": "<p>Creates a socket of the specified type that will connect to the specified\nremote machine.</p>",
        "name": "create"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socketId.</p>"
          }
        ],
        "comment": "<p>Destroys the socket. Each socket created should be destroyed after use.</p>",
        "name": "destroy"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socketId.</p>"
          }
        ],
        "comment": "<p>Disconnects the socket. For UDP sockets, <code>disconnect</code> is a\nnon-operation but is safe to call.</p>",
        "name": "disconnect"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socketId.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "SocketInfo",
                "referenceLink": "#type-SocketInfo",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the state is available.</p>"
          }
        ],
        "comment": "<p>Retrieves the state of the given socket.</p>",
        "name": "getInfo"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socketId.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                },
                "optional": false,
                "name": "groups"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with an array of strings of the result.</p>"
          }
        ],
        "comment": "<p>Get the multicast group addresses the socket is currently joined to.</p>",
        "name": "getJoinedGroups"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "NetworkInterface",
                  "referenceLink": "#type-NetworkInterface"
                },
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when local adapter information is available.</p>"
          }
        ],
        "comment": "<p>Retrieves information about local adapters on this system.</p>",
        "name": "getNetworkList"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socketId.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "address",
            "comment": "<p>The group address to join. Domain names are not supported.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the join group operation is done with an integer parameter indicating the platform-independent error code.</p>"
          }
        ],
        "comment": "<p>Join the multicast group and start to receive packets from that group. The\nsocket must be of UDP type and must be bound to a local port before calling\nthis method.</p>",
        "name": "joinGroup"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socketId.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "address",
            "comment": "<p>The group address to leave. Domain names are not supported.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the leave group operation is done with an integer parameter indicating the platform-independent error code.</p>"
          }
        ],
        "comment": "<p>Leave the multicast group previously joined using <code>joinGroup</code>.\nIt's not necessary to leave the multicast group before destroying the socket\nor exiting. This is automatically called by the OS.</p><p>Leaving the group\nwill prevent the router from sending multicast datagrams to the local host,\npresuming no other process on the host is still joined to the group.</p>",
        "name": "leaveGroup"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socketId.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "address",
            "comment": "<p>The address of the local machine.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "port",
            "comment": "<p>The port of the local machine.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "backlog",
            "comment": "<p>Length of the socket's listen queue.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when listen operation completes.</p>"
          }
        ],
        "comment": "<p>This method applies to TCP sockets only. Listens for connections on the\nspecified port and address. This effectively makes this a server socket, and\nclient socket functions (connect, read, write) can no longer be used on this\nsocket.</p>",
        "name": "listen"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socketId.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "bufferSize",
            "comment": "<p>The read buffer size.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ReadInfo",
                "referenceLink": "#type-ReadInfo",
                "optional": false,
                "name": "readInfo"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Delivers data that was available to be read without blocking.</p>"
          }
        ],
        "comment": "<p>Reads data from the given connected socket.</p>",
        "name": "read"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socketId.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "bufferSize",
            "comment": "<p>The receive buffer size.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "RecvFromInfo",
                "referenceLink": "#type-RecvFromInfo",
                "optional": false,
                "name": "recvFromInfo"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Returns result of the recvFrom operation.</p>"
          }
        ],
        "comment": "<p>Receives data from the given UDP socket.</p>",
        "name": "recvFrom"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The connected socket to use.</p>"
          },
          {
            "type": "reference",
            "referenceType": "SecureOptions",
            "referenceLink": "#type-SecureOptions",
            "optional": true,
            "name": "options",
            "comment": "<p>Constraints and parameters for the TLS connection.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the TLS connection attempt is complete.</p>"
          }
        ],
        "comment": "<p>Start a TLS client connection over a connected TCP client socket.</p>",
        "name": "secure"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socketId.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "data",
            "comment": "<p>The data to write.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "address",
            "comment": "<p>The address of the remote machine.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "port",
            "comment": "<p>The port of the remote machine.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "WriteInfo",
                "referenceLink": "#type-WriteInfo",
                "optional": false,
                "name": "writeInfo"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the send operation completes without blocking or an error occurs.</p>"
          }
        ],
        "comment": "<p>Sends data on the given UDP socket to the given address and port.</p>",
        "name": "sendTo"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socketId.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "enable",
            "comment": "<p>If true, enable keep-alive functionality.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "delay",
            "comment": "<p>Set the delay seconds between the last data packet received and the first keepalive probe. Default is 0.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the setKeepAlive attempt is complete.</p>"
          }
        ],
        "comment": "<p>Enables or disables the keep-alive functionality for a TCP connection.</p>",
        "name": "setKeepAlive"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socketId.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "enabled",
            "comment": "<p>Indicate whether to enable loopback mode.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the configuration operation is done.</p>"
          }
        ],
        "comment": "<p>Set whether multicast packets sent from the host to the multicast group\nwill be looped back to the host.</p><p>Note: the behavior of\n<code>setMulticastLoopbackMode</code> is slightly different between Windows\nand Unix-like systems. The inconsistency happens only when there is more than\none application on the same host joined to the same multicast group while\nhaving different settings on multicast loopback mode. On Windows, the\napplications with loopback off will not RECEIVE the loopback packets; while\non Unix-like systems, the applications with loopback off will not SEND the\nloopback packets to other applications on the same host. See MSDN:\nhttp://goo.gl/6vqbj</p><p>Calling this method does not require multicast\npermissions.</p>",
        "name": "setMulticastLoopbackMode"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socketId.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "ttl",
            "comment": "<p>The time-to-live value.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the configuration operation is done.</p>"
          }
        ],
        "comment": "<p>Set the time-to-live of multicast packets sent to the multicast\ngroup.</p><p>Calling this method does not require multicast permissions.</p>",
        "name": "setMulticastTimeToLive"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socketId.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "noDelay",
            "comment": "<p>If true, disables Nagle's algorithm.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the setNoDelay attempt is complete.</p>"
          }
        ],
        "comment": "<p>Sets or clears <code>TCP_NODELAY</code> for a TCP connection. Nagle's\nalgorithm will be disabled when <code>TCP_NODELAY</code> is set.</p>",
        "name": "setNoDelay"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socketId.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "data",
            "comment": "<p>The data to write.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "WriteInfo",
                "referenceLink": "#type-WriteInfo",
                "optional": false,
                "name": "writeInfo"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the write operation completes without blocking or an error occurs.</p>"
          }
        ],
        "comment": "<p>Writes data on the given connected socket.</p>",
        "name": "write"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "socket\n"
    ]
  },
  {
    "name": "chrome.sockets.tcp",
    "shortName": "sockets.tcp",
    "comment": "<p>Use the <code>chrome.sockets.tcp</code> API to send and receive data over\nthe\nnetwork using TCP connections. This API supersedes the TCP\nfunctionality\npreviously found in the <code>chrome.socket</code> API.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID of the newly created socket. Note that socket IDs created from this\nAPI are not compatible with socket IDs created from other APIs, such as the\ndeprecated <code><a href=\"../socket/\"><code>socket</code></a></code> API.</p>",
            "name": "socketId"
          }
        ],
        "name": "CreateInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The result code returned from the underlying network call.</p>",
            "name": "resultCode"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The socket identifier.</p>",
            "name": "socketId"
          }
        ],
        "name": "ReceiveErrorInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>The data received, with a maxium size of <code>bufferSize</code>.</p>",
            "name": "data"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The socket identifier.</p>",
            "name": "socketId"
          }
        ],
        "name": "ReceiveInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "TLSVersionConstraints",
            "referenceLink": "#type-TLSVersionConstraints",
            "optional": true,
            "name": "tlsVersion"
          }
        ],
        "name": "SecureOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of bytes sent (if result == 0)</p>",
            "optional": true,
            "name": "bytesSent"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The result code returned from the underlying network call. A negative value\nindicates an error.</p>",
            "name": "resultCode"
          }
        ],
        "name": "SendInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The size of the buffer used to receive data. If no buffer size has been\nspecified explictly, the value is not provided.</p>",
            "optional": true,
            "name": "bufferSize"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating whether the socket is connected to a remote peer.</p>",
            "name": "connected"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>If the underlying socket is connected, contains its local IPv4/6 address.</p>",
            "optional": true,
            "name": "localAddress"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>If the underlying socket is connected, contains its local port.</p>",
            "optional": true,
            "name": "localPort"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Application-defined string associated with the socket.</p>",
            "optional": true,
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating whether a connected socket blocks its peer from sending more\ndata (see <code>setPaused</code>).</p>",
            "name": "paused"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>If the underlying socket is connected, contains the peer/ IPv4/6 address.</p>",
            "optional": true,
            "name": "peerAddress"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>If the underlying socket is connected, contains the peer port.</p>",
            "optional": true,
            "name": "peerPort"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating whether the socket is left open when the application is\nsuspended (see <code>SocketProperties.persistent</code>).</p>",
            "name": "persistent"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The socket identifier.</p>",
            "name": "socketId"
          }
        ],
        "name": "SocketInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The size of the buffer used to receive data. The default value is 4096.</p>",
            "optional": true,
            "name": "bufferSize"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>An application-defined string associated with the socket.</p>",
            "optional": true,
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating if the socket is left open when the event page of the\napplication is unloaded (see <a\nhref=\"http://developer.chrome.com/apps/app_lifecycle.html\">Manage App\nLifecycle</a>). The default value is \"false.\" When the application is loaded,\nany sockets previously opened with persistent=true can be fetched with\n<code>getSockets</code>.</p>",
            "optional": true,
            "name": "persistent"
          }
        ],
        "name": "SocketProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": true,
            "name": "max"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The minimum and maximum acceptable versions of TLS. These will be\n<code>tls1</code>, <code>tls1.1</code>, <code>tls1.2</code>, or\n<code>tls1.3</code>.</p>",
            "optional": true,
            "name": "min"
          }
        ],
        "name": "TLSVersionConstraints"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the <code>close</code> operation completes.</p>"
          }
        ],
        "comment": "<p>Closes the socket and releases the address/port the socket is bound to. Each\nsocket created should be closed after use. The socket id is no no longer\nvalid as soon at the function is called. However, the socket is guaranteed to\nbe closed only when the callback is invoked.</p>",
        "name": "close"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "peerAddress",
            "comment": "<p>The address of the remote machine. DNS name, IPv4 and  IPv6 formats are supported.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "peerPort",
            "comment": "<p>The port of the remote machine.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result",
                "comment": "<p>The result code returned from the underlying network call. A negative value indicates an error.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the connect attempt is complete.</p>"
          }
        ],
        "comment": "<p>Connects the socket to a remote machine. When the <code>connect</code>\noperation completes successfully, <code>onReceive</code> events are raised\nwhen data is received from the peer. If a network error occurs while the\nruntime is receiving packets, a <code>onReceiveError</code> event is raised,\nat which point no more <code>onReceive</code> event will be raised for this\nsocket until the <code>resume</code> method is called.</p>",
        "name": "connect"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "SocketProperties",
            "referenceLink": "#type-SocketProperties",
            "optional": true,
            "name": "properties",
            "comment": "<p>The socket properties (optional).</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "CreateInfo",
                "referenceLink": "#type-CreateInfo",
                "optional": false,
                "name": "createInfo",
                "comment": "<p>The result of the socket creation.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the socket has been created.</p>"
          }
        ],
        "comment": "<p>Creates a TCP socket.</p>",
        "name": "create"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the disconnect attempt is complete.</p>"
          }
        ],
        "comment": "<p>Disconnects the socket.</p>",
        "name": "disconnect"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "SocketInfo",
                "referenceLink": "#type-SocketInfo",
                "optional": false,
                "name": "socketInfo",
                "comment": "<p>Object containing the socket information.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the socket state is available.</p>"
          }
        ],
        "comment": "<p>Retrieves the state of the given socket.</p>",
        "name": "getInfo"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "SocketInfo",
                  "referenceLink": "#type-SocketInfo"
                },
                "optional": false,
                "name": "socketInfos",
                "comment": "<p>Array of object containing socket information.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the list of sockets is available.</p>"
          }
        ],
        "comment": "<p>Retrieves the list of currently opened sockets owned by the application.</p>",
        "name": "getSockets"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The existing, connected socket to use.</p>"
          },
          {
            "type": "reference",
            "referenceType": "SecureOptions",
            "referenceLink": "#type-SecureOptions",
            "optional": true,
            "name": "options",
            "comment": "<p>Constraints and parameters for the TLS connection.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the connection attempt is complete.</p>"
          }
        ],
        "comment": "<p>Start a TLS client connection over the connected TCP client socket.</p>",
        "name": "secure"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "data",
            "comment": "<p>The data to send.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "SendInfo",
                "referenceLink": "#type-SendInfo",
                "optional": false,
                "name": "sendInfo",
                "comment": "<p>Result of the <code>send</code> method.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the <code>send</code> operation completes.</p>"
          }
        ],
        "comment": "<p>Sends data on the given TCP socket.</p>",
        "name": "send"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "enable",
            "comment": "<p>If true, enable keep-alive functionality.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "delay",
            "comment": "<p>Set the delay seconds between the last data packet received and the first keepalive probe. Default is 0.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result",
                "comment": "<p>The result code returned from the underlying network call. A negative value indicates an error.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the setKeepAlive attempt is complete.</p>"
          }
        ],
        "comment": "<p>Enables or disables the keep-alive functionality for a TCP connection.</p>",
        "name": "setKeepAlive"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "noDelay",
            "comment": "<p>If true, disables Nagle's algorithm.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result",
                "comment": "<p>The result code returned from the underlying network call. A negative value indicates an error.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the setNoDelay attempt is complete.</p>"
          }
        ],
        "comment": "<p>Sets or clears <code>TCP_NODELAY</code> for a TCP connection. Nagle's\nalgorithm will be disabled when <code>TCP_NODELAY</code> is set.</p>",
        "name": "setNoDelay"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "paused"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback from the <code>setPaused</code> method.</p>"
          }
        ],
        "comment": "<p>Enables or disables the application from receiving messages from its peer.\nThe default value is \"false\". Pausing a socket is typically used by an\napplication to throttle data sent by its peer. When a socket is paused, no\n<code>onReceive</code> event is raised. When a socket is connected and\nun-paused, <code>onReceive</code> events are raised again when messages are\nreceived.</p>",
        "name": "setPaused"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "reference",
            "referenceType": "SocketProperties",
            "referenceLink": "#type-SocketProperties",
            "optional": false,
            "name": "properties",
            "comment": "<p>The properties to update.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the properties are updated.</p>"
          }
        ],
        "comment": "<p>Updates the socket properties.</p>",
        "name": "update"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ReceiveInfo",
                "referenceLink": "#type-ReceiveInfo",
                "optional": false,
                "name": "info",
                "comment": "<p>The event data.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event raised when data has been received for a given socket.</p>",
        "name": "onReceive"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ReceiveErrorInfo",
                "referenceLink": "#type-ReceiveErrorInfo",
                "optional": false,
                "name": "info",
                "comment": "<p>The event data.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event raised when a network error occured while the runtime was waiting\nfor data on the socket address and port. Once this event is raised, the\nsocket is set to <code>paused</code> and no more <code>onReceive</code>\nevents are raised for this socket.</p>",
        "name": "onReceiveError"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.sockets.tcpServer",
    "shortName": "sockets.tcpServer",
    "comment": "<p>Use the <code>chrome.sockets.tcpServer</code> API to create server\napplications using TCP connections. This API supersedes the TCP\nfunctionality\npreviously found in the <code>chrome.socket</code> API.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The result code returned from the underlying network call.</p>",
            "name": "resultCode"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The server socket identifier.</p>",
            "name": "socketId"
          }
        ],
        "name": "AcceptErrorInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The client socket identifier, i.e. the socket identifier of the newly\nestablished connection. This socket identifier should be used only with\nfunctions from the <code>chrome.sockets.tcp</code> namespace. Note the client\nsocket is initially paused and must be explictly un-paused by the application\nto start receiving data.</p>",
            "name": "clientSocketId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The server socket identifier.</p>",
            "name": "socketId"
          }
        ],
        "name": "AcceptInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID of the newly created server socket. Note that socket IDs created from\nthis API are not compatible with socket IDs created from other APIs, such as\nthe deprecated <code><a href=\"../socket/\"><code>socket</code></a></code> API.</p>",
            "name": "socketId"
          }
        ],
        "name": "CreateInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>If the socket is listening, contains its local IPv4/6 address.</p>",
            "optional": true,
            "name": "localAddress"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>If the socket is listening, contains its local port.</p>",
            "optional": true,
            "name": "localPort"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Application-defined string associated with the socket.</p>",
            "optional": true,
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating whether connection requests on a listening socket are\ndispatched through the <code>onAccept</code> event or queued up in the listen\nqueue backlog. See <code>setPaused</code>. The default value is \"false\".</p>",
            "name": "paused"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating if the socket remains open when the event page of the\napplication is unloaded (see <code>SocketProperties.persistent</code>). The\ndefault value is \"false\".</p>",
            "name": "persistent"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The socket identifier.</p>",
            "name": "socketId"
          }
        ],
        "name": "SocketInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>An application-defined string associated with the socket.</p>",
            "optional": true,
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating if the socket remains open when the event page of the\napplication is unloaded (see <a\nhref=\"http://developer.chrome.com/apps/app_lifecycle.html\">Manage App\nLifecycle</a>). The default value is \"false.\" When the application is loaded,\nany sockets previously opened with persistent=true can be fetched with\n<code>getSockets</code>.</p>",
            "optional": true,
            "name": "persistent"
          }
        ],
        "name": "SocketProperties"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the <code>close</code> operation completes.</p>"
          }
        ],
        "comment": "<p>Disconnects and destroys the socket. Each socket created should be closed\nafter use. The socket id is no longer valid as soon at the function is\ncalled. However, the socket is guaranteed to be closed only when the callback\nis invoked.</p>",
        "name": "close"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "SocketProperties",
            "referenceLink": "#type-SocketProperties",
            "optional": true,
            "name": "properties",
            "comment": "<p>The socket properties (optional).</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "CreateInfo",
                "referenceLink": "#type-CreateInfo",
                "optional": false,
                "name": "createInfo",
                "comment": "<p>The result of the socket creation.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the socket has been created.</p>"
          }
        ],
        "comment": "<p>Creates a TCP server socket.</p>",
        "name": "create"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the disconnect attempt is complete.</p>"
          }
        ],
        "comment": "<p>Disconnects the listening socket, i.e. stops accepting new connections and\nreleases the address/port the socket is bound to. The socket identifier\nremains valid, e.g. it can be used with <code>listen</code> to accept\nconnections on a new port and address.</p>",
        "name": "disconnect"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "SocketInfo",
                "referenceLink": "#type-SocketInfo",
                "optional": false,
                "name": "socketInfo",
                "comment": "<p>Object containing the socket information.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the socket state is available.</p>"
          }
        ],
        "comment": "<p>Retrieves the state of the given socket.</p>",
        "name": "getInfo"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "SocketInfo",
                  "referenceLink": "#type-SocketInfo"
                },
                "optional": false,
                "name": "socketInfos",
                "comment": "<p>Array of object containing socket information.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the list of sockets is available.</p>"
          }
        ],
        "comment": "<p>Retrieves the list of currently opened sockets owned by the application.</p>",
        "name": "getSockets"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "address",
            "comment": "<p>The address of the local machine.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "port",
            "comment": "<p>The port of the local machine. When set to <code>0</code>, a free port is chosen dynamically. The dynamically allocated port can be found by calling <code>getInfo</code>.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "backlog",
            "comment": "<p>Length of the socket's listen queue. The default value depends on the Operating System (SOMAXCONN), which ensures a reasonable queue length for most applications.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result",
                "comment": "<p>The result code returned from the underlying network call. A negative value indicates an error.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when listen operation completes.</p>"
          }
        ],
        "comment": "<p>Listens for connections on the specified port and address. If the\nport/address is in use, the callback indicates a failure.</p>",
        "name": "listen"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "paused"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback from the <code>setPaused</code> method.</p>"
          }
        ],
        "comment": "<p>Enables or disables a listening socket from accepting new connections. When\npaused, a listening socket accepts new connections until its backlog (see\n<code>listen</code> function) is full then refuses additional connection\nrequests. <code>onAccept</code> events are raised only when the socket is\nun-paused.</p>",
        "name": "setPaused"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket identifier.</p>"
          },
          {
            "type": "reference",
            "referenceType": "SocketProperties",
            "referenceLink": "#type-SocketProperties",
            "optional": false,
            "name": "properties",
            "comment": "<p>The properties to update.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the properties are updated.</p>"
          }
        ],
        "comment": "<p>Updates the socket properties.</p>",
        "name": "update"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "AcceptInfo",
                "referenceLink": "#type-AcceptInfo",
                "optional": false,
                "name": "info",
                "comment": "<p>The event data.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event raised when a connection has been made to the server socket.</p>",
        "name": "onAccept"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "AcceptErrorInfo",
                "referenceLink": "#type-AcceptErrorInfo",
                "optional": false,
                "name": "info",
                "comment": "<p>The event data.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event raised when a network error occured while the runtime was waiting\nfor new connections on the socket address and port. Once this event is\nraised, the socket is set to <code>paused</code> and no more\n<code>onAccept</code> events are raised for this socket until the socket\nis resumed.</p>",
        "name": "onAcceptError"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.sockets.udp",
    "shortName": "sockets.udp",
    "comment": "<p>Use the <code>chrome.sockets.udp</code> API to send and receive data over\nthe\nnetwork using UDP connections. This API supersedes the UDP\nfunctionality\npreviously found in the \"socket\" API.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID of the newly created socket. Note that socket IDs created from this\nAPI are not compatible with socket IDs created from other APIs, such as the\ndeprecated <code><a href=\"../socket/\"><code>socket</code></a></code> API.</p>",
            "name": "socketId"
          }
        ],
        "name": "CreateInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The result code returned from the underlying recvfrom() call.</p>",
            "name": "resultCode"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The socket ID.</p>",
            "name": "socketId"
          }
        ],
        "name": "ReceiveErrorInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>The UDP packet content (truncated to the current buffer size).</p>",
            "name": "data"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The address of the host the packet comes from.</p>",
            "name": "remoteAddress"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The port of the host the packet comes from.</p>",
            "name": "remotePort"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The socket ID.</p>",
            "name": "socketId"
          }
        ],
        "name": "ReceiveInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of bytes sent (if result == 0)</p>",
            "optional": true,
            "name": "bytesSent"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The result code returned from the underlying network call. A negative value\nindicates an error.</p>",
            "name": "resultCode"
          }
        ],
        "name": "SendInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The size of the buffer used to receive data. If no buffer size has been\nspecified explictly, the value is not provided.</p>",
            "optional": true,
            "name": "bufferSize"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>If the underlying socket is bound, contains its local IPv4/6 address.</p>",
            "optional": true,
            "name": "localAddress"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>If the underlying socket is bound, contains its local port.</p>",
            "optional": true,
            "name": "localPort"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Application-defined string associated with the socket.</p>",
            "optional": true,
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating whether the socket is blocked from firing onReceive events.</p>",
            "name": "paused"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating whether the socket is left open when the application is\nsuspended (see <code>SocketProperties.persistent</code>).</p>",
            "name": "persistent"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The socket identifier.</p>",
            "name": "socketId"
          }
        ],
        "name": "SocketInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The size of the buffer used to receive data. If the buffer is too small to\nreceive the UDP packet, data is lost. The default value is 4096.</p>",
            "optional": true,
            "name": "bufferSize"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>An application-defined string associated with the socket.</p>",
            "optional": true,
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag indicating if the socket is left open when the event page of the\napplication is unloaded (see <a\nhref=\"http://developer.chrome.com/apps/app_lifecycle.html\">Manage App\nLifecycle</a>). The default value is \"false.\" When the application is loaded,\nany sockets previously opened with persistent=true can be fetched with\n<code>getSockets</code>.</p>",
            "optional": true,
            "name": "persistent"
          }
        ],
        "name": "SocketProperties"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket ID.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "address",
            "comment": "<p>The address of the local machine. DNS name, IPv4 and IPv6 formats are supported. Use \"0.0.0.0\" to accept packets from all local available network interfaces.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "port",
            "comment": "<p>The port of the local machine. Use \"0\" to bind to a free port.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result",
                "comment": "<p>The result code returned from the underlying network call. A negative value indicates an error.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the <code>bind</code> operation completes.</p>"
          }
        ],
        "comment": "<p>Binds the local address and port for the socket. For a client socket, it\nis recommended to use port 0 to let the platform pick a free port.</p><p>Once\nthe <code>bind</code> operation completes successfully,\n<code>onReceive</code> events are raised when UDP packets arrive on the\naddress/port specified -- unless the socket is paused.</p>",
        "name": "bind"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket ID.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the <code>close</code> operation completes.</p>"
          }
        ],
        "comment": "<p>Closes the socket and releases the address/port the socket is bound to. Each\nsocket created should be closed after use. The socket id is no longer valid\nas soon at the function is called. However, the socket is guaranteed to be\nclosed only when the callback is invoked.</p>",
        "name": "close"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "SocketProperties",
            "referenceLink": "#type-SocketProperties",
            "optional": true,
            "name": "properties",
            "comment": "<p>The socket properties (optional).</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "CreateInfo",
                "referenceLink": "#type-CreateInfo",
                "optional": false,
                "name": "createInfo",
                "comment": "<p>The result of the socket creation.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the socket has been created.</p>"
          }
        ],
        "comment": "<p>Creates a UDP socket with the given properties.</p>",
        "name": "create"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket ID.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "SocketInfo",
                "referenceLink": "#type-SocketInfo",
                "optional": false,
                "name": "socketInfo",
                "comment": "<p>Object containing the socket information.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the socket state is available.</p>"
          }
        ],
        "comment": "<p>Retrieves the state of the given socket.</p>",
        "name": "getInfo"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket ID.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "string"
                },
                "optional": false,
                "name": "groups",
                "comment": "<p>Array of groups the socket joined.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with an array of strings of the result.</p>"
          }
        ],
        "comment": "<p>Gets the multicast group addresses the socket is currently joined to.</p>",
        "name": "getJoinedGroups"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "SocketInfo",
                  "referenceLink": "#type-SocketInfo"
                },
                "optional": false,
                "name": "socketInfos",
                "comment": "<p>Array of object containing socket information.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the list of sockets is available.</p>"
          }
        ],
        "comment": "<p>Retrieves the list of currently opened sockets owned by the application.</p>",
        "name": "getSockets"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket ID.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "address",
            "comment": "<p>The group address to join. Domain names are not supported.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result",
                "comment": "<p>The result code returned from the underlying network call. A negative value indicates an error.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the <code>joinGroup</code> operation completes.</p>"
          }
        ],
        "comment": "<p>Joins the multicast group and starts to receive packets from that group. The\nsocket must be bound to a local port before calling this method.</p>",
        "name": "joinGroup"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket ID.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "address",
            "comment": "<p>The group address to leave. Domain names are not supported.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result",
                "comment": "<p>The result code returned from the underlying network call. A negative value indicates an error.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the <code>leaveGroup</code> operation completes.</p>"
          }
        ],
        "comment": "<p>Leaves the multicast group previously joined using <code>joinGroup</code>.\nThis is only necessary to call if you plan to keep using the\nsocketafterwards, since it will be done automatically by the OS when the\nsocket is closed.</p><p>Leaving the group will prevent the router from\nsending multicast datagrams to the local host, presuming no other process on\nthe host is still joined to the group.</p>",
        "name": "leaveGroup"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket ID.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "data",
            "comment": "<p>The data to send.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "address",
            "comment": "<p>The address of the remote machine.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "port",
            "comment": "<p>The port of the remote machine.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "SendInfo",
                "referenceLink": "#type-SendInfo",
                "optional": false,
                "name": "sendInfo",
                "comment": "<p>Result of the <code>send</code> method.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the <code>send</code> operation completes.</p>"
          }
        ],
        "comment": "<p>Sends data on the given socket to the given address and port. The socket must\nbe bound to a local port before calling this method.</p>",
        "name": "send"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket ID.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "enabled",
            "comment": "<p><code>true</code> to enable broadcast packets, <code>false</code> to disable them.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result",
                "comment": "<p>The result code returned from the underlying network call.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback from the <code>setBroadcast</code> method.</p>"
          }
        ],
        "comment": "<p>Enables or disables broadcast packets on this socket.</p>",
        "name": "setBroadcast"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket ID.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "enabled",
            "comment": "<p>Indicate whether to enable loopback mode.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result",
                "comment": "<p>The result code returned from the underlying network call. A negative value indicates an error.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the configuration operation completes.</p>"
          }
        ],
        "comment": "<p>Sets whether multicast packets sent from the host to the multicast group\nwill be looped back to the host.</p><p>Note: the behavior of\n<code>setMulticastLoopbackMode</code> is slightly different between Windows\nand Unix-like systems. The inconsistency happens only when there is more than\none application on the same host joined to the same multicast group while\nhaving different settings on multicast loopback mode. On Windows, the\napplications with loopback off will not RECEIVE the loopback packets; while\non Unix-like systems, the applications with loopback off will not SEND the\nloopback packets to other applications on the same host. See MSDN:\nhttp://goo.gl/6vqbj</p><p>Calling this method does not require multicast\npermissions.</p>",
        "name": "setMulticastLoopbackMode"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket ID.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "ttl",
            "comment": "<p>The time-to-live value.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "result",
                "comment": "<p>The result code returned from the underlying network call. A negative value indicates an error.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the configuration operation completes.</p>"
          }
        ],
        "comment": "<p>Sets the time-to-live of multicast packets sent to the multicast\ngroup.</p><p>Calling this method does not require multicast permissions.</p>",
        "name": "setMulticastTimeToLive"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "paused",
            "comment": "<p>Flag to indicate whether to pause or unpause.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the socket has been successfully paused or unpaused.</p>"
          }
        ],
        "comment": "<p>Pauses or unpauses a socket. A paused socket is blocked from firing\n<code>onReceive</code> events.</p>",
        "name": "setPaused"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "socketId",
            "comment": "<p>The socket ID.</p>"
          },
          {
            "type": "reference",
            "referenceType": "SocketProperties",
            "referenceLink": "#type-SocketProperties",
            "optional": false,
            "name": "properties",
            "comment": "<p>The properties to update.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the properties are updated.</p>"
          }
        ],
        "comment": "<p>Updates the socket properties.</p>",
        "name": "update"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ReceiveInfo",
                "referenceLink": "#type-ReceiveInfo",
                "optional": false,
                "name": "info",
                "comment": "<p>The event data.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event raised when a UDP packet has been received for the given socket.</p>",
        "name": "onReceive"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ReceiveErrorInfo",
                "referenceLink": "#type-ReceiveErrorInfo",
                "optional": false,
                "name": "info",
                "comment": "<p>The event data.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event raised when a network error occured while the runtime was waiting\nfor data on the socket address and port. Once this event is raised, the\nsocket is paused and no more <code>onReceive</code> events will be raised\nfor this socket until the socket is resumed.</p>",
        "name": "onReceiveError"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.storage",
    "shortName": "storage",
    "comment": "<p>Use the <code>chrome.storage</code> API to store, retrieve, and track changes\nto user data.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "events.Event",
            "referenceLink": "../events/#type-Event",
            "referenceTemplates": [
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "object",
                    "properties": [],
                    "comment": "<p>Object mapping each key that changed to its corresponding <a href=\"#type-StorageChange\"><code>StorageChange</code></a> for that item.</p>",
                    "optional": false,
                    "name": "changes"
                  }
                ],
                "name": "listener"
              }
            ],
            "comment": "<p>Fired when one or more items change.</p>",
            "name": "onChanged"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "function",
                "parameters": [],
                "optional": false,
                "name": "callback",
                "comment": "<p>Callback on success, or on failure (in which case <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set).</p>"
              }
            ],
            "comment": "<p>Removes all items from storage.</p>",
            "name": "clear"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "union",
                "isEnum": false,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "string"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "primitive",
                      "primitiveType": "string"
                    }
                  },
                  {
                    "type": "object",
                    "properties": []
                  }
                ],
                "optional": true,
                "name": "keys",
                "comment": "<p>A single key to get, list of keys to get, or a dictionary specifying default values (see description of the object).  An empty list or object will return an empty result object.  Pass in <code>null</code> to get the entire contents of storage.</p>"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "object",
                    "properties": [],
                    "optional": false,
                    "name": "items",
                    "comment": "<p>Object with items in their key-value mappings.</p>"
                  }
                ],
                "optional": false,
                "name": "callback",
                "comment": "<p>Callback with storage items, or on failure (in which case <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set).</p>"
              }
            ],
            "comment": "<p>Gets one or more items from storage.</p>",
            "name": "get"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "union",
                "isEnum": false,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "string"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "primitive",
                      "primitiveType": "string"
                    }
                  }
                ],
                "optional": true,
                "name": "keys",
                "comment": "<p>A single key or list of keys to get the total usage for. An empty list will return 0. Pass in <code>null</code> to get the total usage of all of storage.</p>"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "optional": false,
                    "name": "bytesInUse",
                    "comment": "<p>Amount of space being used in storage, in bytes.</p>"
                  }
                ],
                "optional": false,
                "name": "callback",
                "comment": "<p>Callback with the amount of space being used by storage, or on failure (in which case <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set).</p>"
              }
            ],
            "comment": "<p>Gets the amount of space (in bytes) being used by one or more items.</p>",
            "name": "getBytesInUse"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "union",
                "isEnum": false,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "string"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "primitive",
                      "primitiveType": "string"
                    }
                  }
                ],
                "optional": false,
                "name": "keys",
                "comment": "<p>A single key or a list of keys for items to remove.</p>"
              },
              {
                "type": "function",
                "parameters": [],
                "optional": false,
                "name": "callback",
                "comment": "<p>Callback on success, or on failure (in which case <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set).</p>"
              }
            ],
            "comment": "<p>Removes one or more items from storage.</p>",
            "name": "remove"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [],
                "optional": false,
                "name": "items",
                "comment": "<p>An object which gives each key/value pair to update storage with. Any other key/value pairs in storage will not be affected.</p><p>Primitive values such as numbers will serialize as expected. Values with a <code>typeof</code> <code>\"object\"</code> and <code>\"function\"</code> will typically serialize to <code>{}</code>, with the exception of <code>Array</code> (serializes as expected), <code>Date</code>, and <code>Regex</code> (serialize using their <code>String</code> representation).</p>"
              },
              {
                "type": "function",
                "parameters": [],
                "optional": false,
                "name": "callback",
                "comment": "<p>Callback on success, or on failure (in which case <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be set).</p>"
              }
            ],
            "comment": "<p>Sets multiple items.</p>",
            "name": "set"
          }
        ],
        "name": "StorageArea"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "any",
            "comment": "<p>The new value of the item, if there is a new value.</p>",
            "optional": true,
            "name": "newValue"
          },
          {
            "type": "primitive",
            "primitiveType": "any",
            "comment": "<p>The old value of the item, if there was an old value.</p>",
            "optional": true,
            "name": "oldValue"
          }
        ],
        "name": "StorageChange"
      }
    ],
    "properties": [
      {
        "type": "reference",
        "referenceType": "StorageArea",
        "referenceLink": "#type-StorageArea",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "literalValue": "5242880",
            "comment": "<p>The maximum amount (in bytes) of data that can be stored in local storage, as\nmeasured by the JSON stringification of every value plus every key's length.\nThis value will be ignored if the extension has the\n<code>unlimitedStorage</code> permission. Updates that would cause this limit\nto be exceeded fail immediately and set <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a>.</p>",
            "name": "QUOTA_BYTES"
          }
        ],
        "comment": "<p>Items in the <code>local</code> storage area are local to each machine.</p>",
        "name": "local"
      },
      {
        "type": "reference",
        "referenceType": "StorageArea",
        "referenceLink": "#type-StorageArea",
        "comment": "<p>Items in the <code>managed</code> storage area are set by the domain\nadministrator, and are read-only for the extension; trying to modify this\nnamespace results in an error.</p>",
        "name": "managed"
      },
      {
        "type": "reference",
        "referenceType": "StorageArea",
        "referenceLink": "#type-StorageArea",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "literalValue": "512",
            "comment": "<p>The maximum number of items that can be stored in sync storage. Updates that\nwould cause this limit to be exceeded will fail immediately and set <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a>.</p>",
            "name": "MAX_ITEMS"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "literalValue": "1000000",
            "deprecated": "The storage.sync API no longer has a sustained write operation quota.\n",
            "name": "MAX_SUSTAINED_WRITE_OPERATIONS_PER_MINUTE"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "literalValue": "1800",
            "comment": "<p>The maximum number of <code>set</code>, <code>remove</code>, or\n<code>clear</code> operations that can be performed each hour. This is 1\nevery 2 seconds, a lower ceiling than the short term higher writes-per-minute\nlimit.</p><p>Updates that would cause this limit to be exceeded fail\nimmediately and set <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a>.</p>",
            "name": "MAX_WRITE_OPERATIONS_PER_HOUR"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "literalValue": "120",
            "comment": "<p>The maximum number of <code>set</code>, <code>remove</code>, or\n<code>clear</code> operations that can be performed each minute. This is 2\nper second, providing higher throughput than writes-per-hour over a shorter\nperiod of time.</p><p>Updates that would cause this limit to be exceeded fail\nimmediately and set <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a>.</p>",
            "name": "MAX_WRITE_OPERATIONS_PER_MINUTE"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "literalValue": "102400",
            "comment": "<p>The maximum total amount (in bytes) of data that can be stored in sync\nstorage, as measured by the JSON stringification of every value plus every\nkey's length. Updates that would cause this limit to be exceeded fail\nimmediately and set <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a>.</p>",
            "name": "QUOTA_BYTES"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "literalValue": "8192",
            "comment": "<p>The maximum size (in bytes) of each individual item in sync storage, as\nmeasured by the JSON stringification of its value plus its key length.\nUpdates containing items larger than this limit will fail immediately and set\n<a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a>.</p>",
            "name": "QUOTA_BYTES_PER_ITEM"
          }
        ],
        "comment": "<p>Items in the <code>sync</code> storage area are synced using Chrome Sync.</p>",
        "name": "sync"
      }
    ],
    "methods": [],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [],
                "comment": "<p>Object mapping each key that changed to its corresponding <a href=\"#type-StorageChange\"><code>StorageChange</code></a> for that item.</p>",
                "optional": false,
                "name": "changes"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "areaName",
                "comment": "<p>The name of the storage area (<code>\"sync\"</code>, <code>\"local\"</code> or <code>\"managed\"</code>) the changes are for.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when one or more items change.</p>",
        "name": "onChanged"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "storage\n"
    ]
  },
  {
    "name": "chrome.syncFileSystem",
    "shortName": "syncFileSystem",
    "comment": "<p>Use the <code>chrome.syncFileSystem</code> API to save and synchronize data\non Google Drive. This API is NOT for accessing arbitrary user docs stored in\nGoogle Drive. It provides app-specific syncable storage for offline and\ncaching usage so that the same data can be available across different\nclients. Read <a href=\"app_storage.html\">Manage Data</a> for more on using\nthis API.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "SyncAction",
            "referenceLink": "#type-SyncAction",
            "comment": "<p>Sync action taken to fire <a href=\"#event-onFileStatusChanged\"><code>onFileStatusChanged</code></a> event. The action value\ncan be <code>'added'</code>, <code>'updated'</code> or\n<code>'deleted'</code>. Only applies if status is <code>'synced'</code>.</p>",
            "optional": true,
            "name": "action"
          },
          {
            "type": "reference",
            "referenceType": "SyncDirection",
            "referenceLink": "#type-SyncDirection",
            "comment": "<p>Sync direction for the <a href=\"#event-onFileStatusChanged\"><code>onFileStatusChanged</code></a> event. Sync direction\nvalue can be <code>'local_to_remote'</code> or\n<code>'remote_to_local'</code>. Only applies if status is\n<code>'synced'</code>.</p>",
            "optional": true,
            "name": "direction"
          },
          {
            "type": "reference",
            "referenceType": "Entry",
            "comment": "<p><code>fileEntry</code> for the target file whose status has changed. Contains\nname and path information of synchronized file. On file deletion,\n<code>fileEntry</code> information will still be available but file will no\nlonger exist.</p>",
            "name": "fileEntry"
          },
          {
            "type": "reference",
            "referenceType": "FileStatus",
            "referenceLink": "#type-FileStatus",
            "comment": "<p>Resulting file status after <a href=\"#event-onFileStatusChanged\"><code>onFileStatusChanged</code></a> event. The status\nvalue can be <code>'synced'</code>, <code>'pending'</code> or\n<code>'conflicting'</code>.</p>",
            "name": "status"
          }
        ],
        "name": "FileInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Optional error that is only returned if there was a problem retrieving the\nFileStatus for the given file.</p>",
            "optional": true,
            "name": "error"
          },
          {
            "type": "reference",
            "referenceType": "Entry",
            "comment": "<p>One of the Entry's originally given to getFileStatuses.</p>",
            "name": "fileEntry"
          },
          {
            "type": "reference",
            "referenceType": "FileStatus",
            "referenceLink": "#type-FileStatus",
            "comment": "<p>The status value can be <code>'synced'</code>, <code>'pending'</code> or\n<code>'conflicting'</code>.</p>",
            "name": "status"
          }
        ],
        "name": "FileStatusInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "name": "description"
          },
          {
            "type": "reference",
            "referenceType": "ServiceStatus",
            "referenceLink": "#type-ServiceStatus",
            "name": "state"
          }
        ],
        "name": "ServiceInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "name": "quotaBytes"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "name": "usageBytes"
          }
        ],
        "name": "StorageInfo"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"last_write_win\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"manual\""
          }
        ],
        "name": "ConflictResolutionPolicy"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"synced\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"pending\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"conflicting\""
          }
        ],
        "name": "FileStatus"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"initializing\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"running\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"authentication_required\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"temporary_unavailable\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"disabled\""
          }
        ],
        "name": "ServiceStatus"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"added\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"updated\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"deleted\""
          }
        ],
        "name": "SyncAction"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"local_to_remote\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"remote_to_local\""
          }
        ],
        "name": "SyncDirection"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ConflictResolutionPolicy",
                "referenceLink": "#type-ConflictResolutionPolicy",
                "optional": false,
                "name": "policy"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>A callback type for getConflictResolutionPolicy.</p>"
          }
        ],
        "comment": "<p>Gets the current conflict resolution policy.</p>",
        "name": "getConflictResolutionPolicy"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Entry",
            "optional": false,
            "name": "fileEntry"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "FileStatus",
                "referenceLink": "#type-FileStatus",
                "optional": false,
                "name": "status"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>A callback type for getFileStatus.</p>"
          }
        ],
        "comment": "<p>Returns the <a href=\"#type-FileStatus\"><code>FileStatus</code></a> for the given <code>fileEntry</code>. The\nstatus value can be <code>'synced'</code>, <code>'pending'</code> or\n<code>'conflicting'</code>. Note that <code>'conflicting'</code> state only\nhappens when the service's conflict resolution policy is set to\n<code>'manual'</code>.</p>",
        "name": "getFileStatus"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "array",
            "elementType": {
              "type": "object",
              "properties": []
            },
            "optional": false,
            "name": "fileEntries"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "FileStatusInfo",
                  "referenceLink": "#type-FileStatusInfo"
                },
                "optional": false,
                "name": "status"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>A callback type for getFileStatuses.</p>"
          }
        ],
        "comment": "<p>Returns each <a href=\"#type-FileStatus\"><code>FileStatus</code></a> for the given <code>fileEntry</code> array.\nTypically called with the result from dirReader.readEntries().</p>",
        "name": "getFileStatuses"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ServiceStatus",
                "referenceLink": "#type-ServiceStatus",
                "optional": false,
                "name": "status"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>A callback type for getServiceStatus.</p>"
          }
        ],
        "comment": "<p>Returns the current sync backend status.</p>",
        "name": "getServiceStatus"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "DOMFileSystem",
            "optional": false,
            "name": "fileSystem"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "StorageInfo",
                "referenceLink": "#type-StorageInfo",
                "optional": false,
                "name": "info"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>A callback type for getUsageAndQuota.</p>"
          }
        ],
        "comment": "<p>Returns the current usage and quota in bytes for the <code>'syncable'</code>\nfile storage for the app.</p>",
        "name": "getUsageAndQuota"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "DOMFileSystem",
                "optional": false,
                "name": "fileSystem"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>A callback type for requestFileSystem.</p>"
          }
        ],
        "comment": "<p>Returns a syncable filesystem backed by Google Drive. The returned\n<code>DOMFileSystem</code> instance can be operated on in the same way as the\nTemporary and Persistant file systems (see <a\nhref=\"http://dev.w3.org/2009/dap/file-system/file-dir-sys.html\">\nhttp://dev.w3.org/2009/dap/file-system/file-dir-sys.html</a>).</p><p>Calling\nthis multiple times from the same app will return the same handle to the same\nfile system.</p><p>Note this call can fail. For example, if the user is not\nsigned in to Chrome or if there is no network operation. To handle these\nerrors it is important chrome.runtime.lastError is checked in the\ncallback.</p>",
        "name": "requestFileSystem"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ConflictResolutionPolicy",
            "referenceLink": "#type-ConflictResolutionPolicy",
            "optional": false,
            "name": "policy"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>A generic result callback to indicate success or failure.</p>"
          }
        ],
        "comment": "<p>Sets the default conflict resolution policy for the <code>'syncable'</code>\nfile storage for the app. By default it is set to\n<code>'last_write_win'</code>. When conflict resolution policy is set to\n<code>'last_write_win'</code> conflicts for existing files are automatically\nresolved next time the file is updated. |callback| can be optionally given to\nknow if the request has succeeded or not.</p>",
        "name": "setConflictResolutionPolicy"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "FileInfo",
                "referenceLink": "#type-FileInfo",
                "optional": false,
                "name": "detail"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a file has been updated by the background sync service.</p>",
        "name": "onFileStatusChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ServiceInfo",
                "referenceLink": "#type-ServiceInfo",
                "optional": false,
                "name": "detail"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when an error or other status change has happened in the sync\nbackend (for example, when the sync is temporarily disabled due to\nnetwork or authentication error).</p>",
        "name": "onServiceStatusChanged"
      }
    ],
    "channel": "stable",
    "source": "platform_app.d.ts",
    "permissions": [
      "syncFileSystem\n"
    ]
  },
  {
    "name": "chrome.system.cpu",
    "shortName": "system.cpu",
    "comment": "<p>Use the <code>system.cpu</code> API to query CPU metadata.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The architecture name of the processors.</p>",
            "name": "archName"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>A set of feature codes indicating some of the processor's capabilities. The\ncurrently supported codes are \"mmx\", \"sse\", \"sse2\", \"sse3\", \"ssse3\",\n\"sse4_1\", \"sse4_2\", and \"avx\".</p>",
            "name": "features"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The model name of the processors.</p>",
            "name": "modelName"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of logical processors.</p>",
            "name": "numOfProcessors"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ProcessorInfo",
              "referenceLink": "#type-ProcessorInfo"
            },
            "comment": "<p>Information about each logical processor.</p>",
            "name": "processors"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "number"
            },
            "comment": "<p>List of CPU temperature readings from each thermal zone of the CPU.\nTemperatures are in degrees Celsius.</p><p><b>Currently supported on Chrome\nOS only.</b></p>",
            "name": "temperatures"
          }
        ],
        "name": "CpuInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The cumulative time spent idle by this processor.</p>",
            "name": "idle"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The cumulative time used by kernel programs on this processor.</p>",
            "name": "kernel"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The total cumulative time for this processor.  This value is equal to user +\nkernel + idle.</p>",
            "name": "total"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The cumulative time used by userspace programs on this processor.</p>",
            "name": "user"
          }
        ],
        "name": "CpuTime"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "CpuTime",
            "referenceLink": "#type-CpuTime",
            "comment": "<p>Cumulative usage info for this logical processor.</p>",
            "name": "usage"
          }
        ],
        "name": "ProcessorInfo"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "CpuInfo",
                "referenceLink": "#type-CpuInfo",
                "optional": false,
                "name": "info"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Queries basic CPU information of the system.</p>",
        "name": "getInfo"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "system.cpu\n"
    ]
  },
  {
    "name": "chrome.system.display",
    "shortName": "system.display",
    "comment": "<p>Use the <code>system.display</code> API to query display metadata.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The height of the display in pixels.</p>",
            "name": "height"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The x-coordinate of the upper-left corner.</p>",
            "name": "left"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The y-coordinate of the upper-left corner.</p>",
            "name": "top"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The width of the display in pixels.</p>",
            "name": "width"
          }
        ],
        "name": "Bounds"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The unique identifier of the display.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The offset of the display along the connected edge. 0 indicates that the\ntopmost or leftmost corners are aligned.</p>",
            "name": "offset"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The unique identifier of the parent display. Empty if this is the root.</p>",
            "name": "parentId"
          },
          {
            "type": "reference",
            "referenceType": "LayoutPosition",
            "referenceLink": "#type-LayoutPosition",
            "comment": "<p>The layout position of this display relative to the parent. This will be\nignored for the root.</p>",
            "name": "position"
          }
        ],
        "name": "DisplayLayout"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The display mode device scale factor.</p>",
            "name": "deviceScaleFactor"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The display mode height in device independent (user visible) pixels.</p>",
            "name": "height"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The display mode height in native pixels.</p>",
            "name": "heightInNativePixels"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if this mode is interlaced, false if not provided.</p>",
            "optional": true,
            "name": "isInterlaced"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if the mode is the display's native mode.</p>",
            "name": "isNative"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if the display mode is currently selected.</p>",
            "name": "isSelected"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The display mode refresh rate in hertz.</p>",
            "name": "refreshRate"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The display mode UI scale factor.</p>",
            "deprecated": "Use <code>displayZoomFactor</code>\n",
            "optional": true,
            "name": "uiScale"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The display mode width in device independent (user visible) pixels.</p>",
            "name": "width"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The display mode width in native pixels.</p>",
            "name": "widthInNativePixels"
          }
        ],
        "name": "DisplayMode"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>If set, updates the display's logical bounds origin along the x-axis. Applied\ntogether with <a href=\"#type-DisplayProperties-boundsOriginY\"><code>DisplayProperties.boundsOriginY</code></a>. Defaults to the current value if not set\nand <a href=\"#type-DisplayProperties-boundsOriginY\"><code>DisplayProperties.boundsOriginY</code></a> is set. Note that when updating the display origin,\nsome constraints will be applied, so the final bounds origin may be different\nthan the one set. The final bounds can be retrieved using <a href=\"#method-getInfo\"><code>getInfo</code></a>.\nThe bounds origin cannot be changed on the primary display.</p>",
            "optional": true,
            "name": "boundsOriginX"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>If set, updates the display's logical bounds origin along the y-axis. See\ndocumentation for <a href=\"#type-DisplayProperties-boundsOriginX\"><code>DisplayProperties.boundsOriginX</code></a> parameter.</p>",
            "optional": true,
            "name": "boundsOriginY"
          },
          {
            "type": "reference",
            "referenceType": "DisplayMode",
            "referenceLink": "#type-DisplayMode",
            "comment": "<p>If set, updates the display mode to the mode matching this value. If other\nparameters are invalid, this will not be applied. If the display mode is\ninvalid, it will not be applied and an error will be set, but other\nproperties will still be applied.</p>",
            "optional": true,
            "name": "displayMode"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>If set, updates the zoom associated with the display. This zoom performs\nre-layout and repaint thus resulting in a better quality zoom than just\nperforming a pixel by pixel stretch enlargement.</p>",
            "optional": true,
            "name": "displayZoomFactor"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If set to true, makes the display primary. No-op if set to false. Note: If\nset, the display is considered primary for all other properties (i.e. <a href=\"#type-DisplayProperties-isUnified\"><code>DisplayProperties.isUnified</code></a> may be set and bounds origin may not).</p>",
            "optional": true,
            "name": "isPrimary"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Chrome OS only. If set to true, changes the display mode to unified desktop\n(see <a href=\"#method-enableUnifiedDesktop\"><code>enableUnifiedDesktop</code></a> for details). If set to false, unified\ndesktop mode will be disabled. This is only valid for the primary display. If\nprovided, mirroringSourceId must not be provided and other properties will be\nignored. This is has no effect if not provided.</p>",
            "optional": true,
            "name": "isUnified"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Chrome OS only. If set and not empty, enables mirroring for this display\nonly. Otherwise disables mirroring for all displays. This value should\nindicate the id of the source display to mirror, which must not be the same\nas the id passed to setDisplayProperties. If set, no other property may be\nset.</p>",
            "deprecated": "Use <a href=\"#method-setMirrorMode\"><code>setMirrorMode</code></a>.\n",
            "optional": true,
            "name": "mirroringSourceId"
          },
          {
            "type": "reference",
            "referenceType": "Insets",
            "referenceLink": "#type-Insets",
            "comment": "<p>If set, sets the display's overscan insets to the provided values. Note that\noverscan values may not be negative or larger than a half of the screen's\nsize. Overscan cannot be changed on the internal monitor.</p>",
            "optional": true,
            "name": "overscan"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>If set, updates the display's rotation. Legal values are [0, 90, 180, 270].\nThe rotation is set clockwise, relative to the display's vertical position.</p>",
            "optional": true,
            "name": "rotation"
          }
        ],
        "name": "DisplayProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "number"
            },
            "comment": "<p>A list of zoom factor values that can be set for the display.</p>",
            "name": "availableDisplayZoomFactors"
          },
          {
            "type": "reference",
            "referenceType": "Bounds",
            "referenceLink": "#type-Bounds",
            "comment": "<p>The display's logical bounds.</p>",
            "name": "bounds"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ratio between the display's current and default zoom. For example, value\n1 is equivalent to 100% zoom, and value 1.5 is equivalent to 150% zoom.</p>",
            "name": "displayZoomFactor"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of pixels per inch along the x-axis.</p>",
            "name": "dpiX"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of pixels per inch along the y-axis.</p>",
            "name": "dpiY"
          },
          {
            "type": "reference",
            "referenceType": "Edid",
            "referenceLink": "#type-Edid",
            "comment": "<p>NOTE: This is only available to Chrome OS Kiosk apps and Web UI.</p>",
            "optional": true,
            "name": "edid"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if this display has a touch input device associated with it.</p>",
            "name": "hasTouchSupport"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The unique identifier of the display.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if this display is enabled.</p>",
            "name": "isEnabled"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if this is an internal display.</p>",
            "name": "isInternal"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True if this is the primary display.</p>",
            "name": "isPrimary"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>True for all displays when in unified desktop mode. See documentation for\n<a href=\"#method-enableUnifiedDesktop\"><code>enableUnifiedDesktop</code></a>.</p>",
            "name": "isUnified"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Chrome OS only. Identifiers of the displays to which the source display is\nbeing mirrored. Empty if no displays are being mirrored. This will be set to\nthe same value for all displays. This must not include |mirroringSourceId|.</p>",
            "name": "mirroringDestinationIds"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Chrome OS only. Identifier of the display that is being mirrored if mirroring\nis enabled, otherwise empty. This will be set for all displays (including the\ndisplay being mirrored).</p>",
            "name": "mirroringSourceId"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "DisplayMode",
              "referenceLink": "#type-DisplayMode"
            },
            "comment": "<p>The list of available display modes. The current mode will have\nisSelected=true. Only available on Chrome OS. Will be set to an empty array\non other platforms.</p>",
            "name": "modes"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The user-friendly name (e.g. \"HP LCD monitor\").</p>",
            "name": "name"
          },
          {
            "type": "reference",
            "referenceType": "Insets",
            "referenceLink": "#type-Insets",
            "comment": "<p>The display's insets within its screen's bounds. Currently exposed only on\nChromeOS. Will be set to empty insets on other platforms.</p>",
            "name": "overscan"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The display's clockwise rotation in degrees relative to the vertical\nposition. Currently exposed only on ChromeOS. Will be set to 0 on other\nplatforms. A value of -1 will be interpreted as auto-rotate when the device\nis in a physical tablet state.</p>",
            "name": "rotation"
          },
          {
            "type": "reference",
            "referenceType": "Bounds",
            "referenceLink": "#type-Bounds",
            "comment": "<p>The usable work area of the display within the display bounds. The work area\nexcludes areas of the display reserved for OS, for example taskbar and\nlauncher.</p>",
            "name": "workArea"
          }
        ],
        "name": "DisplayUnitInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>3 character manufacturer code. See Sec. 3.4.1 page 21. Required in v1.4.</p>",
            "name": "manufacturerId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>2 byte manufacturer-assigned code, Sec. 3.4.2 page 21. Required in v1.4.</p>",
            "name": "productId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Year of manufacturer, Sec. 3.4.4 page 22. Required in v1.4.</p>",
            "name": "yearOfManufacture"
          }
        ],
        "name": "Edid"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If set to true, only a single <a href=\"#type-DisplayUnitInfo\"><code>DisplayUnitInfo</code></a> will be returned by\n<a href=\"#method-getInfo\"><code>getInfo</code></a> when in unified desktop mode (see <a href=\"#method-enableUnifiedDesktop\"><code>enableUnifiedDesktop</code></a>). Defaults to false.</p>",
            "optional": true,
            "name": "singleUnified"
          }
        ],
        "name": "GetInfoFlags"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The y-axis distance from the bottom bound.</p>",
            "name": "bottom"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The x-axis distance from the left bound.</p>",
            "name": "left"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The x-axis distance from the right bound.</p>",
            "name": "right"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The y-axis distance from the top bound.</p>",
            "name": "top"
          }
        ],
        "name": "Insets"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The ids of the mirroring destination displays. This is only valid for\n'mixed'.</p>",
            "optional": true,
            "name": "mirroringDestinationIds"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The id of the mirroring source display. This is only valid for 'mixed'.</p>",
            "optional": true,
            "name": "mirroringSourceId"
          },
          {
            "type": "reference",
            "referenceType": "MirrorMode",
            "referenceLink": "#type-MirrorMode",
            "comment": "<p>The mirror mode that should be set.</p>",
            "name": "mode"
          }
        ],
        "name": "MirrorModeInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The x-coordinate of the point.</p>",
            "name": "x"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The y-coordinate of the point.</p>",
            "name": "y"
          }
        ],
        "name": "Point"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "Point",
            "referenceLink": "#type-Point",
            "comment": "<p>The coordinates of the display point.</p>",
            "name": "displayPoint"
          },
          {
            "type": "reference",
            "referenceType": "Point",
            "referenceLink": "#type-Point",
            "comment": "<p>The coordinates of the touch point corresponding to the display point.</p>",
            "name": "touchPoint"
          }
        ],
        "name": "TouchCalibrationPair"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "TouchCalibrationPair",
            "referenceLink": "#type-TouchCalibrationPair",
            "comment": "<p>First pair of touch and display point required for touch calibration.</p>",
            "name": "pair1"
          },
          {
            "type": "reference",
            "referenceType": "TouchCalibrationPair",
            "referenceLink": "#type-TouchCalibrationPair",
            "comment": "<p>Second pair of touch and display point required for touch calibration.</p>",
            "name": "pair2"
          },
          {
            "type": "reference",
            "referenceType": "TouchCalibrationPair",
            "referenceLink": "#type-TouchCalibrationPair",
            "comment": "<p>Third pair of touch and display point required for touch calibration.</p>",
            "name": "pair3"
          },
          {
            "type": "reference",
            "referenceType": "TouchCalibrationPair",
            "referenceLink": "#type-TouchCalibrationPair",
            "comment": "<p>Fourth pair of touch and display point required for touch calibration.</p>",
            "name": "pair4"
          }
        ],
        "name": "TouchCalibrationPairQuad"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"top\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"right\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"bottom\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"left\""
          }
        ],
        "comment": "<p>Layout position, i.e. edge of parent that the display is attached to.</p>",
        "name": "LayoutPosition"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"off\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"normal\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"mixed\""
          }
        ],
        "comment": "<p>Mirror mode, i.e. different ways of how a display is mirrored to other\ndisplays.</p>",
        "name": "MirrorMode"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id",
            "comment": "<p>The display's unique identifier.</p>"
          }
        ],
        "comment": "<p>Resets the touch calibration for the display and brings it back to its\ndefault state by clearing any touch calibration data associated with the\ndisplay.</p>",
        "name": "clearTouchCalibration"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "TouchCalibrationPairQuad",
            "referenceLink": "#type-TouchCalibrationPairQuad",
            "optional": false,
            "name": "pairs",
            "comment": "<p>The pairs of point used to calibrate the display.</p>"
          },
          {
            "type": "reference",
            "referenceType": "Bounds",
            "referenceLink": "#type-Bounds",
            "optional": false,
            "name": "bounds",
            "comment": "<p>Bounds of the display when the touch calibration was performed.     |bounds.left| and |bounds.top| values are ignored.</p>"
          }
        ],
        "comment": "<p>Sets the touch calibration pairs for a display. These |pairs| would be used\nto calibrate the touch screen for display with |id| called in\nstartCustomTouchCalibration(). Always call |startCustomTouchCalibration|\nbefore calling this method. If another touch calibration is already in\nprogress this will throw an error.</p>",
        "name": "completeCustomTouchCalibration"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "enabled",
            "comment": "<p>True if unified desktop should be enabled.</p>"
          }
        ],
        "comment": "<p>Enables/disables the unified desktop feature. If enabled while mirroring is\nactive, the desktop mode will not change until mirroring is turned off.\nOtherwise, the desktop mode will switch to unified immediately. NOTE: This is\nonly available to Chrome OS Kiosk apps and Web UI.</p>",
        "name": "enableUnifiedDesktop"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "DisplayLayout",
                  "referenceLink": "#type-DisplayLayout"
                },
                "optional": false,
                "name": "layouts"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>The callback to invoke with the results.</p>"
          }
        ],
        "comment": "<p>Requests the layout info for all displays. NOTE: This is only available to\nChrome OS Kiosk apps and Web UI.</p>",
        "name": "getDisplayLayout"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "GetInfoFlags",
            "referenceLink": "#type-GetInfoFlags",
            "optional": true,
            "name": "flags",
            "comment": "<p>Options affecting how the information is returned.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "DisplayUnitInfo",
                  "referenceLink": "#type-DisplayUnitInfo"
                },
                "optional": false,
                "name": "displayInfo"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>The callback to invoke with the results.</p>"
          }
        ],
        "comment": "<p>Requests the information for all attached display devices.</p>",
        "name": "getInfo"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id",
            "comment": "<p>The display's unique identifier.</p>"
          },
          {
            "type": "reference",
            "referenceType": "Insets",
            "referenceLink": "#type-Insets",
            "optional": false,
            "name": "delta",
            "comment": "<p>The amount to change the overscan insets.</p>"
          }
        ],
        "comment": "<p>Adjusts the current overscan insets for a display. Typically this should\neither move the display along an axis (e.g. left+right have the same value)\nor scale it along an axis (e.g. top+bottom have opposite values). Each Adjust\ncall is cumulative with previous calls since Start.</p>",
        "name": "overscanCalibrationAdjust"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id",
            "comment": "<p>The display's unique identifier.</p>"
          }
        ],
        "comment": "<p>Complete overscan adjustments for a display  by saving the current values and\nhiding the overlay.</p>",
        "name": "overscanCalibrationComplete"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id",
            "comment": "<p>The display's unique identifier.</p>"
          }
        ],
        "comment": "<p>Resets the overscan insets for a display to the last saved value (i.e before\nStart was called).</p>",
        "name": "overscanCalibrationReset"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id",
            "comment": "<p>The display's unique identifier.</p>"
          }
        ],
        "comment": "<p>Starts overscan calibration for a display. This will show an overlay on the\nscreen indicating the current overscan insets. If overscan calibration for\ndisplay |id| is in progress this will reset calibration.</p>",
        "name": "overscanCalibrationStart"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "DisplayLayout",
              "referenceLink": "#type-DisplayLayout"
            },
            "optional": false,
            "name": "layouts",
            "comment": "<p>The layout information, required for all displays except     the primary display.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Empty function called when the function finishes. To find out     whether the function succeeded, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> should be     queried.</p>"
          }
        ],
        "comment": "<p>Set the layout for all displays. Any display not included will use the\ndefault layout. If a layout would overlap or be otherwise invalid it will be\nadjusted to a valid layout. After layout is resolved, an onDisplayChanged\nevent will be triggered. NOTE: This is only available to Chrome OS Kiosk apps\nand Web UI.</p>",
        "name": "setDisplayLayout"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id",
            "comment": "<p>The display's unique identifier.</p>"
          },
          {
            "type": "reference",
            "referenceType": "DisplayProperties",
            "referenceLink": "#type-DisplayProperties",
            "optional": false,
            "name": "info",
            "comment": "<p>The information about display properties that should be changed.     A property will be changed only if a new value for it is specified in     |info|.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Empty function called when the function finishes. To find out     whether the function succeeded, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> should be     queried.</p>"
          }
        ],
        "comment": "<p>Updates the properties for the display specified by |id|, according to the\ninformation provided in |info|. On failure, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> will be\nset. NOTE: This is only available to Chrome OS Kiosk apps and Web UI.</p>",
        "name": "setDisplayProperties"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "MirrorModeInfo",
            "referenceLink": "#type-MirrorModeInfo",
            "optional": false,
            "name": "info",
            "comment": "<p>The information of the mirror mode that should be applied to the     display mode.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Empty function called when the function finishes. To find out     whether the function succeeded, <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> should be     queried.</p>"
          }
        ],
        "comment": "<p>Sets the display mode to the specified mirror mode. Each call resets the\nstate from previous calls. Calling setDisplayProperties() will fail for the\nmirroring destination displays. NOTE: This is only available to Chrome OS\nKiosk apps and Web UI.</p>",
        "name": "setMirrorMode"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id",
            "comment": "<p>The display's unique identifier.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "success"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Optional callback to inform the caller that the touch      calibration has ended. The argument of the callback informs if the      calibration was a success or not.</p>"
          }
        ],
        "comment": "<p>Displays the native touch calibration UX for the display with |id| as display\nid. This will show an overlay on the screen with required instructions on how\nto proceed. The callback will be invoked in case of successful calibration\nonly. If the calibration fails, this will throw an error.</p>",
        "name": "showNativeTouchCalibration"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id",
            "comment": "<p>The display's unique identifier.</p>"
          }
        ],
        "comment": "<p>Starts custom touch calibration for a display. This should be called when\nusing a custom UX for collecting calibration data. If another touch\ncalibration is already in progress this will throw an error.</p>",
        "name": "startCustomTouchCalibration"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when anything changes to the display configuration.</p>",
        "name": "onDisplayChanged"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "system.display\n"
    ]
  },
  {
    "name": "chrome.system.memory",
    "shortName": "system.memory",
    "comment": "<p>The <code>chrome.system.memory</code> API.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The amount of available capacity, in bytes.</p>",
            "name": "availableCapacity"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The total amount of physical memory capacity, in bytes.</p>",
            "name": "capacity"
          }
        ],
        "name": "MemoryInfo"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "MemoryInfo",
                "referenceLink": "#type-MemoryInfo",
                "optional": false,
                "name": "info"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Get physical memory information.</p>",
        "name": "getInfo"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "system.memory\n"
    ]
  },
  {
    "name": "chrome.system.network",
    "shortName": "system.network",
    "comment": "<p>Use the <code>chrome.system.network</code> API.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The available IPv4/6 address.</p>",
            "name": "address"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The underlying name of the adapter. On *nix, this will typically be \"eth0\",\n\"wlan0\", etc.</p>",
            "name": "name"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The prefix length</p>",
            "name": "prefixLength"
          }
        ],
        "name": "NetworkInterface"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "NetworkInterface",
                  "referenceLink": "#type-NetworkInterface"
                },
                "optional": false,
                "name": "networkInterfaces",
                "comment": "<p>Array of object containing network interfaces information.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when local adapter information is available.</p>"
          }
        ],
        "comment": "<p>Retrieves information about local adapters on this system.</p>",
        "name": "getNetworkInterfaces"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "platform_app.d.ts",
    "permissions": [
      "system.network\n"
    ]
  },
  {
    "name": "chrome.system.storage",
    "shortName": "system.storage",
    "comment": "<p>Use the <code>chrome.system.storage</code> API to query storage device\ninformation and be notified when a removable storage device is attached and\ndetached.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The available capacity of the storage device, in bytes.</p>",
            "name": "availableCapacity"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A copied |id| of getAvailableCapacity function parameter |id|.</p>",
            "name": "id"
          }
        ],
        "name": "StorageAvailableCapacityInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The total amount of the storage space, in bytes.</p>",
            "name": "capacity"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The transient ID that uniquely identifies the storage device. This ID will be\npersistent within the same run of a single application. It will not be a\npersistent identifier between different runs of an application, or between\ndifferent applications.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The name of the storage unit.</p>",
            "name": "name"
          },
          {
            "type": "reference",
            "referenceType": "StorageUnitType",
            "referenceLink": "#type-StorageUnitType",
            "comment": "<p>The media type of the storage unit.</p>",
            "name": "type"
          }
        ],
        "name": "StorageUnitInfo"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"success\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"in_use\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"no_such_device\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"failure\""
          }
        ],
        "name": "EjectDeviceResultCode"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"fixed\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"removable\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"unknown\""
          }
        ],
        "name": "StorageUnitType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "EjectDeviceResultCode",
                "referenceLink": "#type-EjectDeviceResultCode",
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Ejects a removable storage device.</p>",
        "name": "ejectDevice"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "StorageAvailableCapacityInfo",
                "referenceLink": "#type-StorageAvailableCapacityInfo",
                "optional": false,
                "name": "info"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Get the available capacity of a specified |id| storage device. The |id| is\nthe transient device ID from StorageUnitInfo.</p>",
        "name": "getAvailableCapacity"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "StorageUnitInfo",
                  "referenceLink": "#type-StorageUnitInfo"
                },
                "optional": false,
                "name": "info"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Get the storage information from the system. The argument passed to the\ncallback is an array of StorageUnitInfo objects.</p>",
        "name": "getInfo"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "StorageUnitInfo",
                "referenceLink": "#type-StorageUnitInfo",
                "optional": false,
                "name": "info"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a new removable storage is attached to the system.</p>",
        "name": "onAttached"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "id"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a removable storage is detached from the system.</p>",
        "name": "onDetached"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "system.storage\n"
    ]
  },
  {
    "name": "chrome.systemIndicator",
    "shortName": "systemIndicator",
    "comment": "<p>Manages an app's system indicator icon, an image displayed in the system's\nmenubar, system tray, or other visible area provided by the OS.\nThis is\nmodelled after the other extension action APIs, such as\nchrome.browserAction\nand chrome.pageAction.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "any",
            "optional": true,
            "name": "imageData"
          },
          {
            "type": "primitive",
            "primitiveType": "any",
            "optional": true,
            "name": "path"
          }
        ],
        "name": "SetIconDetails"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Hide the icon from the status tray.</p>",
        "name": "disable"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Show the icon in the status tray.</p>",
        "name": "enable"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "SetIconDetails",
            "referenceLink": "#type-SetIconDetails",
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Set the image to be used as an indicator icon, using a set of ImageData\nobjects. These objects should have multiple resolutions so that an\nappropriate size can be selected for the given icon size and DPI scaling\nsettings. Only square ImageData objects are accepted.</p>",
        "name": "setIcon"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired only when a click on the icon does not result in a menu being\nshown.</p>",
        "name": "onClicked"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.tabCapture",
    "shortName": "tabCapture",
    "comment": "<p>Use the <code>chrome.tabCapture</code> API to interact with tab media\nstreams.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether an element in the tab being captured is in fullscreen mode.</p>",
            "name": "fullscreen"
          },
          {
            "type": "reference",
            "referenceType": "TabCaptureState",
            "referenceLink": "#type-TabCaptureState",
            "comment": "<p>The new capture status of the tab.</p>",
            "name": "status"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The id of the tab whose status changed.</p>",
            "name": "tabId"
          }
        ],
        "name": "CaptureInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": true,
            "name": "audio"
          },
          {
            "type": "reference",
            "referenceType": "MediaStreamConstraint",
            "referenceLink": "#type-MediaStreamConstraint",
            "optional": true,
            "name": "audioConstraints"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": true,
            "name": "video"
          },
          {
            "type": "reference",
            "referenceType": "MediaStreamConstraint",
            "referenceLink": "#type-MediaStreamConstraint",
            "optional": true,
            "name": "videoConstraints"
          }
        ],
        "name": "CaptureOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Optional tab id of the tab which will later invoke\n<code>getUserMedia()</code> to consume the stream. If not specified then the\nresulting stream can be used only by the calling extension. The stream can\nonly be used by frames in the given tab whose security origin matches the\nconsumber tab's origin. The tab's origin must be a secure origin, e.g. HTTPS.</p>",
            "optional": true,
            "name": "consumerTabId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Optional tab id of the tab which will be captured. If not specified then the\ncurrent active tab will be selected. Only tabs for which the extension has\nbeen granted the <code>activeTab</code> permission can be used as the target\ntab.</p>",
            "optional": true,
            "name": "targetTabId"
          }
        ],
        "name": "GetMediaStreamOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [],
            "name": "mandatory"
          },
          {
            "type": "object",
            "properties": [],
            "optional": true,
            "name": "optional"
          }
        ],
        "name": "MediaStreamConstraint"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"pending\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"active\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"stopped\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"error\""
          }
        ],
        "name": "TabCaptureState"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "CaptureOptions",
            "referenceLink": "#type-CaptureOptions",
            "optional": false,
            "name": "options",
            "comment": "<p>Configures the returned media stream.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "LocalMediaStream",
                "optional": false,
                "name": "stream"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback with either the tab capture MediaStream or   <code>null</code>.  <code>null</code> indicates an error has occurred   and the client may query <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> to access the error   details.</p>"
          }
        ],
        "comment": "<p>Captures the visible area of the currently active tab.  Capture can only be\nstarted on the currently active tab after the extension has been\n<em>invoked</em>, similar to the way that <a\nhref=\"activeTab#invoking-activeTab\">activeTab</a> works.  Capture is\nmaintained across page navigations within the tab, and stops when the tab is\nclosed, or the media stream is closed by the extension.</p>",
        "name": "capture"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "startUrl"
          },
          {
            "type": "reference",
            "referenceType": "CaptureOptions",
            "referenceLink": "#type-CaptureOptions",
            "optional": false,
            "name": "options",
            "comment": "<p>Constraints for the capture and returned MediaStream.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "LocalMediaStream",
                "optional": false,
                "name": "stream"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback with either the tab capture MediaStream or   <code>null</code>.  <code>null</code> indicates an error has occurred   and the client may query <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> to access the error   details.</p>"
          }
        ],
        "comment": "<p>Creates an off-screen tab and navigates it to the given |startUrl|. Then,\ncapture is started and a MediaStream is returned via\n|callback|.</p><p>Off-screen tabs are isolated from the user's normal browser\nexperience. They do not show up in the browser window or tab strip, nor are\nthey visible to extensions (e.g., via the chrome.tabs.* APIs).</p><p>An\noff-screen tab remains alive until one of three events occurs: 1. All\nMediaStreams providing its captured content are closed; 2. the page\nself-closes (e.g., via window.close()); 3. the extension that called\ncaptureOffscreenTab() is unloaded.</p><p>Sandboxing: The off-screen tab does\nnot have any access whatsoever to the local user profile (including cookies,\nHTTP auth, etc.).  Instead, it is provided its own sandboxed profile.  Also,\nit cannot access any interactive resources such as keyboard/mouse input,\nmedia recording devices (e.g., web cams), copy/paste to/from the system\nclipboard, etc.</p><p>Note: This is a new API, currently only available in\nCanary/Dev channel, and may change without notice.</p>",
        "name": "captureOffscreenTab"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "CaptureInfo",
                  "referenceLink": "#type-CaptureInfo"
                },
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback invoked with CaptureInfo[] for captured tabs.</p>"
          }
        ],
        "comment": "<p>Returns a list of tabs that have requested capture or are being captured,\ni.e. status != stopped and status != error. This allows extensions to inform\nthe user that there is an existing tab capture that would prevent a new tab\ncapture from succeeding (or to prevent redundant requests for the same tab).</p>",
        "name": "getCapturedTabs"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "GetMediaStreamOptions",
            "referenceLink": "#type-GetMediaStreamOptions",
            "optional": true,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "streamId"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Callback to invoke with the result. If successful, the result is an opaque string that can be passed to the <code>getUserMedia()</code> API to generate a media stream that corresponds to the target tab. The created <code>streamId</code> can only be used once and expires after a few seconds if it is not used.</p>"
          }
        ],
        "comment": "<p>Creates a stream ID to capture the target tab. Similar to\nchrome.tabCapture.capture() method, but returns a media stream ID, instead of\na media stream, to the consumer tab.</p>",
        "name": "getMediaStreamId"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "CaptureInfo",
                "referenceLink": "#type-CaptureInfo",
                "optional": false,
                "name": "info",
                "comment": "<p>CaptureInfo with new capture status for the tab.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event fired when the capture status of a tab changes. This allows\nextension authors to keep track of the capture status of tabs to keep UI\nelements like page actions in sync.</p>",
        "name": "onStatusChanged"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "tabCapture\n"
    ]
  },
  {
    "name": "chrome.tabGroups",
    "shortName": "tabGroups",
    "comment": "<p>Use the <code>chrome.tabGroups</code> API to interact with the browser's tab\ngrouping system. You can use this API to modify and rearrange tab groups in\nthe browser. To group and ungroup tabs, or to query what tabs are in groups,\nuse the <code>chrome.tabs</code> API.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the group is collapsed. A collapsed group is one whose tabs are\nhidden.</p>",
            "name": "collapsed"
          },
          {
            "type": "reference",
            "referenceType": "Color",
            "referenceLink": "#type-Color",
            "comment": "<p>The group's color.</p>",
            "name": "color"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID of the group. Group IDs are unique within a browser session.</p>",
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The title of the group.</p>",
            "optional": true,
            "name": "title"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID of the window that contains the group.</p>",
            "name": "windowId"
          }
        ],
        "name": "TabGroup"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"grey\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"blue\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"red\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"yellow\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"green\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"pink\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"purple\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"cyan\""
          }
        ],
        "comment": "<p>The group's color.</p>",
        "name": "Color"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "-1",
        "comment": "<p>An ID that represents the absence of a group.</p>",
        "name": "TAB_GROUP_ID_NONE"
      }
    ],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "groupId"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "TabGroup",
                "referenceLink": "#type-TabGroup",
                "optional": false,
                "name": "group"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves details about the specified group.</p>",
        "name": "get"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "groupId",
            "comment": "<p>The ID of the group to move.</p>"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The position to move the group to. Use <code>-1</code> to place the group at\nthe end of the window.</p>",
                "name": "index"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The window to move the group to. Defaults to the window the group is\ncurrently in. Note that groups can only be moved to and from windows with\n<a href=\"../windows/#type-WindowType\"><code>windows.WindowType</code></a> type <code>\"normal\"</code>.</p>",
                "optional": true,
                "name": "windowId"
              }
            ],
            "optional": false,
            "name": "moveProperties"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "TabGroup",
                "referenceLink": "#type-TabGroup",
                "optional": false,
                "name": "group",
                "comment": "<p>Details about the moved group.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Moves the group and all its tabs within its window, or to a new window.</p>",
        "name": "move"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the groups are collapsed.</p>",
                "optional": true,
                "name": "collapsed"
              },
              {
                "type": "reference",
                "referenceType": "Color",
                "referenceLink": "#type-Color",
                "comment": "<p>The color of the groups.</p>",
                "optional": true,
                "name": "color"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>Match group titles against a pattern.</p>",
                "optional": true,
                "name": "title"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The ID of the parent window, or <a href=\"../windows/#property-WINDOW_ID_CURRENT\"><code>windows.WINDOW_ID_CURRENT</code></a> for the <a\nhref='windows#current-window'>current window</a>.</p>",
                "optional": true,
                "name": "windowId"
              }
            ],
            "optional": false,
            "name": "queryInfo"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "TabGroup",
                  "referenceLink": "#type-TabGroup"
                },
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets all groups that have the specified properties, or all groups if no\nproperties are specified.</p>",
        "name": "query"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "groupId",
            "comment": "<p>The ID of the group to modify.</p>"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the group should be collapsed.</p>",
                "optional": true,
                "name": "collapsed"
              },
              {
                "type": "reference",
                "referenceType": "Color",
                "referenceLink": "#type-Color",
                "comment": "<p>The color of the group.</p>",
                "optional": true,
                "name": "color"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The title of the group.</p>",
                "optional": true,
                "name": "title"
              }
            ],
            "optional": false,
            "name": "updateProperties"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "TabGroup",
                "referenceLink": "#type-TabGroup",
                "optional": false,
                "name": "group",
                "comment": "<p>Details about the updated group.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Modifies the properties of a group. Properties that are not specified in\n<var>updateProperties</var> are not modified.</p>",
        "name": "update"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "TabGroup",
                "referenceLink": "#type-TabGroup",
                "optional": false,
                "name": "group",
                "comment": "<p>Details of the group that was created.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a group is created.</p>",
        "name": "onCreated"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "TabGroup",
                "referenceLink": "#type-TabGroup",
                "optional": false,
                "name": "group",
                "comment": "<p>Details of the group that was moved.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a group is moved within a window. Move events are still fired\nfor the individual tabs within the group, as well as for the group\nitself. This event is not fired when a group is moved between windows;\ninstead, it will be removed from one window and created in another.</p>",
        "name": "onMoved"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "TabGroup",
                "referenceLink": "#type-TabGroup",
                "optional": false,
                "name": "group",
                "comment": "<p>Details of the group that was removed.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a group is closed, either directly by the user or\nautomatically because it contained zero tabs.</p>",
        "name": "onRemoved"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "TabGroup",
                "referenceLink": "#type-TabGroup",
                "optional": false,
                "name": "group",
                "comment": "<p>Details of the group that was updated.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a group is updated.</p>",
        "name": "onUpdated"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "tabGroups\n"
    ]
  },
  {
    "name": "chrome.tabs",
    "shortName": "tabs",
    "comment": "<p>Use the <code>chrome.tabs</code> API to interact with the browser's tab\nsystem. You can use this API to create, modify, and rearrange tabs in the\nbrowser.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The ID of the extension that changed the muted state. Not set if an extension\nwas not the reason the muted state last changed.</p>",
            "optional": true,
            "name": "extensionId"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the tab is muted (prevented from playing sound). The tab may be muted\neven if it has not played or is not currently playing sound. Equivalent to\nwhether the 'muted' audio indicator is showing.</p>",
            "name": "muted"
          },
          {
            "type": "reference",
            "referenceType": "MutedInfoReason",
            "referenceLink": "#type-MutedInfoReason",
            "comment": "<p>The reason the tab was muted or unmuted. Not set if the tab's mute state has\nnever been changed.</p>",
            "optional": true,
            "name": "reason"
          }
        ],
        "comment": "<p>The tab's muted state and the reason for the last state change.</p>",
        "name": "MutedInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the tab is active in its window. Does not necessarily mean the window\nis focused.</p>",
            "name": "active"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the tab has produced sound over the past couple of seconds (but it\nmight not be heard if also muted). Equivalent to whether the 'speaker audio'\nindicator is showing.</p>",
            "optional": true,
            "name": "audible"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the tab can be discarded automatically by the browser when resources\nare low.</p>",
            "name": "autoDiscardable"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the tab is discarded. A discarded tab is one whose content has been\nunloaded from memory, but is still visible in the tab strip. Its content is\nreloaded the next time it is activated.</p>",
            "name": "discarded"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL of the tab's favicon. This property is only present if the\nextension's manifest includes the <code>\"tabs\"</code> permission. It may also\nbe an empty string if the tab is loading.</p>",
            "optional": true,
            "name": "favIconUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID of the group that the tab belongs to.</p>",
            "name": "groupId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The height of the tab in pixels.</p>",
            "optional": true,
            "name": "height"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the tab is highlighted.</p>",
            "name": "highlighted"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID of the tab. Tab IDs are unique within a browser session. Under some\ncircumstances a tab may not be assigned an ID; for example, when querying\nforeign tabs using the <a href=\"../sessions/\"><code>sessions</code></a> API, in which case a session ID may\nbe present. Tab ID can also be set to <code>chrome.tabs.TAB_ID_NONE</code>\nfor apps and devtools windows.</p>",
            "optional": true,
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the tab is in an incognito window.</p>",
            "name": "incognito"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The zero-based index of the tab within its window.</p>",
            "name": "index"
          },
          {
            "type": "reference",
            "referenceType": "MutedInfo",
            "referenceLink": "#type-MutedInfo",
            "comment": "<p>The tab's muted state and the reason for the last state change.</p>",
            "optional": true,
            "name": "mutedInfo"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID of the tab that opened this tab, if any. This property is only present\nif the opener tab still exists.</p>",
            "optional": true,
            "name": "openerTabId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL the tab is navigating to, before it has committed. This property is\nonly present if the extension's manifest includes the <code>\"tabs\"</code>\npermission and there is a pending navigation.</p>",
            "optional": true,
            "name": "pendingUrl"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the tab is pinned.</p>",
            "name": "pinned"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the tab is selected.</p>",
            "deprecated": "Please use <a href=\"#type-Tab-highlighted\"><code>Tab.highlighted</code></a>.\n",
            "name": "selected"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The session ID used to uniquely identify a tab obtained from the <a href=\"../sessions/\"><code>sessions</code></a> API.</p>",
            "optional": true,
            "name": "sessionId"
          },
          {
            "type": "reference",
            "referenceType": "TabStatus",
            "referenceLink": "#type-TabStatus",
            "comment": "<p>The tab's loading status.</p>",
            "optional": true,
            "name": "status"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The title of the tab. This property is only present if the extension's\nmanifest includes the <code>\"tabs\"</code> permission.</p>",
            "optional": true,
            "name": "title"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The last committed URL of the main frame of the tab. This property is only\npresent if the extension's manifest includes the <code>\"tabs\"</code>\npermission and may be an empty string if the tab has not yet committed. See\nalso <a href=\"#type-Tab-pendingUrl\"><code>Tab.pendingUrl</code></a>.</p>",
            "optional": true,
            "name": "url"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The width of the tab in pixels.</p>",
            "optional": true,
            "name": "width"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID of the window that contains the tab.</p>",
            "name": "windowId"
          }
        ],
        "name": "Tab"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Used to return the default zoom level for the current tab in calls to\ntabs.getZoomSettings.</p>",
            "optional": true,
            "name": "defaultZoomFactor"
          },
          {
            "type": "reference",
            "referenceType": "ZoomSettingsMode",
            "referenceLink": "#type-ZoomSettingsMode",
            "comment": "<p>Defines how zoom changes are handled, i.e., which entity is responsible for\nthe actual scaling of the page; defaults to <code>automatic</code>.</p>",
            "optional": true,
            "name": "mode"
          },
          {
            "type": "reference",
            "referenceType": "ZoomSettingsScope",
            "referenceLink": "#type-ZoomSettingsScope",
            "comment": "<p>Defines whether zoom changes persist for the page's origin, or only take\neffect in this tab; defaults to <code>per-origin</code> when in\n<code>automatic</code> mode, and <code>per-tab</code> otherwise.</p>",
            "optional": true,
            "name": "scope"
          }
        ],
        "comment": "<p>Defines how zoom changes in a tab are handled and at what scope.</p>",
        "name": "ZoomSettings"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"user\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"capture\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"extension\""
          }
        ],
        "comment": "<p>An event that caused a muted state change.</p>",
        "name": "MutedInfoReason"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"unloaded\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"loading\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"complete\""
          }
        ],
        "comment": "<p>The tab's loading status.</p>",
        "name": "TabStatus"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"normal\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"popup\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"panel\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"app\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"devtools\""
          }
        ],
        "comment": "<p>The type of window.</p>",
        "name": "WindowType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"automatic\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"manual\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"disabled\""
          }
        ],
        "comment": "<p>Defines how zoom changes are handled, i.e., which entity is responsible for\nthe actual scaling of the page; defaults to <code>automatic</code>.</p>",
        "name": "ZoomSettingsMode"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"per-origin\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"per-tab\""
          }
        ],
        "comment": "<p>Defines whether zoom changes persist for the page's origin, or only take\neffect in this tab; defaults to <code>per-origin</code> when in\n<code>automatic</code> mode, and <code>per-tab</code> otherwise.</p>",
        "name": "ZoomSettingsScope"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "-1",
        "comment": "<p>An ID that represents the absence of a browser tab.</p>",
        "name": "TAB_ID_NONE"
      }
    ],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "windowId",
            "comment": "<p>The target window. Defaults to the <a href='windows#current-window'>current window</a>.</p>"
          },
          {
            "type": "reference",
            "referenceType": "extensionTypes.ImageDetails",
            "referenceLink": "../extensionTypes/#type-ImageDetails",
            "optional": true,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "dataUrl",
                "comment": "<p>A data URL that encodes an image of the visible area of the captured tab. May be assigned to the 'src' property of an HTML <code>img</code> element for display.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Captures the visible area of the currently active tab in the specified\nwindow. In order to call this method, the extension must have either the <a\nhref=\"../../declare_permissions/\">&lt;all_urls&gt;</a> permission or the <a\nhref=\"../../activeTab/\">activeTab</a> permission. In addition to sites that\nextensions can normally access, this method allows extensions to capture\nsensitive sites that are otherwise restricted, including chrome:-scheme\npages, other extensions' pages, and data: URLs. These sensitive sites can\nonly be captured with the activeTab permission. File URLs may be captured\nonly if the extension has been granted file access.</p>",
        "name": "captureVisibleTab"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "tabId"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Open a port to a specific <a href=\"../webNavigation/#frame_ids\">frame</a>\nidentified by <code>frameId</code> instead of all frames in the tab.</p>",
                "optional": true,
                "name": "frameId"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>Is passed into onConnect for content scripts that are listening for the\nconnection event.</p>",
                "optional": true,
                "name": "name"
              }
            ],
            "optional": false,
            "name": "connectInfo"
          }
        ],
        "comment": "<p>Connects to the content script(s) in the specified tab. The <a href=\"../runtime/#event-onConnect\"><code>runtime.onConnect</code></a> event is fired in each content script running in the\nspecified tab for the current extension. For more details, see <a\nhref=\"../../messaging/\">Content Script Messaging</a>.</p>",
        "returnType": {
          "type": "reference",
          "referenceType": "runtime.Port",
          "referenceLink": "../runtime/#type-Port",
          "name": "returns",
          "comment": "<p>A port that can be used to communicate with the content scripts running in the specified tab. The port's <a href=\"../runtime/#type-Port\"><code>runtime.Port</code></a> event is fired if the tab closes or does not exist.</p>"
        },
        "name": "connect"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the tab should become the active tab in the window. Does not affect\nwhether the window is focused (see <a href=\"../windows/#method-update\"><code>windows.update</code></a>). Defaults to\n<var>true</var>.</p>",
                "optional": true,
                "name": "active"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The position the tab should take in the window. The provided value is clamped\nto between zero and the number of tabs in the window.</p>",
                "optional": true,
                "name": "index"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The ID of the tab that opened this tab. If specified, the opener tab must be\nin the same window as the newly created tab.</p>",
                "optional": true,
                "name": "openerTabId"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the tab should be pinned. Defaults to <var>false</var></p>",
                "optional": true,
                "name": "pinned"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the tab should become the selected tab in the window. Defaults to\n<var>true</var></p>",
                "deprecated": "Please use <em>active</em>.\n",
                "optional": true,
                "name": "selected"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The URL to initially navigate the tab to. Fully-qualified URLs must include a\nscheme (i.e., 'http://www.google.com', not 'www.google.com'). Relative URLs\nare relative to the current page within the extension. Defaults to the New\nTab Page.</p>",
                "optional": true,
                "name": "url"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The window in which to create the new tab. Defaults to the <a\nhref='windows#current-window'>current window</a>.</p>",
                "optional": true,
                "name": "windowId"
              }
            ],
            "optional": false,
            "name": "createProperties"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Tab",
                "referenceLink": "#type-Tab",
                "optional": false,
                "name": "tab",
                "comment": "<p>The created tab.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Creates a new tab.</p>",
        "name": "create"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "tabId",
            "comment": "<p>Defaults to the active tab of the <a href='windows#current-window'>current window</a>.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "language",
                "comment": "<p>An ISO language code such as <code>en</code> or <code>fr</code>. For a complete list of languages supported by this method, see <a href='http://src.chromium.org/viewvc/chrome/trunk/src/third_party/cld/languages/internal/languages.cc'>kLanguageInfoTable</a>. The second to fourth columns are checked and the first non-NULL value is returned, except for Simplified Chinese for which <code>zh-CN</code> is returned. For an unknown/undefined language, <code>und</code> is returned.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Detects the primary language of the content in a tab.</p>",
        "name": "detectLanguage"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "tabId",
            "comment": "<p>The ID of the tab to be discarded. If specified, the tab is discarded unless it is active or already discarded. If omitted, the browser discards the least important tab. This can fail if no discardable tabs exist.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Tab",
                "referenceLink": "#type-Tab",
                "optional": false,
                "name": "tab",
                "comment": "<p>The discarded tab, if it was successfully discarded; undefined otherwise.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called after the operation is completed.</p>"
          }
        ],
        "comment": "<p>Discards a tab from memory. Discarded tabs are still visible on the tab strip\nand are reloaded when activated.</p>",
        "name": "discard"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "tabId",
            "comment": "<p>The ID of the tab to duplicate.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Tab",
                "referenceLink": "#type-Tab",
                "optional": false,
                "name": "tab",
                "comment": "<p>Details about the duplicated tab. The <a href=\"#type-Tab\"><code>Tab</code></a> object does not contain <code>url</code>, <code>pendingUrl</code>, <code>title</code>, and <code>favIconUrl</code> if the <code>\"tabs\"</code> permission has not been requested.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Duplicates a tab.</p>",
        "name": "duplicate"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "tabId",
            "comment": "<p>The ID of the tab in which to run the script; defaults to the active tab of the current window.</p>"
          },
          {
            "type": "reference",
            "referenceType": "extensionTypes.InjectDetails",
            "referenceLink": "../extensionTypes/#type-InjectDetails",
            "optional": false,
            "name": "details",
            "comment": "<p>Details of the script to run. Either the code or the file property must be set, but both may not be set at the same time.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "any"
                },
                "optional": false,
                "name": "result",
                "comment": "<p>The result of the script in every injected frame.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called after all the JavaScript has been executed.</p>"
          }
        ],
        "comment": "<p>Injects JavaScript code into a page. For details, see the <a\nhref=\"../../content_scripts/#pi\">programmatic injection</a> section of the content\nscripts doc.</p>",
        "name": "executeScript"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "tabId"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Tab",
                "referenceLink": "#type-Tab",
                "optional": false,
                "name": "tab"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves details about the specified tab.</p>",
        "name": "get"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "windowId",
            "comment": "<p>Defaults to the <a href='windows#current-window'>current window</a>.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Tab",
                  "referenceLink": "#type-Tab"
                },
                "optional": false,
                "name": "tabs"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets details about all tabs in the specified window.</p>",
        "deprecated": "Please use <a href=\"#method-query\"><code>query</code></a> <code>{windowId: windowId}</code>.\n",
        "name": "getAllInWindow"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Tab",
                "referenceLink": "#type-Tab",
                "optional": false,
                "name": "tab"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the tab that this script call is being made from. May be undefined if\ncalled from a non-tab context (for example, a background page or popup view).</p>",
        "name": "getCurrent"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "windowId",
            "comment": "<p>Defaults to the <a href='windows#current-window'>current window</a>.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Tab",
                "referenceLink": "#type-Tab",
                "optional": false,
                "name": "tab"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the tab that is selected in the specified window.</p>",
        "deprecated": "Please use <a href=\"#method-query\"><code>query</code></a> <code>{active: true}</code>.\n",
        "name": "getSelected"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "tabId",
            "comment": "<p>The ID of the tab to get the current zoom factor from; defaults to the active tab of the current window.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "zoomFactor",
                "comment": "<p>The tab's current zoom factor.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the tab's current zoom factor after it has been fetched.</p>"
          }
        ],
        "comment": "<p>Gets the current zoom factor of a specified tab.</p>",
        "name": "getZoom"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "tabId",
            "comment": "<p>The ID of the tab to get the current zoom settings from; defaults to the active tab of the current window.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ZoomSettings",
                "referenceLink": "#type-ZoomSettings",
                "optional": false,
                "name": "zoomSettings",
                "comment": "<p>The tab's current zoom settings.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the tab's current zoom settings.</p>"
          }
        ],
        "comment": "<p>Gets the current zoom settings of a specified tab.</p>",
        "name": "getZoomSettings"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "tabId",
            "comment": "<p>The ID of the tab to navigate back; defaults to the selected tab of the current window.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Go back to the previous page, if one is available.</p>",
        "name": "goBack"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "tabId",
            "comment": "<p>The ID of the tab to navigate forward; defaults to the selected tab of the current window.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Go foward to the next page, if one is available.</p>",
        "name": "goForward"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The window of the new group. Defaults to the current window.</p>",
                    "optional": true,
                    "name": "windowId"
                  }
                ],
                "comment": "<p>Configurations for creating a group. Cannot be used if groupId is already\nspecified.</p>",
                "optional": true,
                "name": "createProperties"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The ID of the group to add the tabs to. If not specified, a new group will be\ncreated.</p>",
                "optional": true,
                "name": "groupId"
              },
              {
                "type": "union",
                "isEnum": false,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "number"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "primitive",
                      "primitiveType": "number"
                    },
                    "minLength": 1
                  }
                ],
                "comment": "<p>The tab ID or list of tab IDs to add to the specified group.</p>",
                "name": "tabIds"
              }
            ],
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "groupId",
                "comment": "<p>The ID of the group that the tabs were added to.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Adds one or more tabs to a specified group, or if no group is specified, adds\nthe given tabs to a newly created group.</p>",
        "name": "group"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "union",
                "isEnum": false,
                "options": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "primitive",
                      "primitiveType": "number"
                    }
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number"
                  }
                ],
                "comment": "<p>One or more tab indices to highlight.</p>",
                "name": "tabs"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The window that contains the tabs.</p>",
                "optional": true,
                "name": "windowId"
              }
            ],
            "optional": false,
            "name": "highlightInfo"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "windows.Window",
                "referenceLink": "../windows/#type-Window",
                "optional": false,
                "name": "window",
                "comment": "<p>Contains details about the window whose tabs were highlighted.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Highlights the given tabs and focuses on the first of group. Will appear to\ndo nothing if the specified tab is currently active.</p>",
        "name": "highlight"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "tabId",
            "comment": "<p>The ID of the tab in which to insert the CSS; defaults to the active tab of the current window.</p>"
          },
          {
            "type": "reference",
            "referenceType": "extensionTypes.InjectDetails",
            "referenceLink": "../extensionTypes/#type-InjectDetails",
            "optional": false,
            "name": "details",
            "comment": "<p>Details of the CSS text to insert. Either the code or the file property must be set, but both may not be set at the same time.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when all the CSS has been inserted.</p>"
          }
        ],
        "comment": "<p>Injects CSS into a page. For details, see the <a\nhref=\"../../content_scripts/#pi\">programmatic injection</a> section of the content\nscripts doc.</p>",
        "name": "insertCSS"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "union",
            "isEnum": false,
            "options": [
              {
                "type": "primitive",
                "primitiveType": "number"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "number"
                }
              }
            ],
            "optional": false,
            "name": "tabIds",
            "comment": "<p>The tab ID or list of tab IDs to move.</p>"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The position to move the window to. Use <code>-1</code> to place the tab at\nthe end of the window.</p>",
                "name": "index"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Defaults to the window the tab is currently in.</p>",
                "optional": true,
                "name": "windowId"
              }
            ],
            "optional": false,
            "name": "moveProperties"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "union",
                "isEnum": false,
                "options": [
                  {
                    "type": "reference",
                    "referenceType": "Tab",
                    "referenceLink": "#type-Tab"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "referenceType": "Tab",
                      "referenceLink": "#type-Tab"
                    }
                  }
                ],
                "optional": false,
                "name": "tabs",
                "comment": "<p>Details about the moved tabs.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Moves one or more tabs to a new position within its window, or to a new\nwindow. Note that tabs can only be moved to and from normal (window.type ===\n\"normal\") windows.</p>",
        "name": "move"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the tabs are active in their windows.</p>",
                "optional": true,
                "name": "active"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the tabs are audible.</p>",
                "optional": true,
                "name": "audible"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the tabs can be discarded automatically by the browser when resources\nare low.</p>",
                "optional": true,
                "name": "autoDiscardable"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the tabs are in the <a href='windows#current-window'>current\nwindow</a>.</p>",
                "optional": true,
                "name": "currentWindow"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the tabs are discarded. A discarded tab is one whose content has been\nunloaded from memory, but is still visible in the tab strip. Its content is\nreloaded the next time it is activated.</p>",
                "optional": true,
                "name": "discarded"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The ID of the group that the tabs are in, or <a href=\"../tabGroups/#property-TAB_GROUP_ID_NONE\"><code>tabGroups.TAB_GROUP_ID_NONE</code></a> for ungrouped tabs.</p>",
                "optional": true,
                "name": "groupId"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the tabs are highlighted.</p>",
                "optional": true,
                "name": "highlighted"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The position of the tabs within their windows.</p>",
                "optional": true,
                "name": "index"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the tabs are in the last focused window.</p>",
                "optional": true,
                "name": "lastFocusedWindow"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the tabs are muted.</p>",
                "optional": true,
                "name": "muted"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the tabs are pinned.</p>",
                "optional": true,
                "name": "pinned"
              },
              {
                "type": "reference",
                "referenceType": "TabStatus",
                "referenceLink": "#type-TabStatus",
                "comment": "<p>The tab loading status.</p>",
                "optional": true,
                "name": "status"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>Match page titles against a pattern. This property is ignored if the\nextension does not have the <code>\"tabs\"</code> permission.</p>",
                "optional": true,
                "name": "title"
              },
              {
                "type": "union",
                "isEnum": false,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "string"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "primitive",
                      "primitiveType": "string"
                    }
                  }
                ],
                "comment": "<p>Match tabs against one or more <a href=\"../../match_patterns/\">URL patterns</a>.\nFragment identifiers are not matched. This property is ignored if the\nextension does not have the <code>\"tabs\"</code> permission.</p>",
                "optional": true,
                "name": "url"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The ID of the parent window, or <a href=\"../windows/#property-WINDOW_ID_CURRENT\"><code>windows.WINDOW_ID_CURRENT</code></a> for the <a\nhref='windows#current-window'>current window</a>.</p>",
                "optional": true,
                "name": "windowId"
              },
              {
                "type": "reference",
                "referenceType": "WindowType",
                "referenceLink": "#type-WindowType",
                "comment": "<p>The type of window the tabs are in.</p>",
                "optional": true,
                "name": "windowType"
              }
            ],
            "optional": false,
            "name": "queryInfo"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Tab",
                  "referenceLink": "#type-Tab"
                },
                "optional": false,
                "name": "result"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets all tabs that have the specified properties, or all tabs if no\nproperties are specified.</p>",
        "name": "query"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "tabId",
            "comment": "<p>The ID of the tab to reload; defaults to the selected tab of the current window.</p>"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether to bypass local caching. Defaults to <code>false</code>.</p>",
                "optional": true,
                "name": "bypassCache"
              }
            ],
            "optional": false,
            "name": "reloadProperties"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Reload a tab.</p>",
        "name": "reload"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "union",
            "isEnum": false,
            "options": [
              {
                "type": "primitive",
                "primitiveType": "number"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "number"
                }
              }
            ],
            "optional": false,
            "name": "tabIds",
            "comment": "<p>The tab ID or list of tab IDs to close.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Closes one or more tabs.</p>",
        "name": "remove"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "tabId",
            "comment": "<p>The ID of the tab from which to remove the CSS; defaults to the active tab of the current window.</p>"
          },
          {
            "type": "reference",
            "referenceType": "extensionTypes.DeleteInjectionDetails",
            "referenceLink": "../extensionTypes/#type-DeleteInjectionDetails",
            "optional": false,
            "name": "details",
            "comment": "<p>Details of the CSS text to remove. Either the code or the file property must be set, but both may not be set at the same time.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when all the CSS has been removed.</p>"
          }
        ],
        "comment": "<p>Removes from a page CSS that was previously injected by a call to <a href=\"#method-insertCSS\"><code>insertCSS</code></a>.</p>",
        "name": "removeCSS"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "tabId"
          },
          {
            "type": "primitive",
            "primitiveType": "any",
            "optional": false,
            "name": "message",
            "comment": "<p>The message to send. This message should be a JSON-ifiable object.</p>"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>Send a message to a specific <a href=\"../webNavigation/#frame_ids\">frame</a>\nidentified by <code>frameId</code> instead of all frames in the tab.</p>",
                "optional": true,
                "name": "frameId"
              }
            ],
            "optional": false,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "any",
                "optional": false,
                "name": "response",
                "comment": "<p>The JSON response object sent by the handler of the message. If an error occurs while connecting to the specified tab, the callback is called with no arguments and <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> is set to the error message.</p>"
              }
            ],
            "optional": false,
            "name": "responseCallback"
          }
        ],
        "comment": "<p>Sends a single message to the content script(s) in the specified tab, with an\noptional callback to run when a response is sent back.  The <a href=\"../runtime/#event-onMessage\"><code>runtime.onMessage</code></a> event is fired in each content script running in the\nspecified tab for the current extension.</p>",
        "name": "sendMessage"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "tabId"
          },
          {
            "type": "primitive",
            "primitiveType": "any",
            "optional": false,
            "name": "request"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "any",
                "optional": false,
                "name": "response",
                "comment": "<p>The JSON response object sent by the handler of the request. If an error occurs while connecting to the specified tab, the callback is called with no arguments and <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> is set to the error message.</p>"
              }
            ],
            "optional": false,
            "name": "responseCallback"
          }
        ],
        "comment": "<p>Sends a single request to the content script(s) in the specified tab, with an\noptional callback to run when a response is sent back.  The <a href=\"../extension/#event-onRequest\"><code>extension.onRequest</code></a> event is fired in each content script running in the\nspecified tab for the current extension.</p>",
        "deprecated": "Please use <a href=\"../runtime/#method-sendMessage\"><code>runtime.sendMessage</code></a>.\n",
        "name": "sendRequest"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "tabId",
            "comment": "<p>The ID of the tab to zoom; defaults to the active tab of the current window.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "zoomFactor",
            "comment": "<p>The new zoom factor. A value of <code>0</code> sets the tab to its current default zoom factor. Values greater than <code>0</code> specify a (possibly non-default) zoom factor for the tab.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called after the zoom factor has been changed.</p>"
          }
        ],
        "comment": "<p>Zooms a specified tab.</p>",
        "name": "setZoom"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "tabId",
            "comment": "<p>The ID of the tab to change the zoom settings for; defaults to the active tab of the current window.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ZoomSettings",
            "referenceLink": "#type-ZoomSettings",
            "optional": false,
            "name": "zoomSettings",
            "comment": "<p>Defines how zoom changes are handled and at what scope.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called after the zoom settings are changed.</p>"
          }
        ],
        "comment": "<p>Sets the zoom settings for a specified tab, which define how zoom changes are\nhandled. These settings are reset to defaults upon navigating the tab.</p>",
        "name": "setZoomSettings"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "union",
            "isEnum": false,
            "options": [
              {
                "type": "primitive",
                "primitiveType": "number"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "number"
                },
                "minLength": 1
              }
            ],
            "optional": false,
            "name": "tabIds",
            "comment": "<p>The tab ID or list of tab IDs to remove from their respective groups.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Removes one or more tabs from their respective groups. If any groups become\nempty, they are deleted.</p>",
        "name": "ungroup"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "tabId",
            "comment": "<p>Defaults to the selected tab of the <a href='windows#current-window'>current window</a>.</p>"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the tab should be active. Does not affect whether the window is\nfocused (see <a href=\"../windows/#method-update\"><code>windows.update</code></a>).</p>",
                "optional": true,
                "name": "active"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the tab should be discarded automatically by the browser when\nresources are low.</p>",
                "optional": true,
                "name": "autoDiscardable"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Adds or removes the tab from the current selection.</p>",
                "optional": true,
                "name": "highlighted"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the tab should be muted.</p>",
                "optional": true,
                "name": "muted"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The ID of the tab that opened this tab. If specified, the opener tab must be\nin the same window as this tab.</p>",
                "optional": true,
                "name": "openerTabId"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the tab should be pinned.</p>",
                "optional": true,
                "name": "pinned"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the tab should be selected.</p>",
                "deprecated": "Please use <em>highlighted</em>.\n",
                "optional": true,
                "name": "selected"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>A URL to navigate the tab to. JavaScript URLs are not supported; use <a href=\"#method-executeScript\"><code>executeScript</code></a> instead.</p>",
                "optional": true,
                "name": "url"
              }
            ],
            "optional": false,
            "name": "updateProperties"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Tab",
                "referenceLink": "#type-Tab",
                "optional": false,
                "name": "tab",
                "comment": "<p>Details about the updated tab. The <a href=\"#type-Tab\"><code>Tab</code></a> object does not contain <code>url</code>, <code>pendingUrl</code>, <code>title</code>, and <code>favIconUrl</code> if the <code>\"tabs\"</code> permission has not been requested.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Modifies the properties of a tab. Properties that are not specified in\n<var>updateProperties</var> are not modified.</p>",
        "name": "update"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab that has become active.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the window the active tab changed inside of.</p>",
                    "name": "windowId"
                  }
                ],
                "optional": false,
                "name": "activeInfo"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fires when the active tab in a window changes. Note that the tab's URL\nmay not be set at the time this event fired, but you can listen to\nonUpdated events so as to be notified when a URL is set.</p>",
        "name": "onActivated"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "tabId",
                "comment": "<p>The ID of the tab that has become active.</p>"
              },
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the window the selected tab changed inside of.</p>",
                    "name": "windowId"
                  }
                ],
                "optional": false,
                "name": "selectInfo"
              }
            ],
            "deprecated": "Please use <a href=\"#event-onActivated\"><code>onActivated</code></a>.\n",
            "name": "listener"
          }
        ],
        "comment": "<p>Fires when the selected tab in a window changes. Note that the tab's URL\nmay not be set at the time this event fired, but you can listen to <a href=\"#event-onUpdated\"><code>onUpdated</code></a> events so as to be notified when a URL is set.</p>",
        "name": "onActiveChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "tabId"
              },
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "name": "newPosition"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "name": "newWindowId"
                  }
                ],
                "optional": false,
                "name": "attachInfo"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a tab is attached to a window; for example, because it was\nmoved between windows.</p>",
        "name": "onAttached"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Tab",
                "referenceLink": "#type-Tab",
                "optional": false,
                "name": "tab",
                "comment": "<p>Details of the tab that was created.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a tab is created. Note that the tab's URL may not be set at\nthe time this event is fired, but you can listen to onUpdated events so\nas to be notified when a URL is set.</p>",
        "name": "onCreated"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "tabId"
              },
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "name": "oldPosition"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "name": "oldWindowId"
                  }
                ],
                "optional": false,
                "name": "detachInfo"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a tab is detached from a window; for example, because it was\nmoved between windows.</p>",
        "name": "onDetached"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "primitive",
                      "primitiveType": "number"
                    },
                    "comment": "<p>All highlighted tabs in the window.</p>",
                    "name": "tabIds"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The window whose tabs changed.</p>",
                    "name": "windowId"
                  }
                ],
                "optional": false,
                "name": "selectInfo"
              }
            ],
            "deprecated": "Please use <a href=\"#event-onHighlighted\"><code>onHighlighted</code></a>.\n",
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the highlighted or selected tabs in a window changes.</p>",
        "name": "onHighlightChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "primitive",
                      "primitiveType": "number"
                    },
                    "comment": "<p>All highlighted tabs in the window.</p>",
                    "name": "tabIds"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The window whose tabs changed.</p>",
                    "name": "windowId"
                  }
                ],
                "optional": false,
                "name": "highlightInfo"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the highlighted or selected tabs in a window changes.</p>",
        "name": "onHighlighted"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "tabId"
              },
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "name": "fromIndex"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "name": "toIndex"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "name": "windowId"
                  }
                ],
                "optional": false,
                "name": "moveInfo"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a tab is moved within a window. Only one move event is fired,\nrepresenting the tab the user directly moved. Move events are not fired\nfor the other tabs that must move in response to the manually-moved tab.\nThis event is not fired when a tab is moved between windows; for details,\nsee <a href=\"#event-onDetached\"><code>onDetached</code></a>.</p>",
        "name": "onMoved"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "tabId"
              },
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>True when the tab was closed because its parent window was closed.</p>",
                    "name": "isWindowClosing"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The window whose tab is closed.</p>",
                    "name": "windowId"
                  }
                ],
                "optional": false,
                "name": "removeInfo"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a tab is closed.</p>",
        "name": "onRemoved"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "addedTabId"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "removedTabId"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a tab is replaced with another tab due to prerendering or\ninstant.</p>",
        "name": "onReplaced"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "tabId",
                "comment": "<p>The ID of the tab that has become active.</p>"
              },
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the window the selected tab changed inside of.</p>",
                    "name": "windowId"
                  }
                ],
                "optional": false,
                "name": "selectInfo"
              }
            ],
            "deprecated": "Please use <a href=\"#event-onActivated\"><code>onActivated</code></a>.\n",
            "name": "listener"
          }
        ],
        "comment": "<p>Fires when the selected tab in a window changes.</p>",
        "name": "onSelectionChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "tabId"
              },
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>The tab's new audible state.</p>",
                    "optional": true,
                    "name": "audible"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>The tab's new auto-discardable state.</p>",
                    "optional": true,
                    "name": "autoDiscardable"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>The tab's new discarded state.</p>",
                    "optional": true,
                    "name": "discarded"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The tab's new favicon URL.</p>",
                    "optional": true,
                    "name": "favIconUrl"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The tab's new group.</p>",
                    "optional": true,
                    "name": "groupId"
                  },
                  {
                    "type": "reference",
                    "referenceType": "MutedInfo",
                    "referenceLink": "#type-MutedInfo",
                    "comment": "<p>The tab's new muted state and the reason for the change.</p>",
                    "optional": true,
                    "name": "mutedInfo"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>The tab's new pinned state.</p>",
                    "optional": true,
                    "name": "pinned"
                  },
                  {
                    "type": "reference",
                    "referenceType": "TabStatus",
                    "referenceLink": "#type-TabStatus",
                    "comment": "<p>The tab's loading status.</p>",
                    "optional": true,
                    "name": "status"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The tab's new title.</p>",
                    "optional": true,
                    "name": "title"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The tab's URL if it has changed.</p>",
                    "optional": true,
                    "name": "url"
                  }
                ],
                "comment": "<p>Lists the changes to the state of the tab that was updated.</p>",
                "optional": false,
                "name": "changeInfo"
              },
              {
                "type": "reference",
                "referenceType": "Tab",
                "referenceLink": "#type-Tab",
                "optional": false,
                "name": "tab",
                "comment": "<p>Gives the state of the tab that was updated.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a tab is updated.</p>",
        "name": "onUpdated"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "name": "newZoomFactor"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "name": "oldZoomFactor"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "name": "tabId"
                  },
                  {
                    "type": "reference",
                    "referenceType": "ZoomSettings",
                    "referenceLink": "#type-ZoomSettings",
                    "name": "zoomSettings"
                  }
                ],
                "optional": false,
                "name": "ZoomChangeInfo"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a tab is zoomed.</p>",
        "name": "onZoomChange"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.topSites",
    "shortName": "topSites",
    "comment": "<p>Use the <code>chrome.topSites</code> API to access the top sites (i.e. most\nvisited sites) that are displayed on the new tab page. These do not include\nshortcuts customized by the user.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The title of the page</p>",
            "name": "title"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The most visited URL.</p>",
            "name": "url"
          }
        ],
        "comment": "<p>An object encapsulating a most visited URL, such as the default shortcuts on\nthe new tab page.</p>",
        "name": "MostVisitedURL"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "MostVisitedURL",
                  "referenceLink": "#type-MostVisitedURL"
                },
                "optional": false,
                "name": "data"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets a list of top sites.</p>",
        "name": "get"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "topSites\n"
    ]
  },
  {
    "name": "chrome.tts",
    "shortName": "tts",
    "comment": "<p>Use the <code>chrome.tts</code> API to play synthesized text-to-speech (TTS).\nSee also the related <a\nhref='http://developer.chrome.com/extensions/ttsEngine'>ttsEngine</a> API,\nwhich allows an extension to implement a speech engine.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The index of the current character in the utterance. For word events, the\nevent fires at the end of one word and before the beginning of the next. The\n<code>charIndex</code> represents a point in the text at the beginning of the\nnext word to be spoken.</p>",
            "optional": true,
            "name": "charIndex"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The error description, if the event type is <code>error</code>.</p>",
            "optional": true,
            "name": "errorMessage"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The length of the next part of the utterance. For example, in a\n<code>word</code> event, this is the length of the word which will be spoken\nnext. It will be set to -1 if not set by the speech engine.</p>",
            "optional": true,
            "name": "length"
          },
          {
            "type": "reference",
            "referenceType": "EventType",
            "referenceLink": "#type-EventType",
            "comment": "<p>The type can be <code>start</code> as soon as speech has started,\n<code>word</code> when a word boundary is reached, <code>sentence</code> when\na sentence boundary is reached, <code>marker</code> when an SSML mark element\nis reached, <code>end</code> when the end of the utterance is reached,\n<code>interrupted</code> when the utterance is stopped or interrupted before\nreaching the end, <code>cancelled</code> when it's removed from the queue\nbefore ever being synthesized, or <code>error</code> when any other error\noccurs. When pausing speech, a <code>pause</code> event is fired if a\nparticular utterance is paused in the middle, and <code>resume</code> if an\nutterance resumes speech. Note that pause and resume events may not fire if\nspeech is paused in-between utterances.</p>",
            "name": "type"
          }
        ],
        "comment": "<p>An event from the TTS engine to communicate the status of an utterance.</p>",
        "name": "TtsEvent"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The TTS event types that you are interested in listening to. If missing, all\nevent types may be sent.</p>",
            "optional": true,
            "name": "desiredEventTypes"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If true, enqueues this utterance if TTS is already in progress. If false (the\ndefault), interrupts any current speech and flushes the speech queue before\nspeaking this new utterance.</p>",
            "optional": true,
            "name": "enqueue"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The extension ID of the speech engine to use, if known.</p>",
            "optional": true,
            "name": "extensionId"
          },
          {
            "type": "reference",
            "referenceType": "VoiceGender",
            "referenceLink": "#type-VoiceGender",
            "comment": "<p>Gender of voice for synthesized speech.</p>",
            "deprecated": "Gender is deprecated and will be ignored.\n",
            "optional": true,
            "name": "gender"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The language to be used for synthesis, in the form\n<em>language</em>-<em>region</em>. Examples: 'en', 'en-US', 'en-GB', 'zh-CN'.</p>",
            "optional": true,
            "name": "lang"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "TtsEvent",
                "referenceLink": "#type-TtsEvent",
                "optional": false,
                "name": "event",
                "comment": "<p>The update event from the text-to-speech engine indicating the status of this utterance.</p>"
              }
            ],
            "comment": "<p>This function is called with events that occur in the process of speaking the\nutterance.</p>",
            "optional": true,
            "name": "onEvent"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Speaking pitch between 0 and 2 inclusive, with 0 being lowest and 2 being\nhighest. 1.0 corresponds to a voice's default pitch.</p>",
            "optional": true,
            "name": "pitch"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Speaking rate relative to the default rate for this voice. 1.0 is the default\nrate, normally around 180 to 220 words per minute. 2.0 is twice as fast, and\n0.5 is half as fast. Values below 0.1 or above 10.0 are strictly disallowed,\nbut many voices will constrain the minimum and maximum rates\nfurther&mdash;for example a particular voice may not actually speak faster\nthan 3 times normal even if you specify a value larger than 3.0.</p>",
            "optional": true,
            "name": "rate"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The TTS event types the voice must support.</p>",
            "optional": true,
            "name": "requiredEventTypes"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The name of the voice to use for synthesis. If empty, uses any available\nvoice.</p>",
            "optional": true,
            "name": "voiceName"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Speaking volume between 0 and 1 inclusive, with 0 being lowest and 1 being\nhighest, with a default of 1.0.</p>",
            "optional": true,
            "name": "volume"
          }
        ],
        "comment": "<p>The speech options for the TTS engine.</p>",
        "name": "TtsOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "EventType",
              "referenceLink": "#type-EventType"
            },
            "comment": "<p>All of the callback event types that this voice is capable of sending.</p>",
            "optional": true,
            "name": "eventTypes"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The ID of the extension providing this voice.</p>",
            "optional": true,
            "name": "extensionId"
          },
          {
            "type": "reference",
            "referenceType": "VoiceGender",
            "referenceLink": "#type-VoiceGender",
            "comment": "<p>This voice's gender.</p>",
            "deprecated": "Gender is deprecated and will be ignored.\n",
            "optional": true,
            "name": "gender"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The language that this voice supports, in the form\n<em>language</em>-<em>region</em>. Examples: 'en', 'en-US', 'en-GB', 'zh-CN'.</p>",
            "optional": true,
            "name": "lang"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If true, the synthesis engine is a remote network resource. It may be higher\nlatency and may incur bandwidth costs.</p>",
            "optional": true,
            "name": "remote"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The name of the voice.</p>",
            "optional": true,
            "name": "voiceName"
          }
        ],
        "comment": "<p>A description of a voice available for speech synthesis.</p>",
        "name": "TtsVoice"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"start\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"end\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"word\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"sentence\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"marker\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"interrupted\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"cancelled\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"error\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"pause\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"resume\""
          }
        ],
        "name": "EventType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"male\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"female\""
          }
        ],
        "name": "VoiceGender"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "TtsVoice",
                  "referenceLink": "#type-TtsVoice"
                },
                "optional": false,
                "name": "voices",
                "comment": "<p>Array of <a href=\"#type-TtsVoice\"><code>TtsVoice</code></a> objects representing the available voices for speech synthesis.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets an array of all available voices.</p>",
        "name": "getVoices"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "speaking",
                "comment": "<p>True if speaking, false otherwise.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Checks whether the engine is currently speaking. On Mac OS X, the result is\ntrue whenever the system speech engine is speaking, even if the speech wasn't\ninitiated by Chrome.</p>",
        "name": "isSpeaking"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Pauses speech synthesis, potentially in the middle of an utterance. A call to\nresume or stop will un-pause speech.</p>",
        "name": "pause"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>If speech was paused, resumes speaking where it left off.</p>",
        "name": "resume"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "utterance",
            "comment": "<p>The text to speak, either plain text or a complete, well-formed SSML document. Speech engines that do not support SSML will strip away the tags and speak the text. The maximum length of the text is 32,768 characters.</p>"
          },
          {
            "type": "reference",
            "referenceType": "TtsOptions",
            "referenceLink": "#type-TtsOptions",
            "optional": false,
            "name": "options",
            "comment": "<p>The speech options.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called right away, before speech finishes. Check <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> to make sure there were no errors. Use options.onEvent to get more detailed feedback.</p>"
          }
        ],
        "comment": "<p>Speaks text using a text-to-speech engine.</p>",
        "name": "speak"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Stops any current speech and flushes the queue of any pending utterances. In\naddition, if speech was paused, it will now be un-paused for the next call to\nspeak.</p>",
        "name": "stop"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "tts\n"
    ]
  },
  {
    "name": "chrome.ttsEngine",
    "shortName": "ttsEngine",
    "comment": "<p>Use the <code>chrome.ttsEngine</code> API to implement a text-to-speech(TTS)\nengine using an extension. If your extension registers using this API, it\nwill receive events containing an utterance to be spoken and other parameters\nwhen any extension or Chrome App uses the <a href=\"../tts/\">tts</a> API to\ngenerate speech. Your extension can then use any available web technology to\nsynthesize and output the speech, and send events back to the calling\nfunction to report the status.</p>",
    "types": [
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"male\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"female\""
          }
        ],
        "name": "VoiceGender"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "tts.TtsVoice",
              "referenceLink": "../tts/#type-TtsVoice"
            },
            "optional": false,
            "name": "voices",
            "comment": "<p>Array of <a href=\"../tts/#type-TtsVoice\"><code>tts.TtsVoice</code></a> objects representing the available voices for speech synthesis.</p>"
          }
        ],
        "comment": "<p>Called by an engine to update its list of voices. This list overrides any\nvoices declared in this extension's manifest.</p>",
        "name": "updateVoices"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Optional: if an engine supports the pause event, it should pause the\ncurrent utterance being spoken, if any, until it receives a resume event\nor stop event. Note that a stop event should also clear the paused state.</p>",
        "name": "onPause"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Optional: if an engine supports the pause event, it should also support\nthe resume event, to continue speaking the current utterance, if any.\nNote that a stop event should also clear the paused state.</p>",
        "name": "onResume"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "utterance",
                "comment": "<p>The text to speak, specified as either plain text or an SSML document. If your engine does not support SSML, you should strip out all XML markup and synthesize only the underlying text content. The value of this parameter is guaranteed to be no more than 32,768 characters. If this engine does not support speaking that many characters at a time, the utterance should be split into smaller chunks and queued internally without returning an error.</p>"
              },
              {
                "type": "object",
                "properties": [
                  {
                    "type": "reference",
                    "referenceType": "VoiceGender",
                    "referenceLink": "#type-VoiceGender",
                    "comment": "<p>Gender of voice for synthesized speech.</p>",
                    "deprecated": "Gender is deprecated and will be ignored.\n",
                    "optional": true,
                    "name": "gender"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The language to be used for synthesis, in the form\n<em>language</em>-<em>region</em>. Examples: 'en', 'en-US', 'en-GB', 'zh-CN'.</p>",
                    "optional": true,
                    "name": "lang"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>Speaking pitch between 0 and 2 inclusive, with 0 being lowest and 2 being\nhighest. 1.0 corresponds to this voice's default pitch.</p>",
                    "optional": true,
                    "name": "pitch"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>Speaking rate relative to the default rate for this voice. 1.0 is the default\nrate, normally around 180 to 220 words per minute. 2.0 is twice as fast, and\n0.5 is half as fast. This value is guaranteed to be between 0.1 and 10.0,\ninclusive. When a voice does not support this full range of rates, don't\nreturn an error. Instead, clip the rate to the range the voice supports.</p>",
                    "optional": true,
                    "name": "rate"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The name of the voice to use for synthesis.</p>",
                    "optional": true,
                    "name": "voiceName"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>Speaking volume between 0 and 1 inclusive, with 0 being lowest and 1 being\nhighest, with a default of 1.0.</p>",
                    "optional": true,
                    "name": "volume"
                  }
                ],
                "comment": "<p>Options specified to the tts.speak() method.</p>",
                "optional": false,
                "name": "options"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "tts.TtsEvent",
                    "referenceLink": "../tts/#type-TtsEvent",
                    "optional": false,
                    "name": "event"
                  }
                ],
                "optional": false,
                "name": "sendTtsEvent"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Called when the user makes a call to tts.speak() and one of the voices\nfrom this extension's manifest is the first to match the options object.</p>",
        "name": "onSpeak"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a call is made to tts.stop and this extension may be in the\nmiddle of speaking. If an extension receives a call to onStop and speech\nis already stopped, it should do nothing (not raise an error). If speech\nis in the paused state, this should cancel the paused state.</p>",
        "name": "onStop"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "ttsEngine\n"
    ]
  },
  {
    "name": "chrome.types",
    "shortName": "types",
    "comment": "<p>The <code>chrome.types</code> API contains type declarations for Chrome.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "events.Event",
            "referenceLink": "../events/#type-Event",
            "referenceTemplates": [
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "object",
                    "properties": [
                      {
                        "type": "primitive",
                        "primitiveType": "boolean",
                        "comment": "<p>Whether the value that has changed is specific to the incognito\nsession.<br/>This property will <em>only</em> be present if the user has\nenabled the extension in incognito mode.</p>",
                        "optional": true,
                        "name": "incognitoSpecific"
                      },
                      {
                        "type": "reference",
                        "referenceType": "LevelOfControl",
                        "referenceLink": "#type-LevelOfControl",
                        "comment": "<p>The level of control of the setting.</p>",
                        "name": "levelOfControl"
                      },
                      {
                        "type": "reference",
                        "referenceType": "T",
                        "comment": "<p>The value of the setting after the change.</p>",
                        "name": "value"
                      }
                    ],
                    "optional": false,
                    "name": "details"
                  }
                ],
                "name": "listener"
              }
            ],
            "comment": "<p>Fired after the setting changes.</p>",
            "name": "onChange"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "reference",
                    "referenceType": "ChromeSettingScope",
                    "referenceLink": "#type-ChromeSettingScope",
                    "comment": "<p>Where to clear the setting (default: regular).</p>",
                    "optional": true,
                    "name": "scope"
                  }
                ],
                "optional": false,
                "name": "details",
                "comment": "<p>Which setting to clear.</p>"
              },
              {
                "type": "function",
                "parameters": [],
                "optional": false,
                "name": "callback",
                "comment": "<p>Called at the completion of the clear operation.</p>"
              }
            ],
            "comment": "<p>Clears the setting, restoring any default value.</p>",
            "name": "clear"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>Whether to return the value that applies to the incognito session (default\nfalse).</p>",
                    "optional": true,
                    "name": "incognito"
                  }
                ],
                "optional": false,
                "name": "details",
                "comment": "<p>Which setting to consider.</p>"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "object",
                    "properties": [
                      {
                        "type": "primitive",
                        "primitiveType": "boolean",
                        "comment": "<p>Whether the effective value is specific to the incognito session.<br/>This\nproperty will <em>only</em> be present if the <var>incognito</var> property\nin the <var>details</var> parameter of <code>get()</code> was true.</p>",
                        "optional": true,
                        "name": "incognitoSpecific"
                      },
                      {
                        "type": "reference",
                        "referenceType": "LevelOfControl",
                        "referenceLink": "#type-LevelOfControl",
                        "comment": "<p>The level of control of the setting.</p>",
                        "name": "levelOfControl"
                      },
                      {
                        "type": "reference",
                        "referenceType": "T",
                        "comment": "<p>The value of the setting.</p>",
                        "name": "value"
                      }
                    ],
                    "optional": false,
                    "name": "details",
                    "comment": "<p>Details of the currently effective value.</p>"
                  }
                ],
                "optional": false,
                "name": "callback"
              }
            ],
            "comment": "<p>Gets the value of a setting.</p>",
            "name": "get"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "reference",
                    "referenceType": "ChromeSettingScope",
                    "referenceLink": "#type-ChromeSettingScope",
                    "comment": "<p>Where to set the setting (default: regular).</p>",
                    "optional": true,
                    "name": "scope"
                  },
                  {
                    "type": "reference",
                    "referenceType": "T",
                    "comment": "<p>The value of the setting. <br/>Note that every setting has a specific value\ntype, which is described together with the setting. An extension should\n<em>not</em> set a value of a different type.</p>",
                    "name": "value"
                  }
                ],
                "optional": false,
                "name": "details",
                "comment": "<p>Which setting to change.</p>"
              },
              {
                "type": "function",
                "parameters": [],
                "optional": false,
                "name": "callback",
                "comment": "<p>Called at the completion of the set operation.</p>"
              }
            ],
            "comment": "<p>Sets the value of a setting.</p>",
            "name": "set"
          }
        ],
        "comment": "<p>An interface that allows access to a Chrome browser setting. See <a href=\"../accessibilityFeatures/\"><code>accessibilityFeatures</code></a> for an example.</p>",
        "templates": [
          "T"
        ],
        "name": "ChromeSetting"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"regular\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"regular_only\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"incognito_persistent\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"incognito_session_only\""
          }
        ],
        "comment": "<p>The scope of the ChromeSetting. One of<ul><li><var>regular</var>: setting for\nthe regular profile (which is inherited by the incognito profile if not\noverridden elsewhere),</li><li><var>regular_only</var>: setting for the\nregular profile only (not inherited by the incognito\nprofile),</li><li><var>incognito_persistent</var>: setting for the incognito\nprofile that survives browser restarts (overrides regular\npreferences),</li><li><var>incognito_session_only</var>: setting for the\nincognito profile that can only be set during an incognito session and is\ndeleted when the incognito session ends (overrides regular and\nincognito_persistent preferences).</li></ul></p>",
        "name": "ChromeSettingScope"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"not_controllable\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"controlled_by_other_extensions\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"controllable_by_this_extension\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"controlled_by_this_extension\""
          }
        ],
        "comment": "<p>One of<ul><li><var>not_controllable</var>: cannot be controlled by any\nextension</li><li><var>controlled_by_other_extensions</var>: controlled by\nextensions with higher\nprecedence</li><li><var>controllable_by_this_extension</var>: can be\ncontrolled by this extension</li><li><var>controlled_by_this_extension</var>:\ncontrolled by this extension</li></ul></p>",
        "name": "LevelOfControl"
      }
    ],
    "properties": [],
    "methods": [],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts"
  },
  {
    "name": "chrome.usb",
    "shortName": "usb",
    "comment": "<p>Use the <code>chrome.usb</code> API to interact with connected USB\ndevices.\nThis API provides access to USB operations from within the context\nof an\napp. Using this API, apps can function as drivers for hardware devices.\nErrors generated by this API are reported by setting\n<a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a> and executing the function's regular callback. The\ncallback's regular parameters will be undefined in this case.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Is this the active configuration?</p>",
            "name": "active"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The configuration number.</p>",
            "name": "configurationValue"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Description of the configuration.</p>",
            "optional": true,
            "name": "description"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>Extra descriptor data associated with this configuration.</p>",
            "name": "extra_data"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "InterfaceDescriptor",
              "referenceLink": "#type-InterfaceDescriptor"
            },
            "comment": "<p>Available interfaces.</p>",
            "name": "interfaces"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The maximum power needed by this device in milliamps (mA).</p>",
            "name": "maxPower"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The device supports remote wakeup.</p>",
            "name": "remoteWakeup"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The device is self-powered.</p>",
            "name": "selfPowered"
          }
        ],
        "name": "ConfigDescriptor"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>An opaque handle representing this connection to the USB device and all\nassociated claimed interfaces and pending transfers. A new handle is created\neach time the device is opened. The connection handle is different from\n<a href=\"#type-Device-device\"><code>Device.device</code></a>.</p>",
            "name": "handle"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The product ID.</p>",
            "name": "productId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The device vendor ID.</p>",
            "name": "vendorId"
          }
        ],
        "name": "ConnectionHandle"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>The data to transmit (required only by output transfers).</p>",
            "optional": true,
            "name": "data"
          },
          {
            "type": "reference",
            "referenceType": "Direction",
            "referenceLink": "#type-Direction",
            "comment": "<p>The transfer direction (<code>\"in\"</code> or <code>\"out\"</code>).</p>",
            "name": "direction"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The <code>wIndex</code> field, see <i>Ibid</i>.</p>",
            "name": "index"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The maximum number of bytes to receive (required only by input transfers).</p>",
            "optional": true,
            "name": "length"
          },
          {
            "type": "reference",
            "referenceType": "Recipient",
            "referenceLink": "#type-Recipient",
            "comment": "<p>The transfer target. The target given by <code>index</code> must be claimed\nif <code>\"interface\"</code> or <code>\"endpoint\"</code>.</p>",
            "name": "recipient"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The <code>bRequest</code> field, see <i>Universal Serial Bus Specification\nRevision 1.1</i> &sect; 9.3.</p>",
            "name": "request"
          },
          {
            "type": "reference",
            "referenceType": "RequestType",
            "referenceLink": "#type-RequestType",
            "comment": "<p>The request type.</p>",
            "name": "requestType"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Request timeout (in milliseconds). The default value <code>0</code> indicates\nno timeout.</p>",
            "optional": true,
            "name": "timeout"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The <code>wValue</code> field, see <i>Ibid</i>.</p>",
            "name": "value"
          }
        ],
        "name": "ControlTransferInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>An opaque ID for the USB device. It remains unchanged until the device is\nunplugged.</p>",
            "name": "device"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The iManufacturer string read from the device, if available.</p>",
            "name": "manufacturerName"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The product ID.</p>",
            "name": "productId"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The iProduct string read from the device, if available.</p>",
            "name": "productName"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The iSerialNumber string read from the device, if available.</p>",
            "name": "serialNumber"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The device vendor ID.</p>",
            "name": "vendorId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The device version (bcdDevice field).</p>",
            "name": "version"
          }
        ],
        "name": "Device"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>USB interface class, matches any interface on the device.</p>",
            "optional": true,
            "name": "interfaceClass"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>USB interface protocol, checked only if the interface sub-class matches.</p>",
            "optional": true,
            "name": "interfaceProtocol"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>USB interface sub-class, checked only if the interface class matches.</p>",
            "optional": true,
            "name": "interfaceSubclass"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Device product ID, checked only if the vendor ID matches.</p>",
            "optional": true,
            "name": "productId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Device vendor ID.</p>",
            "optional": true,
            "name": "vendorId"
          }
        ],
        "name": "DeviceFilter"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "DeviceFilter",
              "referenceLink": "#type-DeviceFilter"
            },
            "comment": "<p>Filter the list of devices presented to the user. If multiple filters are\nprovided devices matching any filter will be displayed.</p>",
            "optional": true,
            "name": "filters"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Allow the user to select multiple devices.</p>",
            "optional": true,
            "name": "multiple"
          }
        ],
        "name": "DevicePromptOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Endpoint address.</p>",
            "name": "address"
          },
          {
            "type": "reference",
            "referenceType": "Direction",
            "referenceLink": "#type-Direction",
            "comment": "<p>Transfer direction.</p>",
            "name": "direction"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>Extra descriptor data associated with this endpoint.</p>",
            "name": "extra_data"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Maximum packet size.</p>",
            "name": "maximumPacketSize"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Polling interval (interrupt and isochronous only).</p>",
            "optional": true,
            "name": "pollingInterval"
          },
          {
            "type": "reference",
            "referenceType": "SynchronizationType",
            "referenceLink": "#type-SynchronizationType",
            "comment": "<p>Transfer synchronization mode (isochronous only).</p>",
            "optional": true,
            "name": "synchronization"
          },
          {
            "type": "reference",
            "referenceType": "TransferType",
            "referenceLink": "#type-TransferType",
            "comment": "<p>Transfer type.</p>",
            "name": "type"
          },
          {
            "type": "reference",
            "referenceType": "UsageType",
            "referenceLink": "#type-UsageType",
            "comment": "<p>Endpoint usage hint.</p>",
            "optional": true,
            "name": "usage"
          }
        ],
        "name": "EndpointDescriptor"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The interface ID to request access to. Only available on Chrome OS. It has no\neffect on other platforms.</p>",
            "optional": true,
            "name": "interfaceId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The product ID.</p>",
            "name": "productId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The device vendor ID.</p>",
            "name": "vendorId"
          }
        ],
        "name": "EnumerateDevicesAndRequestAccessOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "DeviceFilter",
              "referenceLink": "#type-DeviceFilter"
            },
            "comment": "<p>A device matching any given filter will be returned. An empty filter list\nwill return all devices the app has permission for.</p>",
            "optional": true,
            "name": "filters"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "deprecated": "Equivalent to setting <a href=\"#type-DeviceFilter-productId\"><code>DeviceFilter.productId</code></a>.\n",
            "optional": true,
            "name": "productId"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "deprecated": "Equivalent to setting <a href=\"#type-DeviceFilter-vendorId\"><code>DeviceFilter.vendorId</code></a>.\n",
            "optional": true,
            "name": "vendorId"
          }
        ],
        "name": "EnumerateDevicesOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>The data to transmit (required only by output transfers).</p>",
            "optional": true,
            "name": "data"
          },
          {
            "type": "reference",
            "referenceType": "Direction",
            "referenceLink": "#type-Direction",
            "comment": "<p>The transfer direction (<code>\"in\"</code> or <code>\"out\"</code>).</p>",
            "name": "direction"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The target endpoint address. The interface containing this endpoint must be\nclaimed.</p>",
            "name": "endpoint"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The maximum number of bytes to receive (required only by input transfers).</p>",
            "optional": true,
            "name": "length"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Request timeout (in milliseconds). The default value <code>0</code> indicates\nno timeout.</p>",
            "optional": true,
            "name": "timeout"
          }
        ],
        "name": "GenericTransferInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The interface alternate setting number (defaults to <code>0</code).</p>",
            "name": "alternateSetting"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Description of the interface.</p>",
            "optional": true,
            "name": "description"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "EndpointDescriptor",
              "referenceLink": "#type-EndpointDescriptor"
            },
            "comment": "<p>Available endpoints.</p>",
            "name": "endpoints"
          },
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>Extra descriptor data associated with this interface.</p>",
            "name": "extra_data"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The USB interface class.</p>",
            "name": "interfaceClass"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The interface number.</p>",
            "name": "interfaceNumber"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The USB interface protocol.</p>",
            "name": "interfaceProtocol"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The USB interface sub-class.</p>",
            "name": "interfaceSubclass"
          }
        ],
        "name": "InterfaceDescriptor"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The length of each of the packets in this transfer.</p>",
            "name": "packetLength"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The total number of packets in this transfer.</p>",
            "name": "packets"
          },
          {
            "type": "reference",
            "referenceType": "GenericTransferInfo",
            "referenceLink": "#type-GenericTransferInfo",
            "comment": "<p>Transfer parameters. The transfer length or data buffer specified in this\nparameter block is split along <code>packetLength</code> boundaries to form\nthe individual packets of the transfer.</p>",
            "name": "transferInfo"
          }
        ],
        "name": "IsochronousTransferInfo"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "comment": "<p>The data returned by an input transfer. <code>undefined</code> for output\ntransfers.</p>",
            "optional": true,
            "name": "data"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>A value of <code>0</code> indicates that the transfer was a success. Other\nvalues indicate failure.</p>",
            "optional": true,
            "name": "resultCode"
          }
        ],
        "name": "TransferResultInfo"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"in\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"out\""
          }
        ],
        "comment": "<p>Direction, Recipient, RequestType, and TransferType all map to their\nnamesakes within the USB specification.</p>",
        "name": "Direction"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"device\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"interface\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"endpoint\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"other\""
          }
        ],
        "name": "Recipient"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"standard\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"class\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"vendor\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"reserved\""
          }
        ],
        "name": "RequestType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"asynchronous\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"adaptive\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"synchronous\""
          }
        ],
        "comment": "<p>For interrupt and isochronous modes, SynchronizationType and UsageType map to\ntheir namesakes within the USB specification.</p>",
        "name": "SynchronizationType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"control\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"interrupt\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"isochronous\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"bulk\""
          }
        ],
        "name": "TransferType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"data\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"feedback\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"explicitFeedback\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"periodic\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"notification\""
          }
        ],
        "name": "UsageType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ConnectionHandle",
            "referenceLink": "#type-ConnectionHandle",
            "optional": false,
            "name": "handle",
            "comment": "<p>An open connection to the device.</p>"
          },
          {
            "type": "reference",
            "referenceType": "GenericTransferInfo",
            "referenceLink": "#type-GenericTransferInfo",
            "optional": false,
            "name": "transferInfo",
            "comment": "<p>The transfer parameters.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "TransferResultInfo",
                "referenceLink": "#type-TransferResultInfo",
                "optional": false,
                "name": "info"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Performs a bulk transfer on the specified device.</p>",
        "name": "bulkTransfer"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ConnectionHandle",
            "referenceLink": "#type-ConnectionHandle",
            "optional": false,
            "name": "handle",
            "comment": "<p>An open connection to the device.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "interfaceNumber",
            "comment": "<p>The interface to be claimed.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Claims an interface on a USB device. Before data can be transfered to an\ninterface or associated endpoints the interface must be claimed. Only one\nconnection handle can claim an interface at any given time. If the interface\nis already claimed, this call will fail.</p><p><a href=\"#method-releaseInterface\"><code>releaseInterface</code></a>\nshould be called when the interface is no longer needed.</p>",
        "name": "claimInterface"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ConnectionHandle",
            "referenceLink": "#type-ConnectionHandle",
            "optional": false,
            "name": "handle",
            "comment": "<p>The <a href=\"#type-ConnectionHandle\"><code>ConnectionHandle</code></a> to close.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Closes a connection handle. Invoking operations on a handle after it has been\nclosed is a safe operation but causes no action to be taken.</p>",
        "name": "closeDevice"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ConnectionHandle",
            "referenceLink": "#type-ConnectionHandle",
            "optional": false,
            "name": "handle",
            "comment": "<p>An open connection to the device.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ControlTransferInfo",
            "referenceLink": "#type-ControlTransferInfo",
            "optional": false,
            "name": "transferInfo"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "TransferResultInfo",
                "referenceLink": "#type-TransferResultInfo",
                "optional": false,
                "name": "info"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Performs a control transfer on the specified device.</p><p>Control\ntransfers refer to either the device, an interface or an endpoint. Transfers\nto an interface or endpoint require the interface to be claimed.</p>",
        "name": "controlTransfer"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "EnumerateDevicesAndRequestAccessOptions",
            "referenceLink": "#type-EnumerateDevicesAndRequestAccessOptions",
            "optional": false,
            "name": "options",
            "comment": "<p>The properties to search for on target devices.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "ConnectionHandle",
                  "referenceLink": "#type-ConnectionHandle"
                },
                "optional": false,
                "name": "handles"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Finds USB devices specified by the vendor, product and (optionally)\ninterface IDs and if permissions allow opens them for use.</p><p>If the\naccess request is rejected or the device fails to be opened a connection\nhandle will not be created or returned.</p><p>Calling this method is\nequivalent to calling <a href=\"#method-getDevices\"><code>getDevices</code></a> followed by <a href=\"#method-openDevice\"><code>openDevice</code></a> for\neach device.</p>",
        "name": "findDevices"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ConnectionHandle",
            "referenceLink": "#type-ConnectionHandle",
            "optional": false,
            "name": "handle",
            "comment": "<p>An open connection to the device.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ConfigDescriptor",
                "referenceLink": "#type-ConfigDescriptor",
                "optional": false,
                "name": "config"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the configuration descriptor for the currently selected configuration.</p>",
        "name": "getConfiguration"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Device",
            "referenceLink": "#type-Device",
            "optional": false,
            "name": "device",
            "comment": "<p>The <a href=\"#type-Device\"><code>Device</code></a> to fetch descriptors from.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "ConfigDescriptor",
                  "referenceLink": "#type-ConfigDescriptor"
                },
                "optional": false,
                "name": "configs"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Returns the full set of device configuration descriptors.</p>",
        "name": "getConfigurations"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "EnumerateDevicesOptions",
            "referenceLink": "#type-EnumerateDevicesOptions",
            "optional": false,
            "name": "options",
            "comment": "<p>The properties to search for on target devices.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Device",
                  "referenceLink": "#type-Device"
                },
                "optional": false,
                "name": "devices"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Enumerates connected USB devices.</p>",
        "name": "getDevices"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "DevicePromptOptions",
            "referenceLink": "#type-DevicePromptOptions",
            "optional": false,
            "name": "options",
            "comment": "<p>Configuration of the device picker dialog box.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Device",
                  "referenceLink": "#type-Device"
                },
                "optional": false,
                "name": "devices"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Invoked with a list of chosen <a href=\"#type-Device\"><code>Device</code></a>s.</p>"
          }
        ],
        "comment": "<p>Presents a device picker to the user and returns the <a href=\"#type-Device\"><code>Device</code></a>s\nselected. If the user cancels the picker devices will be empty. A user\ngesture is required for the dialog to display. Without a user gesture, the\ncallback will run as though the user cancelled.</p>",
        "name": "getUserSelectedDevices"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ConnectionHandle",
            "referenceLink": "#type-ConnectionHandle",
            "optional": false,
            "name": "handle",
            "comment": "<p>An open connection to the device.</p>"
          },
          {
            "type": "reference",
            "referenceType": "GenericTransferInfo",
            "referenceLink": "#type-GenericTransferInfo",
            "optional": false,
            "name": "transferInfo",
            "comment": "<p>The transfer parameters.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "TransferResultInfo",
                "referenceLink": "#type-TransferResultInfo",
                "optional": false,
                "name": "info"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Performs an interrupt transfer on the specified device.</p>",
        "name": "interruptTransfer"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ConnectionHandle",
            "referenceLink": "#type-ConnectionHandle",
            "optional": false,
            "name": "handle",
            "comment": "<p>An open connection to the device.</p>"
          },
          {
            "type": "reference",
            "referenceType": "IsochronousTransferInfo",
            "referenceLink": "#type-IsochronousTransferInfo",
            "optional": false,
            "name": "transferInfo"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "TransferResultInfo",
                "referenceLink": "#type-TransferResultInfo",
                "optional": false,
                "name": "info"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Performs an isochronous transfer on the specific device.</p>",
        "name": "isochronousTransfer"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ConnectionHandle",
            "referenceLink": "#type-ConnectionHandle",
            "optional": false,
            "name": "handle",
            "comment": "<p>An open connection to the device.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "InterfaceDescriptor",
                  "referenceLink": "#type-InterfaceDescriptor"
                },
                "optional": false,
                "name": "descriptors"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Lists all interfaces on a USB device.</p>",
        "name": "listInterfaces"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Device",
            "referenceLink": "#type-Device",
            "optional": false,
            "name": "device",
            "comment": "<p>The <a href=\"#type-Device\"><code>Device</code></a> to open.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ConnectionHandle",
                "referenceLink": "#type-ConnectionHandle",
                "optional": false,
                "name": "handle"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Opens a USB device returned by <a href=\"#method-getDevices\"><code>getDevices</code></a>.</p>",
        "name": "openDevice"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ConnectionHandle",
            "referenceLink": "#type-ConnectionHandle",
            "optional": false,
            "name": "handle",
            "comment": "<p>An open connection to the device.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "interfaceNumber",
            "comment": "<p>The interface to be released.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Releases a claimed interface.</p>",
        "name": "releaseInterface"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Device",
            "referenceLink": "#type-Device",
            "optional": false,
            "name": "device",
            "comment": "<p>The <a href=\"#type-Device\"><code>Device</code></a> to request access to.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "interfaceId",
            "comment": "<p>The particular interface requested.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "success"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Requests access from the permission broker to a device claimed by Chrome OS\nif the given interface on the device is not claimed.</p>",
        "deprecated": "This function was Chrome OS specific and calling it on other\nplatforms would fail. This operation is now implicitly performed as part of\n<a href=\"#method-openDevice\"><code>openDevice</code></a> and this function will return <code>true</code> on all\nplatforms.\n",
        "name": "requestAccess"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ConnectionHandle",
            "referenceLink": "#type-ConnectionHandle",
            "optional": false,
            "name": "handle",
            "comment": "<p>A connection handle to reset.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "success"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Tries to reset the USB device. If the reset fails, the given connection\nhandle will be closed and the  USB device will appear to be disconnected then\nreconnected.  In this case <a href=\"#method-getDevices\"><code>getDevices</code></a> or <a href=\"#method-findDevices\"><code>findDevices</code></a> must be\ncalled again to acquire the device.</p>",
        "name": "resetDevice"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ConnectionHandle",
            "referenceLink": "#type-ConnectionHandle",
            "optional": false,
            "name": "handle",
            "comment": "<p>An open connection to the device.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "configurationValue"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Select a device configuration.</p><p>This function effectively resets the\ndevice by selecting one of the device's available configurations. Only\nconfiguration values greater than <code>0</code> are valid however some buggy\ndevices have a working configuration <code>0</code> and so this value is\nallowed.</p>",
        "name": "setConfiguration"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ConnectionHandle",
            "referenceLink": "#type-ConnectionHandle",
            "optional": false,
            "name": "handle",
            "comment": "<p>An open connection to the device where this interface has been     claimed.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "interfaceNumber",
            "comment": "<p>The interface to configure.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "alternateSetting",
            "comment": "<p>The alternate setting to configure.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Selects an alternate setting on a previously claimed interface.</p>",
        "name": "setInterfaceAlternateSetting"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Device",
                "referenceLink": "#type-Device",
                "optional": false,
                "name": "device"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event generated when a device is added to the system. Events are only\nbroadcast to apps and extensions that have permission to access the\ndevice. Permission may have been granted at install time, when the user\naccepted an optional permission (see <a href=\"../permissions/#method-request\"><code>permissions.request</code></a>), or\nthrough <a href=\"#method-getUserSelectedDevices\"><code>getUserSelectedDevices</code></a>.</p>",
        "name": "onDeviceAdded"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Device",
                "referenceLink": "#type-Device",
                "optional": false,
                "name": "device"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Event generated when a device is removed from the system. See <a href=\"#event-onDeviceAdded\"><code>onDeviceAdded</code></a> for which events are delivered.</p>",
        "name": "onDeviceRemoved"
      }
    ],
    "channel": "stable",
    "source": "platform_app.d.ts",
    "permissions": [
      "usb\n"
    ]
  },
  {
    "name": "chrome.virtualKeyboard",
    "shortName": "virtualKeyboard",
    "comment": "<p>The <code>chrome.virtualKeyboard</code> API is a kiosk only API used to\nconfigure virtual keyboard layout and behavior in kiosk sessions.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether virtual keyboards can provide auto-complete.</p>",
            "optional": true,
            "name": "autoCompleteEnabled"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether virtual keyboards can provide auto-correct.</p>",
            "optional": true,
            "name": "autoCorrectEnabled"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether virtual keyboards can provide input via handwriting recognition.</p>",
            "optional": true,
            "name": "handwritingEnabled"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether virtual keyboards can provide spell-check.</p>",
            "optional": true,
            "name": "spellCheckEnabled"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether virtual keyboards can provide voice input.</p>",
            "optional": true,
            "name": "voiceInputEnabled"
          }
        ],
        "name": "FeatureRestrictions"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "FeatureRestrictions",
            "referenceLink": "#type-FeatureRestrictions",
            "optional": false,
            "name": "restrictions",
            "comment": "<p>the preferences to enabled/disabled virtual keyboard features.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "FeatureRestrictions",
                "referenceLink": "#type-FeatureRestrictions",
                "optional": false,
                "name": "update"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Invoked with the values which were updated.</p>"
          }
        ],
        "comment": "<p>Sets restrictions on features provided by the virtual keyboard.</p>",
        "name": "restrictFeatures"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "platform_app.d.ts",
    "permissions": [
      "virtualKeyboard\n"
    ],
    "platforms": [
      "chromeos"
    ]
  },
  {
    "name": "chrome.vpnProvider",
    "shortName": "vpnProvider",
    "comment": "<p>Use the <code>chrome.vpnProvider</code> API to implement a VPN\nclient.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>IP address for the VPN interface in CIDR notation. IPv4 is currently the only\nsupported mode.</p>",
            "name": "address"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Broadcast address for the VPN interface. (default: deduced from IP address\nand mask)</p>",
            "optional": true,
            "name": "broadcastAddress"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>A list of IPs for the DNS servers.</p>",
            "name": "dnsServers"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>A list of search domains. (default: no search domain)</p>",
            "optional": true,
            "name": "domainSearch"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Exclude network traffic to the list of IP blocks in CIDR notation from the\ntunnel. This can be used to bypass traffic to and from the VPN server. When\nmany rules match a destination, the rule with the longest matching prefix\nwins. Entries that correspond to the same CIDR block are treated as\nduplicates. Such duplicates in the collated (exclusionList + inclusionList)\nlist are eliminated and the exact duplicate entry that will be eliminated is\nundefined.</p>",
            "name": "exclusionList"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Include network traffic to the list of IP blocks in CIDR notation to the\ntunnel. This parameter can be used to set up a split tunnel. By default no\ntraffic is directed to the tunnel. Adding the entry \"0.0.0.0/0\" to this list\ngets all the user traffic redirected to the tunnel. When many rules match a\ndestination, the rule with the longest matching prefix wins. Entries that\ncorrespond to the same CIDR block are treated as duplicates. Such duplicates\nin the collated (exclusionList + inclusionList) list are eliminated and the\nexact duplicate entry that will be eliminated is undefined.</p>",
            "name": "inclusionList"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>MTU setting for the VPN interface. (default: 1500 bytes)</p>",
            "optional": true,
            "name": "mtu"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Whether or not the VPN extension implements auto-reconnection.</p><p>If\ntrue, the <code>linkDown</code>, <code>linkUp</code>,\n<code>linkChanged</code>, <code>suspend</code>, and <code>resume</code>\nplatform messages will be used to signal the respective events. If false, the\nsystem will forcibly disconnect the VPN if the network topology changes, and\nthe user will need to reconnect manually. (default: false)</p><p>This\nproperty is new in Chrome 51; it will generate an exception in earlier\nversions. try/catch can be used to conditionally enable the feature based on\nbrowser support.</p>",
            "optional": true,
            "name": "reconnect"
          }
        ],
        "name": "Parameters"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"connected\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"disconnected\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"error\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"linkDown\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"linkUp\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"linkChanged\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"suspend\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"resume\""
          }
        ],
        "comment": "<p>The enum is used by the platform to notify the client of the VPN session\nstatus.</p>",
        "name": "PlatformMessage"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"showAddDialog\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"showConfigureDialog\""
          }
        ],
        "comment": "<p>The enum is used by the platform to indicate the event that triggered\n<code>onUIEvent</code>.</p>",
        "name": "UIEvent"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"connected\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"failure\""
          }
        ],
        "comment": "<p>The enum is used by the VPN client to inform the platform of its current\nstate. This helps provide meaningful messages to the user.</p>",
        "name": "VpnConnectionState"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "name",
            "comment": "<p>The name of the VPN configuration.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "id",
                "comment": "<p>A unique ID for the created configuration, or <code>undefined</code> on failure.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the configuration is created or if there is an error.</p>"
          }
        ],
        "comment": "<p>Creates a new VPN configuration that persists across multiple login sessions\nof the user.</p>",
        "name": "createConfig"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "id",
            "comment": "<p>ID of the VPN configuration to destroy.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the configuration is destroyed or if there is an error.</p>"
          }
        ],
        "comment": "<p>Destroys a VPN configuration created by the extension.</p>",
        "name": "destroyConfig"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "VpnConnectionState",
            "referenceLink": "#type-VpnConnectionState",
            "optional": false,
            "name": "state",
            "comment": "<p>The VPN session state of the VPN client.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the notification is complete or if there is an error.</p>"
          }
        ],
        "comment": "<p>Notifies the VPN session state to the platform. This will succeed only when\nthe VPN session is owned by the extension.</p>",
        "name": "notifyConnectionStateChanged"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ArrayBuffer",
            "optional": false,
            "name": "data",
            "comment": "<p>The IP packet to be sent to the platform.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the packet is sent or if there is an error.</p>"
          }
        ],
        "comment": "<p>Sends an IP packet through the tunnel created for the VPN session. This will\nsucceed only when the VPN session is owned by the extension.</p>",
        "name": "sendPacket"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "Parameters",
            "referenceLink": "#type-Parameters",
            "optional": false,
            "name": "parameters",
            "comment": "<p>The parameters for the VPN session.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called when the parameters are set or if there is an error.</p>"
          }
        ],
        "comment": "<p>Sets the parameters for the VPN session. This should be called immediately\nafter <code>\"connected\"</code> is received from the platform. This will\nsucceed only when the VPN session is owned by the extension.</p>",
        "name": "setParameters"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "id",
                "comment": "<p>ID of the configuration created.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "name",
                "comment": "<p>Name of the configuration created.</p>"
              },
              {
                "type": "object",
                "properties": [],
                "comment": "<p>Configuration data provided by the administrator.</p>",
                "optional": false,
                "name": "data"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Triggered when a configuration is created by the platform for the\nextension.</p>",
        "name": "onConfigCreated"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "id",
                "comment": "<p>ID of the removed configuration.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Triggered when a configuration created by the extension is removed by the\nplatform.</p>",
        "name": "onConfigRemoved"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ArrayBuffer",
                "optional": false,
                "name": "data",
                "comment": "<p>The IP packet received from the platform.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Triggered when an IP packet is received via the tunnel for the VPN\nsession owned by the extension.</p>",
        "name": "onPacketReceived"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "id",
                "comment": "<p>ID of the configuration the message is intended for.</p>"
              },
              {
                "type": "reference",
                "referenceType": "PlatformMessage",
                "referenceLink": "#type-PlatformMessage",
                "optional": false,
                "name": "message",
                "comment": "<p>The message received from the platform.  Note that new message types may be added in future Chrome versions to support new features.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "error",
                "comment": "<p>Error message when there is an error.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Triggered when a message is received from the platform for a VPN\nconfiguration owned by the extension.</p>",
        "name": "onPlatformMessage"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "UIEvent",
                "referenceLink": "#type-UIEvent",
                "optional": false,
                "name": "event",
                "comment": "<p>The UI event that is triggered.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "id",
                "comment": "<p>ID of the configuration for which the UI event was triggered.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Triggered when there is a UI event for the extension. UI events are\nsignals from the platform that indicate to the app that a UI dialog needs\nto be shown to the user.</p>",
        "name": "onUIEvent"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "vpnProvider\n"
    ],
    "platforms": [
      "chromeos"
    ]
  },
  {
    "name": "chrome.wallpaper",
    "shortName": "wallpaper",
    "comment": "<p>Use the <code>chrome.wallpaper</code> API to change the ChromeOS wallpaper.</p>",
    "types": [
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"STRETCH\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"CENTER\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"CENTER_CROPPED\""
          }
        ],
        "comment": "<p>The supported wallpaper layouts.</p>",
        "name": "WallpaperLayout"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "reference",
                "referenceType": "ArrayBuffer",
                "comment": "<p>The jpeg or png encoded wallpaper image as an ArrayBuffer.</p>",
                "optional": true,
                "name": "data"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The file name of the saved wallpaper.</p>",
                "name": "filename"
              },
              {
                "type": "reference",
                "referenceType": "WallpaperLayout",
                "referenceLink": "#type-WallpaperLayout",
                "comment": "<p>The supported wallpaper layouts.</p>",
                "name": "layout"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>True if a 128x60 thumbnail should be generated. Layout and ratio are not\nsupported yet.</p>",
                "optional": true,
                "name": "thumbnail"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "comment": "<p>The URL of the wallpaper to be set (can be relative).</p>",
                "optional": true,
                "name": "url"
              }
            ],
            "optional": false,
            "name": "details"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ArrayBuffer",
                "optional": false,
                "name": "thumbnail",
                "comment": "<p>The jpeg encoded wallpaper thumbnail. It is generated by resizing the wallpaper to 128x60.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Sets wallpaper to the image at <em>url</em> or <em>wallpaperData</em> with\nthe specified <em>layout</em></p>",
        "name": "setWallpaper"
      }
    ],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "wallpaper\n"
    ],
    "platforms": [
      "chromeos"
    ]
  },
  {
    "name": "chrome.webNavigation",
    "shortName": "webNavigation",
    "comment": "<p>Use the <code>chrome.webNavigation</code> API to receive notifications about\nthe status of navigation requests in-flight.</p>",
    "types": [
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"client_redirect\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"server_redirect\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"forward_back\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"from_address_bar\""
          }
        ],
        "name": "TransitionQualifier"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"link\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"typed\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"auto_bookmark\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"auto_subframe\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"manual_subframe\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"generated\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"start_page\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"form_submit\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"reload\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"keyword\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"keyword_generated\""
          }
        ],
        "comment": "<p>Cause of the navigation. The same transition types as defined in the history\nAPI are used. These are the same transition types as defined in the <a\nhref=\"../history/#transition_types\">history API</a> except with\n<code>\"start_page\"</code> in place of <code>\"auto_toplevel\"</code> (for\nbackwards compatibility).</p>",
        "name": "TransitionType"
      }
    ],
    "properties": [],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The ID of the tab.</p>",
                "name": "tabId"
              }
            ],
            "optional": false,
            "name": "details",
            "comment": "<p>Information about the tab to retrieve all frames from.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "object",
                  "properties": [
                    {
                      "type": "primitive",
                      "primitiveType": "boolean",
                      "comment": "<p>True if the last navigation in this frame was interrupted by an error, i.e.\nthe onErrorOccurred event fired.</p>",
                      "name": "errorOccurred"
                    },
                    {
                      "type": "primitive",
                      "primitiveType": "number",
                      "comment": "<p>The ID of the frame. 0 indicates that this is the main frame; a positive\nvalue indicates the ID of a subframe.</p>",
                      "name": "frameId"
                    },
                    {
                      "type": "primitive",
                      "primitiveType": "number",
                      "comment": "<p>The ID of the parent frame, or <code>-1</code> if this is the main frame.</p>",
                      "name": "parentFrameId"
                    },
                    {
                      "type": "primitive",
                      "primitiveType": "number",
                      "comment": "<p>The ID of the process that runs the renderer for this frame.</p>",
                      "name": "processId"
                    },
                    {
                      "type": "primitive",
                      "primitiveType": "string",
                      "comment": "<p>The URL currently associated with this frame.</p>",
                      "name": "url"
                    }
                  ]
                },
                "optional": false,
                "name": "details",
                "comment": "<p>A list of frames in the given tab, null if the specified tab ID is invalid.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves information about all frames of a given tab.</p>",
        "name": "getAllFrames"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The ID of the frame in the given tab.</p>",
                "name": "frameId"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The ID of the process that runs the renderer for this tab.</p>",
                "deprecated": "Frames are now uniquely identified by their tab ID and frame ID; the process ID is no longer needed and therefore ignored.\n",
                "optional": true,
                "name": "processId"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The ID of the tab in which the frame is.</p>",
                "name": "tabId"
              }
            ],
            "optional": false,
            "name": "details",
            "comment": "<p>Information about the frame to retrieve information about.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>True if the last navigation in this frame was interrupted by an error, i.e.\nthe onErrorOccurred event fired.</p>",
                    "name": "errorOccurred"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the parent frame, or <code>-1</code> if this is the main frame.</p>",
                    "name": "parentFrameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The URL currently associated with this frame, if the frame identified by the\nframeId existed at one point in the given tab. The fact that an URL is\nassociated with a given frameId does not imply that the corresponding frame\nstill exists.</p>",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details",
                "comment": "<p>Information about the requested frame, null if the specified frame ID and/or tab ID are invalid.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Retrieves information about the given frame. A frame refers to an\n&lt;iframe&gt; or a &lt;frame&gt; of a web page and is identified by a tab ID\nand a frame ID.</p>",
        "name": "getFrame"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>0 indicates the navigation happens in the tab content window; a positive\nvalue indicates navigation in a subframe. Frame IDs are unique for a given\ntab and process.</p>",
                    "name": "frameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the parent frame, or <code>-1</code> if this is the main frame.</p>",
                    "name": "parentFrameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The value of -1.</p>",
                    "deprecated": "The processId is no longer set for this event, since the process which will render the resulting document is not known until onCommit.\n",
                    "name": "processId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the navigation is about to occur.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when the browser was about to start the navigation, in milliseconds\nsince the epoch.</p>",
                    "name": "timeStamp"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a navigation is about to occur.</p>",
        "name": "onBeforeNavigate"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>0 indicates the navigation happens in the tab content window; a positive\nvalue indicates navigation in a subframe. Frame IDs are unique within a tab.</p>",
                    "name": "frameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the parent frame, or <code>-1</code> if this is the main frame.</p>",
                    "name": "parentFrameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the process that runs the renderer for this frame.</p>",
                    "name": "processId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the navigation occurs.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when the navigation was committed, in milliseconds since the epoch.</p>",
                    "name": "timeStamp"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "referenceType": "TransitionQualifier",
                      "referenceLink": "#type-TransitionQualifier"
                    },
                    "comment": "<p>A list of transition qualifiers.</p>",
                    "name": "transitionQualifiers"
                  },
                  {
                    "type": "reference",
                    "referenceType": "TransitionType",
                    "referenceLink": "#type-TransitionType",
                    "comment": "<p>Cause of the navigation.</p>",
                    "name": "transitionType"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a navigation is committed. The document (and the resources it\nrefers to, such as images and subframes) might still be downloading, but\nat least part of the document has been received from the server and the\nbrowser has decided to switch to the new document.</p>",
        "name": "onCommitted"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>0 indicates the navigation happens in the tab content window; a positive\nvalue indicates navigation in a subframe. Frame IDs are unique within a tab.</p>",
                    "name": "frameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the parent frame, or <code>-1</code> if this is the main frame.</p>",
                    "name": "parentFrameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the process that runs the renderer for this frame.</p>",
                    "name": "processId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the navigation occurs.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when the document finished loading, in milliseconds since the epoch.</p>",
                    "name": "timeStamp"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a document, including the resources it refers to, is\ncompletely loaded and initialized.</p>",
        "name": "onCompleted"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the frame with sourceTabId in which the navigation is triggered. 0\nindicates the main frame.</p>",
                    "name": "sourceFrameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the process that runs the renderer for the source frame.</p>",
                    "name": "sourceProcessId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the navigation is triggered.</p>",
                    "name": "sourceTabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the url is opened</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when the browser was about to create a new view, in milliseconds\nsince the epoch.</p>",
                    "name": "timeStamp"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The URL to be opened in the new window.</p>",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a new window, or a new tab in an existing window, is created\nto host a navigation.</p>",
        "name": "onCreatedNavigationTarget"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>0 indicates the navigation happens in the tab content window; a positive\nvalue indicates navigation in a subframe. Frame IDs are unique within a tab.</p>",
                    "name": "frameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the parent frame, or <code>-1</code> if this is the main frame.</p>",
                    "name": "parentFrameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the process that runs the renderer for this frame.</p>",
                    "name": "processId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the navigation occurs.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when the page's DOM was fully constructed, in milliseconds since the\nepoch.</p>",
                    "name": "timeStamp"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the page's DOM is fully constructed, but the referenced\nresources may not finish loading.</p>",
        "name": "onDOMContentLoaded"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The error description.</p>",
                    "name": "error"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>0 indicates the navigation happens in the tab content window; a positive\nvalue indicates navigation in a subframe. Frame IDs are unique within a tab.</p>",
                    "name": "frameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the parent frame, or <code>-1</code> if this is the main frame.</p>",
                    "name": "parentFrameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The value of -1.</p>",
                    "deprecated": "The processId is no longer set for this event.\n",
                    "name": "processId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the navigation occurs.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when the error occurred, in milliseconds since the epoch.</p>",
                    "name": "timeStamp"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when an error occurs and the navigation is aborted. This can happen\nif either a network error occurred, or the user aborted the navigation.</p>",
        "name": "onErrorOccurred"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>0 indicates the navigation happens in the tab content window; a positive\nvalue indicates navigation in a subframe. Frame IDs are unique within a tab.</p>",
                    "name": "frameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the parent frame, or <code>-1</code> if this is the main frame.</p>",
                    "name": "parentFrameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the process that runs the renderer for this frame.</p>",
                    "name": "processId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the navigation occurs.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when the navigation was committed, in milliseconds since the epoch.</p>",
                    "name": "timeStamp"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "referenceType": "TransitionQualifier",
                      "referenceLink": "#type-TransitionQualifier"
                    },
                    "comment": "<p>A list of transition qualifiers.</p>",
                    "name": "transitionQualifiers"
                  },
                  {
                    "type": "reference",
                    "referenceType": "TransitionType",
                    "referenceLink": "#type-TransitionType",
                    "comment": "<p>Cause of the navigation.</p>",
                    "name": "transitionType"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the frame's history was updated to a new URL. All future\nevents for that frame will use the updated URL.</p>",
        "name": "onHistoryStateUpdated"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>0 indicates the navigation happens in the tab content window; a positive\nvalue indicates navigation in a subframe. Frame IDs are unique within a tab.</p>",
                    "name": "frameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the parent frame, or <code>-1</code> if this is the main frame.</p>",
                    "name": "parentFrameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the process that runs the renderer for this frame.</p>",
                    "name": "processId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the navigation occurs.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when the navigation was committed, in milliseconds since the epoch.</p>",
                    "name": "timeStamp"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "referenceType": "TransitionQualifier",
                      "referenceLink": "#type-TransitionQualifier"
                    },
                    "comment": "<p>A list of transition qualifiers.</p>",
                    "name": "transitionQualifiers"
                  },
                  {
                    "type": "reference",
                    "referenceType": "TransitionType",
                    "referenceLink": "#type-TransitionType",
                    "comment": "<p>Cause of the navigation.</p>",
                    "name": "transitionType"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the reference fragment of a frame was updated. All future\nevents for that frame will use the updated URL.</p>",
        "name": "onReferenceFragmentUpdated"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab that was replaced.</p>",
                    "name": "replacedTabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab that replaced the old tab.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when the replacement happened, in milliseconds since the epoch.</p>",
                    "name": "timeStamp"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the contents of the tab is replaced by a different (usually\npreviously pre-rendered) tab.</p>",
        "name": "onTabReplaced"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "webNavigation\n"
    ]
  },
  {
    "name": "chrome.webRequest",
    "shortName": "webRequest",
    "comment": "<p>Use the <code>chrome.webRequest</code> API to observe and analyze traffic and\nto intercept, block, or modify requests in-flight.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "name": "password"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "name": "username"
              }
            ],
            "comment": "<p>Only used as a response to the onAuthRequired event. If set, the request is\nmade using the supplied credentials.</p>",
            "optional": true,
            "name": "authCredentials"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If true, the request is cancelled. This prevents the request from being sent.\nThis can be used as a response to the onBeforeRequest, onBeforeSendHeaders,\nonHeadersReceived and onAuthRequired events.</p>",
            "optional": true,
            "name": "cancel"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>Only used as a response to the onBeforeRequest and onHeadersReceived events.\nIf set, the original request is prevented from being sent/completed and is\ninstead redirected to the given URL. Redirections to non-HTTP schemes such as\n<code>data:</code> are allowed. Redirects initiated by a redirect action use\nthe original request method for the redirect, with one exception: If the\nredirect is initiated at the onHeadersReceived stage, then the redirect will\nbe issued using the GET method. Redirects from URLs with <code>ws://</code>\nand <code>wss://</code> schemes are <b>ignored</b>.</p>",
            "optional": true,
            "name": "redirectUrl"
          },
          {
            "type": "reference",
            "referenceType": "HttpHeaders",
            "referenceLink": "#type-HttpHeaders",
            "comment": "<p>Only used as a response to the onBeforeSendHeaders event. If set, the request\nis made with these request headers instead.</p>",
            "optional": true,
            "name": "requestHeaders"
          },
          {
            "type": "reference",
            "referenceType": "HttpHeaders",
            "referenceLink": "#type-HttpHeaders",
            "comment": "<p>Only used as a response to the onHeadersReceived event. If set, the server is\nassumed to have responded with these response headers instead. Only return\n<code>responseHeaders</code> if you really want to modify the headers in\norder to limit the number of conflicts (only one extension may modify\n<code>responseHeaders</code> for each request).</p>",
            "optional": true,
            "name": "responseHeaders"
          }
        ],
        "comment": "<p>Returns value for event handlers that have the 'blocking' extraInfoSpec\napplied. Allows the event handler to modify network requests.</p>",
        "name": "BlockingResponse"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "tabId"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ResourceType",
              "referenceLink": "#type-ResourceType"
            },
            "comment": "<p>A list of request types. Requests that cannot match any of the types will be\nfiltered out.</p>",
            "optional": true,
            "name": "types"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>A list of URLs or URL patterns. Requests that cannot match any of the URLs\nwill be filtered out.</p>",
            "name": "urls"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": true,
            "name": "windowId"
          }
        ],
        "comment": "<p>An object describing filters to apply to webRequest events.</p>",
        "name": "RequestFilter"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "any",
            "comment": "<p>An ArrayBuffer with a copy of the data.</p>",
            "optional": true,
            "name": "bytes"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>A string with the file's path and name.</p>",
            "optional": true,
            "name": "file"
          }
        ],
        "comment": "<p>Contains data uploaded in a URL request.</p>",
        "name": "UploadData"
      },
      {
        "type": "union",
        "isEnum": false,
        "options": [
          {
            "type": "reference",
            "referenceType": "ArrayBuffer"
          },
          {
            "type": "primitive",
            "primitiveType": "string"
          }
        ],
        "comment": "<p>Contains data passed within form data. For urlencoded form it is stored as\nstring if data is utf-8 string and as ArrayBuffer otherwise. For form-data it\nis ArrayBuffer. If form-data represents uploading file, it is string with\nfilename, if the filename is provided.</p>",
        "name": "FormDataItem"
      },
      {
        "type": "array",
        "elementType": {
          "type": "object",
          "properties": [
            {
              "type": "array",
              "elementType": {
                "type": "primitive",
                "primitiveType": "number"
              },
              "comment": "<p>Value of the HTTP header if it cannot be represented by UTF-8, stored as\nindividual byte values (0..255).</p>",
              "optional": true,
              "name": "binaryValue"
            },
            {
              "type": "primitive",
              "primitiveType": "string",
              "comment": "<p>Name of the HTTP header.</p>",
              "name": "name"
            },
            {
              "type": "primitive",
              "primitiveType": "string",
              "comment": "<p>Value of the HTTP header if it can be represented by UTF-8.</p>",
              "optional": true,
              "name": "value"
            }
          ]
        },
        "comment": "<p>An array of HTTP headers. Each header is represented as a dictionary\ncontaining the keys <code>name</code> and either <code>value</code> or\n<code>binaryValue</code>.</p>",
        "name": "HttpHeaders"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"redirect\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"request_headers\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"response_headers\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"auth_credentials\""
          }
        ],
        "name": "IgnoredActionType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"responseHeaders\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"blocking\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"asyncBlocking\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"extraHeaders\""
          }
        ],
        "name": "OnAuthRequiredOptions"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"responseHeaders\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"extraHeaders\""
          }
        ],
        "name": "OnBeforeRedirectOptions"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"blocking\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"requestBody\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"extraHeaders\""
          }
        ],
        "name": "OnBeforeRequestOptions"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"requestHeaders\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"blocking\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"extraHeaders\""
          }
        ],
        "name": "OnBeforeSendHeadersOptions"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"responseHeaders\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"extraHeaders\""
          }
        ],
        "name": "OnCompletedOptions"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"extraHeaders\""
          }
        ],
        "name": "OnErrorOccurredOptions"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"blocking\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"responseHeaders\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"extraHeaders\""
          }
        ],
        "name": "OnHeadersReceivedOptions"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"responseHeaders\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"extraHeaders\""
          }
        ],
        "name": "OnResponseStartedOptions"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"requestHeaders\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"extraHeaders\""
          }
        ],
        "name": "OnSendHeadersOptions"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"main_frame\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"sub_frame\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"stylesheet\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"script\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"image\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"font\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"object\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"xmlhttprequest\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"ping\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"csp_report\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"media\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"websocket\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"other\""
          }
        ],
        "name": "ResourceType"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "20",
        "comment": "<p>The maximum number of times that <code>handlerBehaviorChanged</code> can be\ncalled per 10 minute sustained interval. <code>handlerBehaviorChanged</code>\nis an expensive function call that shouldn't be called often.</p>",
        "name": "MAX_HANDLER_BEHAVIOR_CHANGED_CALLS_PER_10_MINUTES"
      }
    ],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Needs to be called when the behavior of the webRequest handlers has changed\nto prevent incorrect handling due to caching. This function call is\nexpensive. Don't call it often.</p>",
        "name": "handlerBehaviorChanged"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "reference",
                    "referenceType": "IgnoredActionType",
                    "referenceLink": "#type-IgnoredActionType",
                    "comment": "<p>The proposed action which was ignored.</p>",
                    "name": "action"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The ID of the request. Request IDs are unique within a browser session. As a\nresult, they could be used to relate different events of the same request.</p>",
                    "name": "requestId"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when an extension's proposed modification to a network request is\nignored. This happens in case of conflicts with other extensions.</p>",
        "name": "onActionIgnored"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "object",
                    "properties": [
                      {
                        "type": "primitive",
                        "primitiveType": "string",
                        "name": "host"
                      },
                      {
                        "type": "primitive",
                        "primitiveType": "number",
                        "name": "port"
                      }
                    ],
                    "comment": "<p>The server requesting authentication.</p>",
                    "name": "challenger"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The value 0 indicates that the request happens in the main frame; a positive\nvalue indicates the ID of a subframe in which the request happens. If the\ndocument of a (sub-)frame is loaded (<code>type</code> is\n<code>main_frame</code> or <code>sub_frame</code>), <code>frameId</code>\nindicates the ID of this frame, not the ID of the outer frame. Frame IDs are\nunique within a tab.</p>",
                    "name": "frameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The origin where the request was initiated. This does not change through\nredirects. If this is an opaque origin, the string 'null' will be used.</p>",
                    "optional": true,
                    "name": "initiator"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>True for Proxy-Authenticate, false for WWW-Authenticate.</p>",
                    "name": "isProxy"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>Standard HTTP method.</p>",
                    "name": "method"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>ID of frame that wraps the frame which sent the request. Set to -1 if no\nparent frame exists.</p>",
                    "name": "parentFrameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The authentication realm provided by the server, if there is one.</p>",
                    "optional": true,
                    "name": "realm"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The ID of the request. Request IDs are unique within a browser session. As a\nresult, they could be used to relate different events of the same request.</p>",
                    "name": "requestId"
                  },
                  {
                    "type": "reference",
                    "referenceType": "HttpHeaders",
                    "referenceLink": "#type-HttpHeaders",
                    "comment": "<p>The HTTP response headers that were received along with this response.</p>",
                    "optional": true,
                    "name": "responseHeaders"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The authentication scheme, e.g. Basic or Digest.</p>",
                    "name": "scheme"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>Standard HTTP status code returned by the server.</p>",
                    "name": "statusCode"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>HTTP status line of the response or the 'HTTP/0.9 200 OK' string for HTTP/0.9\nresponses (i.e., responses that lack a status line) or an empty string if\nthere are no headers.</p>",
                    "name": "statusLine"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the request takes place. Set to -1 if the request\nisn't related to a tab.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when this signal is triggered, in milliseconds since the epoch.</p>",
                    "name": "timeStamp"
                  },
                  {
                    "type": "reference",
                    "referenceType": "ResourceType",
                    "referenceLink": "#type-ResourceType",
                    "comment": "<p>How the requested resource will be used.</p>",
                    "name": "type"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details"
              },
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "reference",
                    "referenceType": "BlockingResponse",
                    "referenceLink": "#type-BlockingResponse",
                    "optional": false,
                    "name": "response"
                  }
                ],
                "optional": false,
                "name": "asyncCallback"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when an authentication failure is received. The listener has three\noptions: it can provide authentication credentials, it can cancel the\nrequest and display the error page, or it can take no action on the\nchallenge. If bad user credentials are provided, this may be called\nmultiple times for the same request. Note, only one of\n<code>'blocking'</code> or <code>'asyncBlocking'</code> modes must be\nspecified in the <code>extraInfoSpec</code> parameter.</p>",
        "name": "onAuthRequired"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The value 0 indicates that the request happens in the main frame; a positive\nvalue indicates the ID of a subframe in which the request happens. If the\ndocument of a (sub-)frame is loaded (<code>type</code> is\n<code>main_frame</code> or <code>sub_frame</code>), <code>frameId</code>\nindicates the ID of this frame, not the ID of the outer frame. Frame IDs are\nunique within a tab.</p>",
                    "name": "frameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>Indicates if this response was fetched from disk cache.</p>",
                    "name": "fromCache"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The origin where the request was initiated. This does not change through\nredirects. If this is an opaque origin, the string 'null' will be used.</p>",
                    "optional": true,
                    "name": "initiator"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The server IP address that the request was actually sent to. Note that it may\nbe a literal IPv6 address.</p>",
                    "optional": true,
                    "name": "ip"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>Standard HTTP method.</p>",
                    "name": "method"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>ID of frame that wraps the frame which sent the request. Set to -1 if no\nparent frame exists.</p>",
                    "name": "parentFrameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The new URL.</p>",
                    "name": "redirectUrl"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The ID of the request. Request IDs are unique within a browser session. As a\nresult, they could be used to relate different events of the same request.</p>",
                    "name": "requestId"
                  },
                  {
                    "type": "reference",
                    "referenceType": "HttpHeaders",
                    "referenceLink": "#type-HttpHeaders",
                    "comment": "<p>The HTTP response headers that were received along with this redirect.</p>",
                    "optional": true,
                    "name": "responseHeaders"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>Standard HTTP status code returned by the server.</p>",
                    "name": "statusCode"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>HTTP status line of the response or the 'HTTP/0.9 200 OK' string for HTTP/0.9\nresponses (i.e., responses that lack a status line) or an empty string if\nthere are no headers.</p>",
                    "name": "statusLine"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the request takes place. Set to -1 if the request\nisn't related to a tab.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when this signal is triggered, in milliseconds since the epoch.</p>",
                    "name": "timeStamp"
                  },
                  {
                    "type": "reference",
                    "referenceType": "ResourceType",
                    "referenceLink": "#type-ResourceType",
                    "comment": "<p>How the requested resource will be used.</p>",
                    "name": "type"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a server-initiated redirect is about to occur.</p>",
        "name": "onBeforeRedirect"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The value 0 indicates that the request happens in the main frame; a positive\nvalue indicates the ID of a subframe in which the request happens. If the\ndocument of a (sub-)frame is loaded (<code>type</code> is\n<code>main_frame</code> or <code>sub_frame</code>), <code>frameId</code>\nindicates the ID of this frame, not the ID of the outer frame. Frame IDs are\nunique within a tab.</p>",
                    "name": "frameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The origin where the request was initiated. This does not change through\nredirects. If this is an opaque origin, the string 'null' will be used.</p>",
                    "optional": true,
                    "name": "initiator"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>Standard HTTP method.</p>",
                    "name": "method"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>ID of frame that wraps the frame which sent the request. Set to -1 if no\nparent frame exists.</p>",
                    "name": "parentFrameId"
                  },
                  {
                    "type": "object",
                    "properties": [
                      {
                        "type": "primitive",
                        "primitiveType": "string",
                        "comment": "<p>Errors when obtaining request body data.</p>",
                        "optional": true,
                        "name": "error"
                      },
                      {
                        "type": "object",
                        "properties": [],
                        "comment": "<p>If the request method is POST and the body is a sequence of key-value pairs\nencoded in UTF8, encoded as either multipart/form-data, or\napplication/x-www-form-urlencoded, this dictionary is present and for each\nkey contains the list of all values for that key. If the data is of another\nmedia type, or if it is malformed, the dictionary is not present. An example\nvalue of this dictionary is {'key': ['value1', 'value2']}.</p>",
                        "optional": true,
                        "name": "formData"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "referenceType": "UploadData",
                          "referenceLink": "#type-UploadData"
                        },
                        "comment": "<p>If the request method is PUT or POST, and the body is not already parsed in\nformData, then the unparsed request body elements are contained in this\narray.</p>",
                        "optional": true,
                        "name": "raw"
                      }
                    ],
                    "comment": "<p>Contains the HTTP request body data. Only provided if extraInfoSpec contains\n'requestBody'.</p>",
                    "optional": true,
                    "name": "requestBody"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The ID of the request. Request IDs are unique within a browser session. As a\nresult, they could be used to relate different events of the same request.</p>",
                    "name": "requestId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the request takes place. Set to -1 if the request\nisn't related to a tab.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when this signal is triggered, in milliseconds since the epoch.</p>",
                    "name": "timeStamp"
                  },
                  {
                    "type": "reference",
                    "referenceType": "ResourceType",
                    "referenceLink": "#type-ResourceType",
                    "comment": "<p>How the requested resource will be used.</p>",
                    "name": "type"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a request is about to occur.</p>",
        "name": "onBeforeRequest"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The value 0 indicates that the request happens in the main frame; a positive\nvalue indicates the ID of a subframe in which the request happens. If the\ndocument of a (sub-)frame is loaded (<code>type</code> is\n<code>main_frame</code> or <code>sub_frame</code>), <code>frameId</code>\nindicates the ID of this frame, not the ID of the outer frame. Frame IDs are\nunique within a tab.</p>",
                    "name": "frameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The origin where the request was initiated. This does not change through\nredirects. If this is an opaque origin, the string 'null' will be used.</p>",
                    "optional": true,
                    "name": "initiator"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>Standard HTTP method.</p>",
                    "name": "method"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>ID of frame that wraps the frame which sent the request. Set to -1 if no\nparent frame exists.</p>",
                    "name": "parentFrameId"
                  },
                  {
                    "type": "reference",
                    "referenceType": "HttpHeaders",
                    "referenceLink": "#type-HttpHeaders",
                    "comment": "<p>The HTTP request headers that are going to be sent out with this request.</p>",
                    "optional": true,
                    "name": "requestHeaders"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The ID of the request. Request IDs are unique within a browser session. As a\nresult, they could be used to relate different events of the same request.</p>",
                    "name": "requestId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the request takes place. Set to -1 if the request\nisn't related to a tab.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when this signal is triggered, in milliseconds since the epoch.</p>",
                    "name": "timeStamp"
                  },
                  {
                    "type": "reference",
                    "referenceType": "ResourceType",
                    "referenceLink": "#type-ResourceType",
                    "comment": "<p>How the requested resource will be used.</p>",
                    "name": "type"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired before sending an HTTP request, once the request headers are\navailable. This may occur after a TCP connection is made to the server,\nbut before any HTTP data is sent.</p>",
        "name": "onBeforeSendHeaders"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The value 0 indicates that the request happens in the main frame; a positive\nvalue indicates the ID of a subframe in which the request happens. If the\ndocument of a (sub-)frame is loaded (<code>type</code> is\n<code>main_frame</code> or <code>sub_frame</code>), <code>frameId</code>\nindicates the ID of this frame, not the ID of the outer frame. Frame IDs are\nunique within a tab.</p>",
                    "name": "frameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>Indicates if this response was fetched from disk cache.</p>",
                    "name": "fromCache"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The origin where the request was initiated. This does not change through\nredirects. If this is an opaque origin, the string 'null' will be used.</p>",
                    "optional": true,
                    "name": "initiator"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The server IP address that the request was actually sent to. Note that it may\nbe a literal IPv6 address.</p>",
                    "optional": true,
                    "name": "ip"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>Standard HTTP method.</p>",
                    "name": "method"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>ID of frame that wraps the frame which sent the request. Set to -1 if no\nparent frame exists.</p>",
                    "name": "parentFrameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The ID of the request. Request IDs are unique within a browser session. As a\nresult, they could be used to relate different events of the same request.</p>",
                    "name": "requestId"
                  },
                  {
                    "type": "reference",
                    "referenceType": "HttpHeaders",
                    "referenceLink": "#type-HttpHeaders",
                    "comment": "<p>The HTTP response headers that were received along with this response.</p>",
                    "optional": true,
                    "name": "responseHeaders"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>Standard HTTP status code returned by the server.</p>",
                    "name": "statusCode"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>HTTP status line of the response or the 'HTTP/0.9 200 OK' string for HTTP/0.9\nresponses (i.e., responses that lack a status line) or an empty string if\nthere are no headers.</p>",
                    "name": "statusLine"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the request takes place. Set to -1 if the request\nisn't related to a tab.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when this signal is triggered, in milliseconds since the epoch.</p>",
                    "name": "timeStamp"
                  },
                  {
                    "type": "reference",
                    "referenceType": "ResourceType",
                    "referenceLink": "#type-ResourceType",
                    "comment": "<p>How the requested resource will be used.</p>",
                    "name": "type"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a request is completed.</p>",
        "name": "onCompleted"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The error description. This string is <em>not</em> guaranteed to remain\nbackwards compatible between releases. You must not parse and act based upon\nits content.</p>",
                    "name": "error"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The value 0 indicates that the request happens in the main frame; a positive\nvalue indicates the ID of a subframe in which the request happens. If the\ndocument of a (sub-)frame is loaded (<code>type</code> is\n<code>main_frame</code> or <code>sub_frame</code>), <code>frameId</code>\nindicates the ID of this frame, not the ID of the outer frame. Frame IDs are\nunique within a tab.</p>",
                    "name": "frameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>Indicates if this response was fetched from disk cache.</p>",
                    "name": "fromCache"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The origin where the request was initiated. This does not change through\nredirects. If this is an opaque origin, the string 'null' will be used.</p>",
                    "optional": true,
                    "name": "initiator"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The server IP address that the request was actually sent to. Note that it may\nbe a literal IPv6 address.</p>",
                    "optional": true,
                    "name": "ip"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>Standard HTTP method.</p>",
                    "name": "method"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>ID of frame that wraps the frame which sent the request. Set to -1 if no\nparent frame exists.</p>",
                    "name": "parentFrameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The ID of the request. Request IDs are unique within a browser session. As a\nresult, they could be used to relate different events of the same request.</p>",
                    "name": "requestId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the request takes place. Set to -1 if the request\nisn't related to a tab.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when this signal is triggered, in milliseconds since the epoch.</p>",
                    "name": "timeStamp"
                  },
                  {
                    "type": "reference",
                    "referenceType": "ResourceType",
                    "referenceLink": "#type-ResourceType",
                    "comment": "<p>How the requested resource will be used.</p>",
                    "name": "type"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when an error occurs.</p>",
        "name": "onErrorOccurred"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The value 0 indicates that the request happens in the main frame; a positive\nvalue indicates the ID of a subframe in which the request happens. If the\ndocument of a (sub-)frame is loaded (<code>type</code> is\n<code>main_frame</code> or <code>sub_frame</code>), <code>frameId</code>\nindicates the ID of this frame, not the ID of the outer frame. Frame IDs are\nunique within a tab.</p>",
                    "name": "frameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The origin where the request was initiated. This does not change through\nredirects. If this is an opaque origin, the string 'null' will be used.</p>",
                    "optional": true,
                    "name": "initiator"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>Standard HTTP method.</p>",
                    "name": "method"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>ID of frame that wraps the frame which sent the request. Set to -1 if no\nparent frame exists.</p>",
                    "name": "parentFrameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The ID of the request. Request IDs are unique within a browser session. As a\nresult, they could be used to relate different events of the same request.</p>",
                    "name": "requestId"
                  },
                  {
                    "type": "reference",
                    "referenceType": "HttpHeaders",
                    "referenceLink": "#type-HttpHeaders",
                    "comment": "<p>The HTTP response headers that have been received with this response.</p>",
                    "optional": true,
                    "name": "responseHeaders"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>Standard HTTP status code returned by the server.</p>",
                    "name": "statusCode"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>HTTP status line of the response or the 'HTTP/0.9 200 OK' string for HTTP/0.9\nresponses (i.e., responses that lack a status line).</p>",
                    "name": "statusLine"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the request takes place. Set to -1 if the request\nisn't related to a tab.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when this signal is triggered, in milliseconds since the epoch.</p>",
                    "name": "timeStamp"
                  },
                  {
                    "type": "reference",
                    "referenceType": "ResourceType",
                    "referenceLink": "#type-ResourceType",
                    "comment": "<p>How the requested resource will be used.</p>",
                    "name": "type"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when HTTP response headers of a request have been received.</p>",
        "name": "onHeadersReceived"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The value 0 indicates that the request happens in the main frame; a positive\nvalue indicates the ID of a subframe in which the request happens. If the\ndocument of a (sub-)frame is loaded (<code>type</code> is\n<code>main_frame</code> or <code>sub_frame</code>), <code>frameId</code>\nindicates the ID of this frame, not the ID of the outer frame. Frame IDs are\nunique within a tab.</p>",
                    "name": "frameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "boolean",
                    "comment": "<p>Indicates if this response was fetched from disk cache.</p>",
                    "name": "fromCache"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The origin where the request was initiated. This does not change through\nredirects. If this is an opaque origin, the string 'null' will be used.</p>",
                    "optional": true,
                    "name": "initiator"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The server IP address that the request was actually sent to. Note that it may\nbe a literal IPv6 address.</p>",
                    "optional": true,
                    "name": "ip"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>Standard HTTP method.</p>",
                    "name": "method"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>ID of frame that wraps the frame which sent the request. Set to -1 if no\nparent frame exists.</p>",
                    "name": "parentFrameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The ID of the request. Request IDs are unique within a browser session. As a\nresult, they could be used to relate different events of the same request.</p>",
                    "name": "requestId"
                  },
                  {
                    "type": "reference",
                    "referenceType": "HttpHeaders",
                    "referenceLink": "#type-HttpHeaders",
                    "comment": "<p>The HTTP response headers that were received along with this response.</p>",
                    "optional": true,
                    "name": "responseHeaders"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>Standard HTTP status code returned by the server.</p>",
                    "name": "statusCode"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>HTTP status line of the response or the 'HTTP/0.9 200 OK' string for HTTP/0.9\nresponses (i.e., responses that lack a status line) or an empty string if\nthere are no headers.</p>",
                    "name": "statusLine"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the request takes place. Set to -1 if the request\nisn't related to a tab.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when this signal is triggered, in milliseconds since the epoch.</p>",
                    "name": "timeStamp"
                  },
                  {
                    "type": "reference",
                    "referenceType": "ResourceType",
                    "referenceLink": "#type-ResourceType",
                    "comment": "<p>How the requested resource will be used.</p>",
                    "name": "type"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the first byte of the response body is received. For HTTP\nrequests, this means that the status line and response headers are\navailable.</p>",
        "name": "onResponseStarted"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "object",
                "properties": [
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The value 0 indicates that the request happens in the main frame; a positive\nvalue indicates the ID of a subframe in which the request happens. If the\ndocument of a (sub-)frame is loaded (<code>type</code> is\n<code>main_frame</code> or <code>sub_frame</code>), <code>frameId</code>\nindicates the ID of this frame, not the ID of the outer frame. Frame IDs are\nunique within a tab.</p>",
                    "name": "frameId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The origin where the request was initiated. This does not change through\nredirects. If this is an opaque origin, the string 'null' will be used.</p>",
                    "optional": true,
                    "name": "initiator"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>Standard HTTP method.</p>",
                    "name": "method"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>ID of frame that wraps the frame which sent the request. Set to -1 if no\nparent frame exists.</p>",
                    "name": "parentFrameId"
                  },
                  {
                    "type": "reference",
                    "referenceType": "HttpHeaders",
                    "referenceLink": "#type-HttpHeaders",
                    "comment": "<p>The HTTP request headers that have been sent out with this request.</p>",
                    "optional": true,
                    "name": "requestHeaders"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "comment": "<p>The ID of the request. Request IDs are unique within a browser session. As a\nresult, they could be used to relate different events of the same request.</p>",
                    "name": "requestId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The ID of the tab in which the request takes place. Set to -1 if the request\nisn't related to a tab.</p>",
                    "name": "tabId"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "number",
                    "comment": "<p>The time when this signal is triggered, in milliseconds since the epoch.</p>",
                    "name": "timeStamp"
                  },
                  {
                    "type": "reference",
                    "referenceType": "ResourceType",
                    "referenceLink": "#type-ResourceType",
                    "comment": "<p>How the requested resource will be used.</p>",
                    "name": "type"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "name": "url"
                  }
                ],
                "optional": false,
                "name": "details"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired just before a request is going to be sent to the server\n(modifications of previous onBeforeSendHeaders callbacks are visible by\nthe time onSendHeaders is fired).</p>",
        "name": "onSendHeaders"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "webRequest\n"
    ]
  },
  {
    "name": "chrome.webViewRequest",
    "shortName": "webViewRequest",
    "comment": "<p>Use the <code>chrome.webViewRequest</code> API to intercept, block, or modify\nrequests in-flight. It is potentially faster than the <a\nhref=\"../webRequest/\"><code>chrome.webRequest</code> API</a> because you can\nregister rules that are evaluated in the browser rather than the JavaScript\nengine, which reduces roundtrip latencies and allows higher efficiency.</p>",
    "types": [],
    "properties": [],
    "methods": [],
    "events": [],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "webview\n"
    ]
  },
  {
    "name": "chrome.webviewTag",
    "shortName": "webviewTag",
    "comment": "<p>Use the <code>webview</code> tag to actively load live content from the web\nover the network and embed it in your Chrome App. Your app can control the\nappearance of the <code>webview</code> and interact with the web content,\ninitiate navigations in an embedded web page, react to error events that\nhappen within it, and more (see <a href=\"#usage\">Usage</a>).</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Clear data accumulated on or after this date, represented in milliseconds\nsince the epoch (accessible via the getTime method of the JavaScript\n<code>Date</code> object). If absent, defaults to <code>0</code> (which would\nremove all browsing data).</p>",
            "optional": true,
            "name": "since"
          }
        ],
        "comment": "<p>Options that determine what data should be cleared by <code>clearData</code>.</p>",
        "name": "ClearDataOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Websites' appcaches.</p>",
            "optional": true,
            "name": "appcache"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Since Chrome 43.<br>The browser's cache. Note: when removing data, this\nclears the entire cache; it is not limited to the range you specify.</p>",
            "optional": true,
            "name": "cache"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The partition's cookies.</p>",
            "optional": true,
            "name": "cookies"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Websites' filesystems.</p>",
            "optional": true,
            "name": "fileSystems"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Websites' IndexedDB data.</p>",
            "optional": true,
            "name": "indexedDB"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Websites' local storage data.</p>",
            "optional": true,
            "name": "localStorage"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The partition's persistent cookies.</p>",
            "optional": true,
            "name": "persistentCookies"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The partition's session cookies.</p>",
            "optional": true,
            "name": "sessionCookies"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Websites' WebSQL data.</p>",
            "optional": true,
            "name": "webSQL"
          }
        ],
        "comment": "<p>A set of data types. Missing properties are interpreted as\n<code>false</code>.</p>",
        "name": "ClearDataTypeSet"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If <code>all_frames</code> is <code>true</code>, this implies that the\nJavaScript or CSS should be injected into all frames of current page. By\ndefault, <code>all_frames</code> is <code>false</code> and the JavaScript or\nCSS is only injected into the top frame.</p>",
            "optional": true,
            "name": "all_frames"
          },
          {
            "type": "reference",
            "referenceType": "InjectionItems",
            "referenceLink": "#type-InjectionItems",
            "comment": "<p>The CSS code or a list of CSS files to be injected into matching pages. These\nare injected in the order they appear, before any DOM is constructed or\ndisplayed for the page.</p>",
            "optional": true,
            "name": "css"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Applied after matches to exclude URLs that match this glob. Intended to\nemulate the @exclude Greasemonkey keyword.</p>",
            "optional": true,
            "name": "exclude_globs"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Excludes pages that this content script would otherwise be injected into.</p>",
            "optional": true,
            "name": "exclude_matches"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Applied after matches to include only those URLs that also match this glob.\nIntended to emulate the @include Greasemonkey keyword.</p>",
            "optional": true,
            "name": "include_globs"
          },
          {
            "type": "reference",
            "referenceType": "InjectionItems",
            "referenceLink": "#type-InjectionItems",
            "comment": "<p>The JavaScript code or a list of JavaScript files to be injected into\nmatching pages. These are injected in the order they appear.</p>",
            "optional": true,
            "name": "js"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether to insert the content script on about:blank and about:srcdoc. Content\nscripts will only be injected on pages when their inherit URL is matched by\none of the declared patterns in the matches field. The inherit URL is the URL\nof the document that created the frame or window. Content scripts cannot be\ninserted in sandboxed frames.</p>",
            "optional": true,
            "name": "match_about_blank"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Specifies which pages this content script will be injected into.</p>",
            "name": "matches"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The name of the content script to inject.</p>",
            "name": "name"
          },
          {
            "type": "reference",
            "referenceType": "extensionTypes.RunAt",
            "referenceLink": "../extensionTypes/#type-RunAt",
            "comment": "<p>The soonest that the JavaScript or CSS will be injected into the tab.\nDefaults to \"document_idle\".</p>",
            "optional": true,
            "name": "run_at"
          }
        ],
        "comment": "<p>Details of the content script to inject. Refer to the <a\nhref='/extensions/content_scripts'>content scripts</a> documentation for more\ndetails.</p>",
        "name": "ContentScriptDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "any",
                "optional": false,
                "name": "message",
                "comment": "<p>Message object to send to the guest.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "targetOrigin",
                "comment": "<p>Specifies what the origin of the guest window must be for the event to be dispatched.</p>"
              }
            ],
            "comment": "<p>Posts a message to the embedded web content as long as the embedded\ncontent is displaying a page from the target origin. This method is available\nonce the page has completed loading. Listen for the <a\nhref=\"#event-contentload\">contentload</a> event and then call the\nmethod.</p><p>The guest will be able to send replies to the embedder by\nposting message to <code>event.source</code> on the message event it\nreceives.</p><p>This API is identical to the <a\nhref=\"https://developer.mozilla.org/en-US/docs/DOM/window.postMessage\">HTML5\npostMessage API</a> for communication between web pages. The embedder may\nlisten for replies by adding a <code>message</code> event listener to its own\nframe.</p>",
            "name": "postMessage"
          }
        ],
        "comment": "<p>Messaging handle to a guest window.</p>",
        "name": "ContentWindow"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The initial state of a checkbox or radio item: true for selected and false\nfor unselected. Only one radio item can be selected at a time in a given\ngroup of radio items.</p>",
            "optional": true,
            "name": "checked"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ContextType",
              "referenceLink": "#type-ContextType"
            },
            "minLength": 1,
            "comment": "<p>List of contexts this menu item will appear in. Defaults to ['page'] if not\nspecified.</p>",
            "optional": true,
            "name": "contexts"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Lets you restrict the item to apply only to documents whose URL matches one\nof the given patterns. (This applies to frames as well.) For details on the\nformat of a pattern, see <a href=\"../../match_patterns/\">Match Patterns</a>.</p>",
            "optional": true,
            "name": "documentUrlPatterns"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether this context menu item is enabled or disabled. Defaults to\n<code>true</code>.</p>",
            "optional": true,
            "name": "enabled"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The unique ID to assign to this item. Mandatory for event pages. Cannot be\nthe same as another ID for this extension.</p>",
            "optional": true,
            "name": "id"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "object",
                "optional": false,
                "name": "info",
                "comment": "<p>Information about the item clicked and the context where the click happened.</p>"
              }
            ],
            "comment": "<p>A function that will be called back when the menu item is clicked.</p>",
            "optional": true,
            "name": "onclick"
          },
          {
            "type": "union",
            "isEnum": true,
            "options": [
              {
                "type": "primitive",
                "primitiveType": "number"
              },
              {
                "type": "primitive",
                "primitiveType": "string"
              }
            ],
            "comment": "<p>The ID of a parent menu item; this makes the item a child of a previously\nadded item.</p>",
            "optional": true,
            "name": "parentId"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Similar to documentUrlPatterns, but lets you filter based on the\n<code>src</code> attribute of img/audio/video tags and the <code>href</code>\nof anchor tags.</p>",
            "optional": true,
            "name": "targetUrlPatterns"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The text to be displayed in the item; this is <em>required</em> unless\n<code>type</code> is 'separator'. When the context is 'selection', you can\nuse <code>%s</code> within the string to show the selected text. For example,\nif this parameter's value is \"Translate '%s' to Pig Latin\" and the user\nselects the word \"cool\", the context menu item for the selection is\n\"Translate 'cool' to Pig Latin\".</p>",
            "optional": true,
            "name": "title"
          },
          {
            "type": "reference",
            "referenceType": "contextMenus.ItemType",
            "referenceLink": "../contextMenus/#type-ItemType",
            "comment": "<p>The type of menu item. Defaults to 'normal' if not specified.</p>",
            "optional": true,
            "name": "type"
          }
        ],
        "name": "ContextMenuCreateProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>The state of a checkbox or radio item: true for selected and false for\nunselected. Only one radio item can be selected at a time in a given group of\nradio items.</p>",
            "optional": true,
            "name": "checked"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ContextType",
              "referenceLink": "#type-ContextType"
            },
            "minLength": 1,
            "comment": "<p>List of contexts this menu item will appear in.</p>",
            "optional": true,
            "name": "contexts"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Lets you restrict the item to apply only to documents whose URL matches one\nof the given patterns. (This applies to frames as well.) For details on the\nformat of a pattern, see <a href=\"../../match_patterns/\">Match Patterns</a>.</p>",
            "optional": true,
            "name": "documentUrlPatterns"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether this context menu item is enabled or disabled.</p>",
            "optional": true,
            "name": "enabled"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "object",
                "optional": false,
                "name": "info",
                "comment": "<p>Information about the item clicked and the context where the click happened.</p>"
              }
            ],
            "comment": "<p>A function that will be called back when the menu item is clicked.</p>",
            "optional": true,
            "name": "onclick"
          },
          {
            "type": "union",
            "isEnum": true,
            "options": [
              {
                "type": "primitive",
                "primitiveType": "number"
              },
              {
                "type": "primitive",
                "primitiveType": "string"
              }
            ],
            "comment": "<p>The ID of a parent menu item; this makes the item a child of a previously\nadded item. <em>Note:</em> You cannot change an item to be a child of one of\nits own descendants.</p>",
            "optional": true,
            "name": "parentId"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>Similar to documentUrlPatterns, but lets you filter based on the\n<code>src</code> attribute of img/audio/video tags and the <code>href</code>\nof anchor tags.</p>",
            "optional": true,
            "name": "targetUrlPatterns"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The text to be displayed in the item</p>",
            "optional": true,
            "name": "title"
          },
          {
            "type": "reference",
            "referenceType": "contextMenus.ItemType",
            "referenceLink": "../contextMenus/#type-ItemType",
            "comment": "<p>The type of menu item.</p>",
            "optional": true,
            "name": "type"
          }
        ],
        "name": "ContextMenuUpdateProperties"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "reference",
            "referenceType": "events.Event",
            "referenceLink": "../events/#type-Event",
            "referenceTemplates": [
              {
                "type": "function",
                "parameters": [
                  {
                    "type": "object",
                    "properties": [
                      {
                        "type": "function",
                        "parameters": [],
                        "comment": "<p>Call this to prevent showing the context menu.</p>",
                        "name": "preventDefault"
                      }
                    ],
                    "optional": false,
                    "name": "event"
                  }
                ],
                "name": "listener"
              }
            ],
            "comment": "<p>Fired before showing a context menu on this <code>webview</code>. Can\nbe used to disable this context menu by calling\n<code>event.preventDefault()</code>.</p>",
            "name": "onShow"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "ContextMenuCreateProperties",
                "referenceLink": "#type-ContextMenuCreateProperties",
                "optional": false,
                "name": "createProperties",
                "comment": "<p>The properties used to create the item</p>"
              },
              {
                "type": "function",
                "parameters": [],
                "optional": false,
                "name": "callback",
                "comment": "<p>Called when the item has been created in the browser. If there were any problems creating the item, details will be available in <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a>.</p>"
              }
            ],
            "comment": "<p>Creates a new context menu item. Note that if an error occurs during\ncreation, you may not find out until the creation callback fires (the details\nwill be in <a href=\"../runtime/#property-lastError\"><code>runtime.lastError</code></a>).</p>",
            "returnType": {
              "type": "union",
              "isEnum": true,
              "options": [
                {
                  "type": "primitive",
                  "primitiveType": "number"
                },
                {
                  "type": "primitive",
                  "primitiveType": "string"
                }
              ],
              "name": "returns",
              "comment": "<p>The ID of the newly created item.</p>"
            },
            "name": "create"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "union",
                "isEnum": true,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "number"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string"
                  }
                ],
                "optional": false,
                "name": "menuItemId",
                "comment": "<p>The ID of the context menu item to remove.</p>"
              },
              {
                "type": "function",
                "parameters": [],
                "optional": false,
                "name": "callback",
                "comment": "<p>Called when the context menu has been removed.</p>"
              }
            ],
            "comment": "<p>Removes a context menu item.</p>",
            "name": "remove"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "function",
                "parameters": [],
                "optional": false,
                "name": "callback",
                "comment": "<p>Called when removal is complete.</p>"
              }
            ],
            "comment": "<p>Removes all context menu items added to this <code>webview</code>.</p>",
            "name": "removeAll"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "union",
                "isEnum": true,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "number"
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string"
                  }
                ],
                "optional": false,
                "name": "id",
                "comment": "<p>The ID of the item to update.</p>"
              },
              {
                "type": "reference",
                "referenceType": "ContextMenuUpdateProperties",
                "referenceLink": "#type-ContextMenuUpdateProperties",
                "optional": false,
                "name": "updateProperties",
                "comment": "<p>The properties to update. Accepts the same values as the create function.</p>"
              },
              {
                "type": "function",
                "parameters": [],
                "optional": false,
                "name": "callback",
                "comment": "<p>Called when the context menu has been updated.</p>"
              }
            ],
            "comment": "<p>Updates a previously created context menu item.</p>",
            "name": "update"
          }
        ],
        "name": "ContextMenus"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Reject the dialog. Equivalent to clicking Cancel in a <code>confirm</code> or\n<code>prompt</code> dialog.</p>",
            "name": "cancel"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "response",
                "comment": "<p>The response string to provide to the guest when accepting a <code>prompt</code> dialog.</p>"
              }
            ],
            "comment": "<p>Accept the dialog. Equivalent to clicking OK in an <code>alert</code>,\n<code>confirm</code>, or <code>prompt</code> dialog.</p>",
            "name": "ok"
          }
        ],
        "comment": "<p>Interface attached to <code>dialog</code> DOM events.</p>",
        "name": "DialogController"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The HTTP request type (e.g. <code>GET</code>) associated with the download\nrequest.</p>",
            "name": "requestMethod"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The requested download URL.</p>",
            "name": "url"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Allow the permission request.</p>",
            "name": "allow"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Deny the permission request. This is the default behavior if\n<code>allow</code> is not called.</p>",
            "name": "deny"
          }
        ],
        "comment": "<p>The type of <code>request</code> object which accompanies a\n<code>download</code> <a\nhref=\"#event-permissionrequest\">permissionrequest</a></code> DOM event.</p>",
        "name": "DownloadPermissionRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL of the frame requesting access to local file system.</p>",
            "name": "url"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Allow the permission request.</p>",
            "name": "allow"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Deny the permission request.</p>",
            "name": "deny"
          }
        ],
        "comment": "<p>The type of <code>request</code> object which accompanies a\n<code>filesystem</code> <a\nhref=\"#event-permissionrequest\">permissionrequest</a></code> DOM event.</p>",
        "name": "FileSystemPermissionRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ordinal number of the current match.</p>",
            "name": "activeMatchOrdinal"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Indicates whether this find request was canceled.</p>",
            "name": "canceled"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The number of times <code>searchText</code> was matched on the page.</p>",
            "name": "numberOfMatches"
          },
          {
            "type": "reference",
            "referenceType": "SelectionRect",
            "referenceLink": "#type-SelectionRect",
            "comment": "<p>Describes a rectangle around the active match in screen coordinates.</p>",
            "name": "selectionRect"
          }
        ],
        "comment": "<p>Contains all of the results of the find request.</p>",
        "name": "FindCallbackResults"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag to find matches in reverse order. The default value is\n<code>false</code>.</p>",
            "optional": true,
            "name": "backward"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Flag to match with case-sensitivity. The default value is <code>false</code>.</p>",
            "optional": true,
            "name": "matchCase"
          }
        ],
        "comment": "<p>Options for the find request.</p>",
        "name": "FindOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The origin of the frame inside the <code>webview</code> that initiated the\nfullscreen request.</p>",
            "name": "origin"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Allow the permission request.</p>",
            "name": "allow"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Deny the permission request.</p>",
            "name": "deny"
          }
        ],
        "comment": "<p>The type of <code>request</code> object which accompanies a\n<code>fullscreen</code> <a\nhref=\"#event-permissionrequest\">permissionrequest</a> DOM event.</p>",
        "name": "FullscreenPermissionRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL of the frame requesting access to geolocation data.</p>",
            "name": "url"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Allow the permission request.</p>",
            "name": "allow"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Deny the permission request. This is the default behavior if\n<code>allow</code> is not called.</p>",
            "name": "deny"
          }
        ],
        "comment": "<p>The type of <code>request</code> object which accompanies a\n<code>geolocation</code> <a\nhref=\"#event-permissionrequest\">permissionrequest</a></code> DOM event.</p>",
        "name": "GeolocationPermissionRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>JavaScript or CSS code to inject.<br><br><b>Warning:</b><br>Be careful using\nthe <code>code</code> parameter. Incorrect use of it may open your app to <a\nhref=\"https://en.wikipedia.org/wiki/Cross-site_scripting\">cross site\nscripting</a> attacks.</p>",
            "optional": true,
            "name": "code"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>JavaScript or CSS file to inject.</p>",
            "optional": true,
            "name": "file"
          }
        ],
        "comment": "<p>Details of the script or CSS to inject. Either the code or the file property\nmust be set, but both may not be set at the same time.</p>",
        "name": "InjectDetails"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>JavaScript code or CSS to be injected into matching pages.</p>",
            "optional": true,
            "name": "code"
          },
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "comment": "<p>The list of JavaScript or CSS files to be injected into matching pages. These\nare injected in the order they appear in this array.</p>",
            "optional": true,
            "name": "files"
          }
        ],
        "comment": "<p>The type of injection item: code or a set of files.</p>",
        "name": "InjectionItems"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The plugin's identifier string.</p>",
            "name": "identifier"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The plugin's display name.</p>",
            "name": "name"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Allow the permission request. This is the default behavior if\n<code>deny</code> is not called..</p>",
            "name": "allow"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Deny the permission request.</p>",
            "name": "deny"
          }
        ],
        "comment": "<p>The type of <code>request</code> object which accompanies a\n<code>loadplugin</code> <a\nhref=\"#event-permissionrequest\">permissionrequest</a> DOM event.</p>",
        "name": "LoadPluginPermissionRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL of the frame requesting access to user media.</p>",
            "name": "url"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Allow the permission request.</p>",
            "name": "allow"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Deny the permission request. This is the default behavior if\n<code>allow</code> is not called.</p>",
            "name": "deny"
          }
        ],
        "comment": "<p>The type of <code>request</code> object which accompanies a\n<code>media</code> <a\nhref=\"#event-permissionrequest\">permissionrequest</a></code> DOM event.</p>",
        "name": "MediaPermissionRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "object",
                "optional": false,
                "name": "webview",
                "comment": "<p>The <code>webview</code> element to which the target page should be attached.</p>"
              }
            ],
            "comment": "<p>Attach the requested target page to an existing <code>webview</code> element.</p>",
            "name": "attach"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Cancel the new window request.</p>",
            "name": "discard"
          }
        ],
        "comment": "<p>Interface attached to <code>newwindow</code> DOM events.</p>",
        "name": "NewWindow"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether or not the requesting frame was the most recent client to hold\npointer lock.</p>",
            "name": "lastUnlockedBySelf"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The URL of the frame requesting pointer lock.</p>",
            "name": "url"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether or not pointer lock was requested as a result of a user input\ngesture.</p>",
            "name": "userGesture"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Allow the permission request.</p>",
            "name": "allow"
          },
          {
            "type": "function",
            "parameters": [],
            "comment": "<p>Deny the permission request. This is the default behavior if\n<code>allow</code> is not called.</p>",
            "name": "deny"
          }
        ],
        "comment": "<p>The type of <code>request</code> object which accompanies a\n<code>pointerLock</code> <a\nhref=\"#event-permissionrequest\">permissionrequest</a></code> DOM event.</p>",
        "name": "PointerLockPermissionRequest"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Height of the rectangle.</p>",
            "name": "height"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Distance from the left edge of the screen to the left edge of the rectangle.</p>",
            "name": "left"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Distance from the top edge of the screen to the top edge of the rectangle.</p>",
            "name": "top"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>Width of the rectangle.</p>",
            "name": "width"
          }
        ],
        "comment": "<p>Describes a rectangle in screen coordinates.</p><p>The containment\nsemantics are array-like; that is, the coordinate <code>(left, top)</code> is\nconsidered to be contained by the rectangle, but the coordinate <code>(left +\nwidth, top)</code> is not.</p>",
        "name": "SelectionRect"
      },
      {
        "type": "type",
        "properties": [],
        "comment": "<p>Interface which provides access to webRequest events on the guest page. See\nthe <a\nhref=\"http://developer.chrome.com/extensions/webRequest\">chrome.webRequest</a> extensions API for details on webRequest life cycle and related concepts. Note: The <a href=\"/extensions/webRequest#event-onActionIgnored\">chrome.webRequest.onActionIgnored</a> event is not supported for webviews. </p>\n<p>To illustrate how usage differs from the extensions webRequest API, consider the following example code which blocks any guest requests for URLs which match <code>*://www.evil.com/*</code>:</p><pre>webview.request.onBeforeRequest.addListener(\nfunction(details) { return {cancel: true}; },\n{urls: [\"*://www.evil.com/*\"]},\n[\"blocking\"]);</pre><p>Additionally, this interface supports declarative webRequest rules through <code>onRequest</code> and <code>onMessage</code> events. See <a href=\"http://developer.chrome.com/extensions/declarativeWebRequest.html\">declarativeWebRequest</a> for API details.</p>Note that conditions and actions for declarative webview webRequests should be instantiated from their <code>chrome.webViewRequest.*</code> counterparts. The following example code declaratively blocks all requests to <code>\"example.com\"</code> on the webview <code>myWebview</code>:</p><pre>var rule = {\nconditions: [\nnew chrome.webViewRequest.RequestMatcher({ url: { hostSuffix: 'example.com' } })\n],\nactions: [ new chrome.webViewRequest.CancelRequest() ]\n};\nmyWebview.request.onRequest.addRules([rule]);</pre>",
        "name": "WebRequestEventInterface"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"all\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"page\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"frame\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"selection\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"link\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"editable\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"image\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"video\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"audio\""
          }
        ],
        "comment": "<p>The different contexts a menu can appear in. Specifying 'all' is equivalent\nto the combination of all other contexts.</p>",
        "name": "ContextType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"per-origin\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"per-view\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"disabled\""
          }
        ],
        "comment": "<p>Defines the how zooming is handled in the <code>webview</code>.</p>",
        "name": "ZoomMode"
      }
    ],
    "properties": [
      {
        "type": "reference",
        "referenceType": "ContentWindow",
        "referenceLink": "#type-ContentWindow",
        "comment": "<p>Object reference which can be used to post messages into the guest page.</p>",
        "name": "contentWindow"
      },
      {
        "type": "reference",
        "referenceType": "ContextMenus",
        "referenceLink": "#type-ContextMenus",
        "comment": "<p>Similar to <a href=\"../contextMenus/\">chrome's ContextMenus API</a>, but applies\nto <code>webview</code> instead of browser. Use the\n<code>webview.contextMenus</code> API to add items to <code>webview</code>'s\ncontext menu. You can choose what types of objects your context menu\nadditions apply to, such as images, hyperlinks, and pages.</p>",
        "name": "contextMenus"
      },
      {
        "type": "reference",
        "referenceType": "WebRequestEventInterface",
        "referenceLink": "#type-WebRequestEventInterface",
        "comment": "<p>Interface which provides access to webRequest events on the guest page.</p>",
        "name": "request"
      }
    ],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "ContentScriptDetails",
              "referenceLink": "#type-ContentScriptDetails"
            },
            "minLength": 1,
            "optional": false,
            "name": "contentScriptList",
            "comment": "<p>Details of the content scripts to add.</p>"
          }
        ],
        "comment": "<p>Adds content script injection rules to the <code>webview</code>. When the\n<code>webview</code> navigates to a page matching one or more rules, the\nassociated scripts will be injected. You can programmatically add rules or\nupdate existing rules.</p><p>The following example adds two rules to the\n<code>webview</code>: 'myRule' and\n'anotherRule'.</p><pre>webview.addContentScripts([\n{\nname: 'myRule',\nmatches: ['http://www.foo.com/*'],\ncss: { files: ['mystyles.css'] },\njs: { files: ['jquery.js', 'myscript.js'] },\nrun_at: 'document_start'\n},\n{\nname: 'anotherRule',\nmatches: ['http://www.bar.com/*'],\njs: { code: \"document.body.style.backgroundColor = 'red';\" },\nrun_at:\n'document_end'\n}]);\n...\n// Navigates webview.\nwebview.src =\n'http://www.foo.com';</pre><p>You can defer addContentScripts call until you\nneeds to inject scripts.</p><p>The following example shows how to overwrite\nan existing rule.</p><pre>webview.addContentScripts([{\nname: 'rule',\nmatches: ['http://www.foo.com/*'],\njs: { files: ['scriptA.js'] },\nrun_at: 'document_start'}]);\n\n// Do something.\nwebview.src =\n'http://www.foo.com/*';\n...\n// Overwrite 'rule' defined\nbefore.\nwebview.addContentScripts([{\nname: 'rule',\nmatches:\n['http://www.bar.com/*'],\njs: { files: ['scriptB.js'] },\nrun_at:\n'document_end'}]);</pre><p>If <code>webview</code> has been naviagted to the\norigin (e.g., foo.com) and calls <code>webview.addContentScripts</code> to\nadd 'myRule', you need to wait for next navigation to make the scripts\ninjected. If you want immediate injection, <code>executeScript</code> will do\nthe right thing.</p><p>Rules are preserved even if the guest process crashes\nor is killed or even if the <code>webview</code> is reparented.</p><p>Refer\nto the <a href='/extensions/content_scripts'>content scripts</a>\ndocumentation for more details.</p>",
        "name": "addContentScripts"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "success",
                "comment": "<p>Indicates whether the navigation was successful.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called after the navigation has either failed or completed successfully.</p>"
          }
        ],
        "comment": "<p>Navigates backward one history entry if possible. Equivalent to\n<code>go(-1)</code>.</p>",
        "name": "back"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Indicates whether or not it is possible to navigate backward through history.\nThe state of this function is cached, and updated before each\n<code>loadcommit</code>, so the best place to call it is on\n<code>loadcommit</code>.</p>",
        "returnType": {
          "type": "primitive",
          "primitiveType": "boolean",
          "name": "returns"
        },
        "name": "canGoBack"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Indicates whether or not it is possible to navigate forward through history.\nThe state of this function is cached, and updated before each\n<code>loadcommit</code>, so the best place to call it is on\n<code>loadcommit</code>.</p>",
        "returnType": {
          "type": "primitive",
          "primitiveType": "boolean",
          "name": "returns"
        },
        "name": "canGoForward"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "extensionTypes.ImageDetails",
            "referenceLink": "../extensionTypes/#type-ImageDetails",
            "optional": true,
            "name": "options"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "dataUrl",
                "comment": "<p>A data URL which encodes an image of the visible area of the captured tab. May be assigned to the 'src' property of an HTML Image element for display.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Captures the visible region of the webview.</p>",
        "name": "captureVisibleRegion"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "ClearDataOptions",
            "referenceLink": "#type-ClearDataOptions",
            "optional": false,
            "name": "options",
            "comment": "<p>Options determining which data to clear.</p>"
          },
          {
            "type": "reference",
            "referenceType": "ClearDataTypeSet",
            "referenceLink": "#type-ClearDataTypeSet",
            "optional": false,
            "name": "types",
            "comment": "<p>The types of data to be cleared.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called after the data has been successfully cleared.</p>"
          }
        ],
        "comment": "<p>Clears browsing data for the <code>webview</code> partition.</p>",
        "name": "clearData"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "InjectDetails",
            "referenceLink": "#type-InjectDetails",
            "optional": false,
            "name": "details",
            "comment": "<p>Details of the script to run.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "primitive",
                  "primitiveType": "any"
                },
                "optional": false,
                "name": "result",
                "comment": "<p>The result of the script in every injected frame.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called after all the JavaScript has been executed.</p>"
          }
        ],
        "comment": "<p></p>\n<p>Injects JavaScript code into the guest page.</p><p>The following sample\ncode uses script injection to set the guest page's background color to\nred:</p><pre>webview.executeScript({ code:\n\"document.body.style.backgroundColor = 'red'\" });</pre>",
        "name": "executeScript"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "searchText",
            "comment": "<p>The string to find in the page.</p>"
          },
          {
            "type": "reference",
            "referenceType": "FindOptions",
            "referenceLink": "#type-FindOptions",
            "optional": false,
            "name": "options",
            "comment": "<p>Options for the find request.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "FindCallbackResults",
                "referenceLink": "#type-FindCallbackResults",
                "optional": false,
                "name": "results",
                "comment": "<p>Contains all of the results of the find request. <code>results</code> can be omitted if it is not utilized in the callback function body; for example, if the callback is only used to discern when the find request has completed.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called after all find results have been returned for this find request.</p>"
          }
        ],
        "comment": "<p>Initiates a find-in-page request.</p>",
        "name": "find"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "success",
                "comment": "<p>Indicates whether the navigation was successful.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called after the navigation has either failed or completed successfully.</p>"
          }
        ],
        "comment": "<p>Navigates forward one history entry if possible. Equivalent to\n<code>go(1)</code>.</p>",
        "name": "forward"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "audible"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Queries audio state.</p>",
        "name": "getAudioState"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Returns Chrome's internal process ID for the guest web page's current\nprocess, allowing embedders to know how many guests would be affected by\nterminating the process. Two guests will share a process only if they belong\nto the same app and have the same <a href=\"#partition\">storage partition\nID</a>. The call is synchronous and returns the embedder's cached notion of\nthe current process ID. The process ID isn't the same as the operating\nsystem's process ID.</p>",
        "returnType": {
          "type": "primitive",
          "primitiveType": "number",
          "name": "returns"
        },
        "name": "getProcessId"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Returns the user agent string used by the <code>webview</code> for guest page\nrequests.</p>",
        "returnType": {
          "type": "primitive",
          "primitiveType": "string",
          "name": "returns"
        },
        "name": "getUserAgent"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "zoomFactor",
                "comment": "<p>The current zoom factor.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called after the current zoom factor is retrieved.</p>"
          }
        ],
        "comment": "<p>Gets the current zoom factor.</p>",
        "name": "getZoom"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "getZoomMode.getZoomMode.callback.__type.__call.ZoomMode",
                "referenceLink": "#type-getZoomMode-getZoomMode.callback.__type.__call.ZoomMode",
                "optional": false,
                "name": "ZoomMode",
                "comment": "<p>The <code>webview</code>'s current zoom mode.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called with the <code>webview</code>'s current zoom mode.</p>"
          }
        ],
        "comment": "<p>Gets the current zoom mode.</p>",
        "name": "getZoomMode"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "relativeIndex",
            "comment": "<p>Relative history index to which the <code>webview</code> should be navigated. For example, a value of <code>2</code> will navigate forward 2 history entries if possible; a value of <code>-3</code> will navigate backward 3 entries.</p>"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "success",
                "comment": "<p>Indicates whether the navigation was successful.</p>"
              }
            ],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called after the navigation has either failed or completed successfully.</p>"
          }
        ],
        "comment": "<p>Navigates to a history entry using a history index relative to the current\nnavigation. If the requested navigation is impossible, this method has no\neffect.</p>",
        "name": "go"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "InjectDetails",
            "referenceLink": "#type-InjectDetails",
            "optional": false,
            "name": "details",
            "comment": "<p>Details of the CSS to insert.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called after the CSS has been inserted.</p>"
          }
        ],
        "comment": "<p>Injects CSS into the guest page.</p>",
        "name": "insertCSS"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "muted"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Queries whether audio is muted.</p>",
        "name": "isAudioMuted"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "enabled"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Queries whether spatial navigation is enabled for the webview.</p>",
        "name": "isSpatialNavigationEnabled"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Indicates whether or not the <code>webview</code>'s user agent string has\nbeen overridden by <a href=\"#method-setUserAgentOverride\"><code>setUserAgentOverride</code></a>.</p>",
        "name": "isUserAgentOverridden"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "dataUrl",
            "comment": "<p>The data URL to load.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "baseUrl",
            "comment": "<p>The base URL that will be used for relative links.</p>"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "virtualUrl",
            "comment": "<p>The URL that will be displayed to the user (in the address bar).</p>"
          }
        ],
        "comment": "<p>Loads a data URL with a specified base URL used for relative links.\nOptionally, a virtual URL can be provided to be shown to the user instead of\nthe data URL.</p>",
        "name": "loadDataWithBaseUrl"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Prints the contents of the <code>webview</code>. This is equivalent to\ncalling scripted print function from the <code>webview</code> itself.</p>",
        "name": "print"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Reloads the current top-level page.</p>",
        "name": "reload"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "array",
            "elementType": {
              "type": "primitive",
              "primitiveType": "string"
            },
            "optional": false,
            "name": "scriptNameList",
            "comment": "<p>A list of names of content scripts that will be removed. If the list is empty, all the content scripts added to the <code>webview</code> will be removed.</p>"
          }
        ],
        "comment": "<p></p>\n<p>Removes content scripts from a <code>webview</code>.</p><p>The following\nexample removes \"myRule\" which was added\nbefore.</p><pre>webview.removeContentScripts(['myRule']);</pre><p>You can\nremove all the rules by\ncalling:</p><pre>webview.removeContentScripts();</pre>",
        "name": "removeContentScripts"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "mute",
            "comment": "<p>Mute audio value</p>"
          }
        ],
        "comment": "<p>Sets audio mute state of the webview.</p>",
        "name": "setAudioMuted"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "optional": false,
            "name": "enabled",
            "comment": "<p>Spatial navigation state value.</p>"
          }
        ],
        "comment": "<p>Sets spatial navigation state of the webview.</p>",
        "name": "setSpatialNavigationEnabled"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "optional": false,
            "name": "userAgent",
            "comment": "<p>The user agent string to use.</p>"
          }
        ],
        "comment": "<p>Override the user agent string used by the <code>webview</code> for guest\npage requests.</p>",
        "name": "setUserAgentOverride"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "zoomFactor",
            "comment": "<p>The new zoom factor.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called after the page has been zoomed.</p>"
          }
        ],
        "comment": "<p>Changes the zoom factor of the page. The scope and persistence of this change\nare determined by the webview's current zoom mode (see <a href=\"#type-ZoomMode\"><code>ZoomMode</code></a>).</p>",
        "name": "setZoom"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "setZoomMode.setZoomMode.ZoomMode",
            "referenceLink": "#type-setZoomMode-setZoomMode.ZoomMode",
            "optional": false,
            "name": "ZoomMode",
            "comment": "<p>Defines how zooming is handled in the <code>webview</code>.</p>"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback",
            "comment": "<p>Called after the zoom mode has been changed.</p>"
          }
        ],
        "comment": "<p>Sets the zoom mode of the <code>webview</code>.</p>",
        "name": "setZoomMode"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Stops loading the current <code>webview</code> navigation if in progress.</p>",
        "name": "stop"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "union",
            "isEnum": true,
            "options": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "literalValue": "\"clear\""
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "literalValue": "\"keep\""
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "literalValue": "\"activate\""
              }
            ],
            "optional": false,
            "name": "action",
            "comment": "<p>Determines what to do with the active match after the find session has ended. <code>clear</code> will clear the highlighting over the active match; <code>keep</code> will keep the active match highlighted; <code>activate</code> will keep the active match highlighted and simulate a user click on that match. The default action is <code>keep</code>.</p>"
          }
        ],
        "comment": "<p>Ends the current find session (clearing all highlighting) and cancels all\nfind requests in progress.</p>",
        "name": "stopFinding"
      },
      {
        "type": "function",
        "parameters": [],
        "comment": "<p>Forcibly kills the guest web page's renderer process. This may affect\nmultiple <code>webview</code> tags in the current app if they share the same\nprocess, but it will not affect <code>webview</code> tags in other apps.</p>",
        "name": "terminate"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the guest window attempts to close itself.</p>\n<p>The following\nexample code navigates the <code>webview</code> to\n<code>about:blank</code> when the guest attempts to close\nitself.</p><pre>webview.addEventListener('close', function() {\nwebview.src = 'about:blank';\n});</pre>",
        "name": "close"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "level",
                "comment": "<p>The severity level of the log message. Ranges from -1 to 2. LOG_VERBOSE (console.debug) = -1, LOG_INFO (console.log, console.info) = 0, LOG_WARNING (console.warn) = 1, LOG_ERROR (console.error) = 2.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "message",
                "comment": "<p>The logged message contents.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "line",
                "comment": "<p>The line number of the message source.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "sourceId",
                "comment": "<p>A string identifying the resource which logged the message.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the guest window logs a console message.</p>\n<p>The following\nexample code forwards all log messages to the embedder's console without\nregard for log level or other\nproperties.</p><pre>webview.addEventListener('consolemessage',\nfunction(e) {\nconsole.log('Guest page logged a message: ',\ne.message);\n});</pre>",
        "name": "consolemessage"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the guest window fires a <code>load</code> event, i.e., when a\nnew document is loaded. This does <em>not</em> include page navigation\nwithin the current document or asynchronous resource loads. </p>\n<p>The\nfollowing example code modifies the default font size of the guest's\n<code>body</code> element after the page\nloads:</p><pre>webview.addEventListener('contentload', function() {\nwebview.executeScript({ code: 'document.body.style.fontSize = \"42px\"'\n});\n});</pre>",
        "name": "contentload"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "union",
                "isEnum": true,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"alert\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"confirm\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"prompt\""
                  }
                ],
                "optional": false,
                "name": "messageType",
                "comment": "<p>The type of modal dialog requested by the guest.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "messageText",
                "comment": "<p>The text the guest attempted to display in the modal dialog.</p>"
              },
              {
                "type": "reference",
                "referenceType": "DialogController",
                "referenceLink": "#type-DialogController",
                "optional": false,
                "name": "dialog",
                "comment": "<p>An interface that can be used to respond to the guest's modal request.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the guest window attempts to open a modal dialog via\n<code>window.alert</code>, <code>window.confirm</code>, or\n<code>window.prompt</code>.</p>\n<p>Handling this event will block the guest\nprocess until each event listener returns or the <code>dialog</code>\nobject becomes unreachable (if <code>preventDefault()</code> was\ncalled.)</p><p>The default behavior is to cancel the dialog.</p>",
        "name": "dialog"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "processID",
                "comment": "<p>Chrome's internal ID of the process that exited.</p>"
              },
              {
                "type": "union",
                "isEnum": true,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"normal\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"abnormal\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"crash\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"kill\""
                  }
                ],
                "optional": false,
                "name": "reason",
                "comment": "<p>String indicating the reason for the exit.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the process rendering the guest web content has exited.</p>\n<p>The\nfollowing example code will show a farewell message whenever the guest\npage crashes:</p><pre>webview.addEventListener('exit', function(e) {\nif\n(e.reason === 'crash') {\nwebview.src = 'data:text/plain,Goodbye,\nworld!';\n}\n});</pre>",
        "name": "exit"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "searchText",
                "comment": "<p>The string that is being searched for in the page.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "numberOfMatches",
                "comment": "<p>The number of matches found for <code>searchText</code> on the page so far.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "activeMatchOrdinal",
                "comment": "<p>The ordinal number of the current active match, if it has been found. This will be <code>0</code> until then.</p>"
              },
              {
                "type": "reference",
                "referenceType": "SelectionRect",
                "referenceLink": "#type-SelectionRect",
                "optional": false,
                "name": "selectionRect",
                "comment": "<p>Describes a rectangle around the active match, if it has been found, in screen coordinates.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "canceled",
                "comment": "<p>Indicates whether the find request was canceled.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "finalUpdate",
                "comment": "<p>Indicates that all find requests have completed and that no more <code>findupdate</code> events will be fired until more find requests are made.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when new find results are available for an active find request.\nThis might happen multiple times for a single find request as matches are\nfound.</p>",
        "name": "findupdate"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "url",
                "comment": "<p>Requested URL.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "isTopLevel",
                "comment": "<p>Whether the load was top-level or in a subframe.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "code",
                "comment": "<p>Unique integer ID for the type of abort. Note that this ID is <em>not</em> guaranteed to remain backwards compatible between releases. You must not act based upon this specific integer.</p>"
              },
              {
                "type": "union",
                "isEnum": true,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"ERR_ABORTED\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"ERR_INVALID_URL\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"ERR_DISALLOWED_URL_SCHEME\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"ERR_BLOCKED_BY_CLIENT\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"ERR_ADDRESS_UNREACHABLE\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"ERR_EMPTY_RESPONSE\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"ERR_FILE_NOT_FOUND\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"ERR_UNKNOWN_URL_SCHEME\""
                  }
                ],
                "optional": false,
                "name": "reason",
                "comment": "<p>String indicating what type of abort occurred. This string is <em>not</em> guaranteed to remain backwards compatible between releases. You must not parse and act based upon its content. It is also possible that, in some cases, an error not listed here could be reported.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a top-level load has aborted without committing. An error\nmessage will be printed to the console unless the event is\ndefault-prevented. <p class=\"note\"><strong>Note:</strong> When a resource\nload is aborted, a <code>loadabort</code> event will eventually be\nfollowed by a <code>loadstop</code> event, even if all committed loads\nsince the last <code>loadstop</code> event (if any) were aborted.</p><p\nclass=\"note\"><strong>Note:</strong> When the load of either an about URL\nor a JavaScript URL is aborted, <code>loadabort</code> will be fired and\nthen the <code>webview</code> will be navigated to 'about:blank'.</p></p>",
        "name": "loadabort"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "url",
                "comment": "<p>The URL that committed.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "isTopLevel",
                "comment": "<p>Whether the load is top-level or in a subframe.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a load has committed. This includes navigation within the\ncurrent document as well as subframe document-level loads, but does\n<em>not</em> include asynchronous resource loads.</p>",
        "name": "loadcommit"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "oldUrl",
                "comment": "<p>The requested URL before the redirect.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "newUrl",
                "comment": "<p>The new URL after the redirect.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "isTopLevel",
                "comment": "<p>Whether or not the redirect happened at top-level or in a subframe.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a top-level load request has redirected to a different URL.</p>",
        "name": "loadredirect"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "url",
                "comment": "<p>Requested URL.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "optional": false,
                "name": "isTopLevel",
                "comment": "<p>Whether the load is top-level or in a subframe.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a load has begun.</p>",
        "name": "loadstart"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when all frame-level loads in a guest page (including all its\nsubframes) have completed. This includes navigation within the current\ndocument as well as subframe document-level loads, but does <em>not</em>\ninclude asynchronous resource loads. This event fires every time the\nnumber of document-level loads transitions from one (or more) to zero.\nFor example, if a page that has already finished loading (i.e.,\n<code>loadstop</code> already fired once) creates a new iframe which\nloads a page, then a second <code>loadstop</code> will fire when the\niframe page load completes. This pattern is commonly observed on pages\nthat load ads. <p class=\"note\"><strong>Note:</strong> When a committed\nload is aborted, a <code>loadstop</code> event will eventually follow a\n<code>loadabort</code> event, even if all committed loads since the last\n<code>loadstop</code> event (if any) were aborted.</p></p>",
        "name": "loadstop"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "NewWindow",
                "referenceLink": "#type-NewWindow",
                "optional": false,
                "name": "window",
                "comment": "<p>An interface that can be used to either attach the requested target page to an existing <code>webview</code> element or explicitly discard the request.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "targetUrl",
                "comment": "<p>The target URL requested for the new window.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "initialWidth",
                "comment": "<p>The initial width requested for the new window.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "initialHeight",
                "comment": "<p>The initial height requested for the new window.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "string",
                "optional": false,
                "name": "name",
                "comment": "<p>The requested name of the new window.</p>"
              },
              {
                "type": "union",
                "isEnum": true,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"ignore\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"save_to_disk\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"current_tab\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"new_background_tab\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"new_foreground_tab\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"new_window\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"new_popup\""
                  }
                ],
                "optional": false,
                "name": "windowOpenDisposition",
                "comment": "<p>The requested disposition of the new window.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the guest page attempts to open a new browser window.</p>\n<p>The\nfollowing example code will create and navigate a new\n<code>webview</code> in the embedder for each requested new\nwindow:</p><pre>webview.addEventListener('newwindow', function(e) {\nvar\nnewWebview = document.createElement('webview');\ndocument.body.appendChild(newWebview);\ne.window.attach(newWebview);\n});</pre>",
        "name": "newwindow"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "union",
                "isEnum": true,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"media\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"geolocation\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"pointerLock\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"download\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"loadplugin\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"filesystem\""
                  },
                  {
                    "type": "primitive",
                    "primitiveType": "string",
                    "literalValue": "\"fullscreen\""
                  }
                ],
                "optional": false,
                "name": "permission",
                "comment": "<p>The type of permission being requested.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "object",
                "optional": false,
                "name": "request",
                "comment": "<p>An object which holds details of the requested permission. Depending on the type of permission requested, this may be a <a href=\"#type-MediaPermissionRequest\"><code>MediaPermissionRequest</code></a>, <a href=\"#type-GeolocationPermissionRequest\"><code>GeolocationPermissionRequest</code></a>, <a href=\"#type-PointerLockPermissionRequest\"><code>PointerLockPermissionRequest</code></a>, <a href=\"#type-DownloadPermissionRequest\"><code>DownloadPermissionRequest</code></a>, <a href=\"#type-LoadPluginPermissionRequest\"><code>LoadPluginPermissionRequest</code></a>, or <a href=\"#type-FullscreenPermissionRequest\"><code>FullscreenPermissionRequest</code></a>.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the guest page needs to request special permission from the\nembedder.</p>\n<p>The following example code will grant the guest page access\nto the <code>webkitGetUserMedia</code> API. Note that an app using this\nexample code must itself specify <code>audioCapture</code> and/or\n<code>videoCapture</code> manifest\npermissions:</p><pre>webview.addEventListener('permissionrequest',\nfunction(e) {\nif (e.permission === 'media') {\ne.request.allow();\n}\n});</pre>",
        "name": "permissionrequest"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "processID",
                "comment": "<p>Chrome's internal ID of the process that became responsive.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the process rendering the guest web content has become\nresponsive again after being unresponsive.</p>\n<p>The following example code\nwill fade the <code>webview</code> element in or out as it becomes\nresponsive or unresponsive:</p><pre>webview.style.webkitTransition =\n'opacity 250ms';\nwebview.addEventListener('unresponsive', function() {\nwebview.style.opacity = '0.5';\n});\nwebview.addEventListener('responsive',\nfunction() {\nwebview.style.opacity = '1';\n});</pre>",
        "name": "responsive"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "oldWidth",
                "comment": "<p>Old width of embedded web content.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "oldHeight",
                "comment": "<p>Old height of embedded web content.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "newWidth",
                "comment": "<p>New width of embedded web content.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "newHeight",
                "comment": "<p>New height of embedded web content.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the embedded web content has been resized via\n<code>autosize</code>. Only fires if <code>autosize</code> is enabled.</p>",
        "name": "sizechanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "processID",
                "comment": "<p>Chrome's internal ID of the process that has become unresponsive.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the process rendering the guest web content has become\nunresponsive. This event will be generated once with a matching\nresponsive event if the guest begins to respond again.</p>",
        "name": "unresponsive"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "oldZoomFactor",
                "comment": "<p>The page's previous zoom factor.</p>"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "newZoomFactor",
                "comment": "<p>The new zoom factor that the page was zoomed to.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the page's zoom changes.</p>",
        "name": "zoomchange"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts",
    "permissions": [
      "webview\n"
    ]
  },
  {
    "name": "chrome.windows",
    "shortName": "windows",
    "comment": "<p>Use the <code>chrome.windows</code> API to interact with browser windows. You\ncan use this API to create, modify, and rearrange windows in the browser.</p>",
    "types": [
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>If true, the <a href=\"#type-Window\"><code>Window</code></a> object has a <var>tabs</var> property\nthat contains a list of the <a href=\"../tabs/#type-Tab\"><code>tabs.Tab</code></a> objects. The <code>Tab</code>\nobjects only contain the <code>url</code>, <code>pendingUrl</code>,\n<code>title</code>, and <code>favIconUrl</code> properties if the extension's\nmanifest file includes the <code>\"tabs\"</code> permission.</p>",
            "optional": true,
            "name": "populate"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "WindowType",
              "referenceLink": "#type-WindowType"
            },
            "comment": "<p>If set, the <a href=\"#type-Window\"><code>Window</code></a> returned is filtered based on its type. If\nunset, the default filter is set to <code>['normal', 'popup']</code>.</p>",
            "optional": true,
            "name": "windowTypes"
          }
        ],
        "name": "QueryOptions"
      },
      {
        "type": "type",
        "properties": [
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the window is set to be always on top.</p>",
            "name": "alwaysOnTop"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the window is currently the focused window.</p>",
            "name": "focused"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The height of the window, including the frame, in pixels. In some\ncircumstances a window may not be assigned a <code>height</code> property;\nfor example, when querying closed windows from the <a href=\"../sessions/\"><code>sessions</code></a> API.</p>",
            "optional": true,
            "name": "height"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The ID of the window. Window IDs are unique within a browser session. In some\ncircumstances a window may not be assigned an <code>ID</code> property; for\nexample, when querying windows using the <a href=\"../sessions/\"><code>sessions</code></a> API, in which case\na session ID may be present.</p>",
            "optional": true,
            "name": "id"
          },
          {
            "type": "primitive",
            "primitiveType": "boolean",
            "comment": "<p>Whether the window is incognito.</p>",
            "name": "incognito"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The offset of the window from the left edge of the screen in pixels. In some\ncircumstances a window may not be assigned a <code>left</code> property; for\nexample, when querying closed windows from the <a href=\"../sessions/\"><code>sessions</code></a> API.</p>",
            "optional": true,
            "name": "left"
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "comment": "<p>The session ID used to uniquely identify a window, obtained from the <a href=\"../sessions/\"><code>sessions</code></a> API.</p>",
            "optional": true,
            "name": "sessionId"
          },
          {
            "type": "reference",
            "referenceType": "WindowState",
            "referenceLink": "#type-WindowState",
            "comment": "<p>The state of this browser window.</p>",
            "optional": true,
            "name": "state"
          },
          {
            "type": "array",
            "elementType": {
              "type": "reference",
              "referenceType": "tabs.Tab",
              "referenceLink": "../tabs/#type-Tab"
            },
            "comment": "<p>Array of <a href=\"../tabs/#type-Tab\"><code>tabs.Tab</code></a> objects representing the current tabs in the\nwindow.</p>",
            "optional": true,
            "name": "tabs"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The offset of the window from the top edge of the screen in pixels. In some\ncircumstances a window may not be assigned a <code>top</code> property; for\nexample, when querying closed windows from the <a href=\"../sessions/\"><code>sessions</code></a> API.</p>",
            "optional": true,
            "name": "top"
          },
          {
            "type": "reference",
            "referenceType": "WindowType",
            "referenceLink": "#type-WindowType",
            "comment": "<p>The type of browser window this is.</p>",
            "optional": true,
            "name": "type"
          },
          {
            "type": "primitive",
            "primitiveType": "number",
            "comment": "<p>The width of the window, including the frame, in pixels. In some\ncircumstances a window may not be assigned a <code>width</code> property; for\nexample, when querying closed windows from the <a href=\"../sessions/\"><code>sessions</code></a> API.</p>",
            "optional": true,
            "name": "width"
          }
        ],
        "name": "Window"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"normal\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"popup\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"panel\""
          }
        ],
        "comment": "<p>Specifies what type of browser window to create. 'panel' is deprecated and is\navailable only to existing whitelisted extensions on Chrome OS.</p>",
        "name": "CreateType"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"normal\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"minimized\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"maximized\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"fullscreen\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"locked-fullscreen\""
          }
        ],
        "comment": "<p>The state of this browser window. In some circumstances a window may not be\nassigned a <code>state</code> property; for example, when querying closed\nwindows from the <a href=\"../sessions/\"><code>sessions</code></a> API.</p>",
        "name": "WindowState"
      },
      {
        "type": "union",
        "isEnum": true,
        "options": [
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"normal\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"popup\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"panel\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"app\""
          },
          {
            "type": "primitive",
            "primitiveType": "string",
            "literalValue": "\"devtools\""
          }
        ],
        "comment": "<p>The type of browser window this is. In some circumstances a window may not be\nassigned a <code>type</code> property; for example, when querying closed\nwindows from the <a href=\"../sessions/\"><code>sessions</code></a> API.</p>",
        "name": "WindowType"
      }
    ],
    "properties": [
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "-2",
        "comment": "<p>The windowId value that represents the <a\nhref='windows#current-window'>current window</a>.</p>",
        "name": "WINDOW_ID_CURRENT"
      },
      {
        "type": "primitive",
        "primitiveType": "number",
        "literalValue": "-1",
        "comment": "<p>The windowId value that represents the absence of a chrome browser window.</p>",
        "name": "WINDOW_ID_NONE"
      }
    ],
    "methods": [
      {
        "type": "function",
        "parameters": [
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>If <code>true</code>, opens an active window. If <code>false</code>, opens an\ninactive window.</p>",
                "optional": true,
                "name": "focused"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The height in pixels of the new window, including the frame. If not\nspecified, defaults to a natural height.</p>",
                "optional": true,
                "name": "height"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>Whether the new window should be an incognito window.</p>",
                "optional": true,
                "name": "incognito"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The number of pixels to position the new window from the left edge of the\nscreen. If not specified, the new window is offset naturally from the last\nfocused window. This value is ignored for panels.</p>",
                "optional": true,
                "name": "left"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>If <code>true</code>, the newly-created window's 'window.opener' is set to\nthe caller and is in the same <a\nhref=\"https://www.w3.org/TR/html51/browsers.html#unit-of-related-browsing-contexts\">unit of related browsing contexts</a> as the caller.</p>",
                "optional": true,
                "name": "setSelfAsOpener"
              },
              {
                "type": "reference",
                "referenceType": "WindowState",
                "referenceLink": "#type-WindowState",
                "comment": "<p>The initial state of the window. The <code>minimized</code>,\n<code>maximized</code>, and <code>fullscreen</code> states cannot be combined\nwith <code>left</code>, <code>top</code>, <code>width</code>, or\n<code>height</code>.</p>",
                "optional": true,
                "name": "state"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The ID of the tab to add to the new window.</p>",
                "optional": true,
                "name": "tabId"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The number of pixels to position the new window from the top edge of the\nscreen. If not specified, the new window is offset naturally from the last\nfocused window. This value is ignored for panels.</p>",
                "optional": true,
                "name": "top"
              },
              {
                "type": "reference",
                "referenceType": "CreateType",
                "referenceLink": "#type-CreateType",
                "comment": "<p>Specifies what type of browser window to create.</p>",
                "optional": true,
                "name": "type"
              },
              {
                "type": "union",
                "isEnum": false,
                "options": [
                  {
                    "type": "primitive",
                    "primitiveType": "string"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "primitive",
                      "primitiveType": "string"
                    }
                  }
                ],
                "comment": "<p>A URL or array of URLs to open as tabs in the window. Fully-qualified URLs\nmust include a scheme, e.g., 'http://www.google.com', not 'www.google.com'.\nNon-fully-qualified URLs are considered relative within the extension.\nDefaults to the New Tab Page.</p>",
                "optional": true,
                "name": "url"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The width in pixels of the new window, including the frame. If not specified,\ndefaults to a natural width.</p>",
                "optional": true,
                "name": "width"
              }
            ],
            "optional": false,
            "name": "createData"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Window",
                "referenceLink": "#type-Window",
                "optional": false,
                "name": "window",
                "comment": "<p>Contains details about the created window.</p>"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Creates (opens) a new browser window with any optional sizing, position, or\ndefault URL provided.</p>",
        "name": "create"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "windowId"
          },
          {
            "type": "reference",
            "referenceType": "QueryOptions",
            "referenceLink": "#type-QueryOptions",
            "optional": true,
            "name": "queryOptions"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Window",
                "referenceLink": "#type-Window",
                "optional": false,
                "name": "window"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets details about a window.</p>",
        "name": "get"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "QueryOptions",
            "referenceLink": "#type-QueryOptions",
            "optional": true,
            "name": "queryOptions"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "referenceType": "Window",
                  "referenceLink": "#type-Window"
                },
                "optional": false,
                "name": "windows"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets all windows.</p>",
        "name": "getAll"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "QueryOptions",
            "referenceLink": "#type-QueryOptions",
            "optional": true,
            "name": "queryOptions"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Window",
                "referenceLink": "#type-Window",
                "optional": false,
                "name": "window"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the <a href='#current-window'>current window</a>.</p>",
        "name": "getCurrent"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "reference",
            "referenceType": "QueryOptions",
            "referenceLink": "#type-QueryOptions",
            "optional": true,
            "name": "queryOptions"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Window",
                "referenceLink": "#type-Window",
                "optional": false,
                "name": "window"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Gets the window that was most recently focused &mdash; typically the window\n'on top'.</p>",
        "name": "getLastFocused"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "windowId"
          },
          {
            "type": "function",
            "parameters": [],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Removes (closes) a window and all the tabs inside it.</p>",
        "name": "remove"
      },
      {
        "type": "function",
        "parameters": [
          {
            "type": "primitive",
            "primitiveType": "number",
            "optional": false,
            "name": "windowId"
          },
          {
            "type": "object",
            "properties": [
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>If <code>true</code>, causes the window to be displayed in a manner that\ndraws the user's attention to the window, without changing the focused\nwindow. The effect lasts until the user changes focus to the window. This\noption has no effect if the window already has focus. Set to\n<code>false</code> to cancel a previous <code>drawAttention</code> request.</p>",
                "optional": true,
                "name": "drawAttention"
              },
              {
                "type": "primitive",
                "primitiveType": "boolean",
                "comment": "<p>If <code>true</code>, brings the window to the front; cannot be combined with\nthe state 'minimized'. If <code>false</code>, brings the next window in the\nz-order to the front; cannot be combined with the state 'fullscreen' or\n'maximized'.</p>",
                "optional": true,
                "name": "focused"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The height to resize the window to in pixels. This value is ignored for\npanels.</p>",
                "optional": true,
                "name": "height"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The offset from the left edge of the screen to move the window to in pixels.\nThis value is ignored for panels.</p>",
                "optional": true,
                "name": "left"
              },
              {
                "type": "reference",
                "referenceType": "WindowState",
                "referenceLink": "#type-WindowState",
                "comment": "<p>The new state of the window. The 'minimized', 'maximized', and 'fullscreen'\nstates cannot be combined with 'left', 'top', 'width', or 'height'.</p>",
                "optional": true,
                "name": "state"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The offset from the top edge of the screen to move the window to in pixels.\nThis value is ignored for panels.</p>",
                "optional": true,
                "name": "top"
              },
              {
                "type": "primitive",
                "primitiveType": "number",
                "comment": "<p>The width to resize the window to in pixels. This value is ignored for\npanels.</p>",
                "optional": true,
                "name": "width"
              }
            ],
            "optional": false,
            "name": "updateInfo"
          },
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Window",
                "referenceLink": "#type-Window",
                "optional": false,
                "name": "window"
              }
            ],
            "optional": false,
            "name": "callback"
          }
        ],
        "comment": "<p>Updates the properties of a window. Specify only the properties that to be\nchanged; unspecified properties are unchanged.</p>",
        "name": "update"
      }
    ],
    "events": [
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Window",
                "referenceLink": "#type-Window",
                "optional": false,
                "name": "window",
                "comment": "<p>Details of the window. The tabs will not be populated for the window.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a window has been resized; this event is only dispatched when\nthe new bounds are committed, and not for in-progress changes.</p>",
        "name": "onBoundsChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "reference",
                "referenceType": "Window",
                "referenceLink": "#type-Window",
                "optional": false,
                "name": "window",
                "comment": "<p>Details of the created window.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a window is created.</p>",
        "name": "onCreated"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "windowId",
                "comment": "<p>ID of the newly-focused window.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when the currently focused window changes. Returns\n<code>chrome.windows.WINDOW_ID_NONE</code> if all Chrome windows have\nlost focus. <b>Note:</b> On some Linux window managers,\n<code>WINDOW_ID_NONE</code> is always sent immediately preceding a switch\nfrom one Chrome window to another.</p>",
        "name": "onFocusChanged"
      },
      {
        "type": "reference",
        "referenceType": "events.Event",
        "referenceLink": "../events/#type-Event",
        "referenceTemplates": [
          {
            "type": "function",
            "parameters": [
              {
                "type": "primitive",
                "primitiveType": "number",
                "optional": false,
                "name": "windowId",
                "comment": "<p>ID of the removed window.</p>"
              }
            ],
            "name": "listener"
          }
        ],
        "comment": "<p>Fired when a window is removed (closed).</p>",
        "name": "onRemoved"
      }
    ],
    "channel": "stable",
    "source": "index.d.ts"
  }
]